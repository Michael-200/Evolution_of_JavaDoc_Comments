[
  {
    "NameOfCommits": "1c820199fc3155c2949aaebe50ae7872883ab9e9",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2018-05-25T12:47:40Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "2e6618718b821c3d7c4f552b1e81b4992cbfda2d",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "237-356",
    "Date": "2018-05-15T17:38:36Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "a511083d8c064dfb24a878cc67ea6699b310e609",
    "Signature": "int size()",
    "Namespace": "sem2.hw2.task2",
    "Range": "408-499",
    "Date": "2018-05-14T13:11:00Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "09943b730e4addc718d61ac7773ca61c58d7898b",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw2.task2",
    "Range": "505-620",
    "Date": "2018-05-14T13:11:00Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "d27e57906e2f58518398375a05a4b80ebc1f4171",
    "Signature": "protected \u003cT extends Comparable\u003cT\u003e\u003e void swap(T[] array, int i, int j) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "116-456",
    "Date": "2018-05-05T11:58:01Z",
    "NGrams": [
      "Swaps two",
      "two elements",
      "elements in",
      "in the",
      "the array",
      "array param",
      "param array",
      "array an",
      "an array",
      "array where",
      "where swapping",
      "swapping is",
      "is done",
      "done param",
      "param i",
      "i index",
      "index of",
      "of the",
      "the first",
      "first element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param j",
      "j index",
      "index of",
      "of the",
      "the second",
      "second element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "BaseSorter.java",
    "Content": "Swaps two elements in the array @param array an array where swapping is done @param i index of the first element in the array @param j index of the second element in the array @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "2e16f826462a86b08e2705d65cc05b2315d915e3",
    "Signature": "public static \u003cT extends Comparable\u003cT\u003e\u003e boolean isSorted(T[] array) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "549-868",
    "Date": "2018-05-05T11:58:01Z",
    "NGrams": [
      "Checks whether",
      "whether an",
      "an array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order",
      "order param",
      "param array",
      "array an",
      "an array",
      "array which",
      "which is",
      "is being",
      "being checked",
      "checked param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array",
      "array return",
      "return code",
      "code true",
      "true if",
      "if code",
      "code array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order"
    ],
    "Location": "BaseSorter.java",
    "Content": "Checks whether an array is sorted in ascending order @param array an array which is being checked @param \u003cT\u003e type of elements in the array @return { @code true} if { @code array} is sorted in ascending order "
  },
  {
    "NameOfCommits": "7494c4bb6397eb5bc88f1d277b5fa374a7489884",
    "Signature": "\u003cT extends Comparable\u003cT\u003e\u003e void sort(T[] array)",
    "Namespace": "sem2.hw3.task1",
    "Range": "105-334",
    "Date": "2018-04-15T14:25:12Z",
    "NGrams": [
      "Sorts code",
      "code array",
      "array in",
      "in ascending",
      "ascending order",
      "order using",
      "using link",
      "link Comparable",
      "Comparable compareTo",
      "compareTo param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "Sorter.java",
    "Content": "Sorts { @code array} in ascending order using { @link Comparable#compareTo} @param array an array to sort @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "24ad26183fd73f4e7bf89c7155f8d32da5be1f14",
    "Signature": "public class ConsoleSpiralOutputter extends DefaultSpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "25-165",
    "Date": "2018-04-15T14:25:12Z",
    "NGrams": [
      "Table spiral",
      "spiral outputter",
      "outputter using",
      "using link",
      "link System",
      "System out",
      "out as",
      "as a",
      "a destination"
    ],
    "Location": "ConsoleSpiralOutputter.java",
    "Content": " Table spiral outputter using { @link System#out} as a destination "
  },
  {
    "NameOfCommits": "b3ec6cc6f8da6ef8728096375dc1b99e26957511",
    "Signature": "public abstract class DefaultSpiralOutputter implements SpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "54-267",
    "Date": "2018-04-15T14:24:13Z",
    "NGrams": [
      "Default SpiralOutputter",
      "SpiralOutputter implementation",
      "implementation Can",
      "Can output",
      "output a",
      "a table",
      "table to",
      "to any",
      "any link",
      "link PrintStream",
      "PrintStream including",
      "including System",
      "System out",
      "out and",
      "and any",
      "any file"
    ],
    "Location": "DefaultSpiralOutputter.java",
    "Content": "Default SpiralOutputter implementation.Can output a table to any { @link PrintStream}including System.out and any file."
  },
  {
    "NameOfCommits": "877b741d84ee71ca49b0e111c026814e3952c0b5",
    "Signature": "public FileSpiralOutputter(String fileName) throws FileNotFoundException ",
    "Namespace": "sem2.hw3.task2",
    "Range": "208-511",
    "Date": "2018-04-15T14:23:08Z",
    "NGrams": [
      "Creates outputter",
      "outputter associated",
      "associated with",
      "with file",
      "file named",
      "named code",
      "code fileName",
      "fileName param",
      "param fileName",
      "fileName name",
      "name of",
      "of the",
      "the file",
      "file to",
      "to output",
      "output the",
      "the table",
      "table in",
      "in throws",
      "throws FileNotFoundException",
      "FileNotFoundException if",
      "if no",
      "no file",
      "file named",
      "named code",
      "code fileName",
      "fileName was",
      "was found"
    ],
    "Location": "FileSpiralOutputter.java",
    "Content": "Creates outputter associated with file named { @code fileName} @param fileName name of the file to output the table in @throws FileNotFoundException if no file named { @code fileName} was found "
  },
  {
    "NameOfCommits": "63e16cee72f5fd0a3a4df3fc5ae2172320ae4a48",
    "Signature": "void outputSpirally(int[][] table)",
    "Namespace": "sem2.hw3.task2",
    "Range": "114-241",
    "Date": "2018-04-15T14:22:41Z",
    "NGrams": [
      "Outputs code",
      "code table",
      "table spirally",
      "spirally param",
      "param table",
      "table a",
      "a table",
      "table to",
      "to output"
    ],
    "Location": "SpiralOutputter.java",
    "Content": "Outputs { @code table} spirally @param table a table to output "
  },
  {
    "NameOfCommits": "35bb48146bee10ccc2fa9d8df34aafba64d109bf",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-134",
    "Date": "2018-04-15T14:22:41Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used for",
      "for providing",
      "providing some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashTable"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used for providing some hash function for { @link HashTable}. "
  },
  {
    "NameOfCommits": "aed63086fa5a57f9a4380d2221d1b379c0a2a17e",
    "Signature": "int hash(T key)",
    "Namespace": "sem2.hw4.task2",
    "Range": "139-357",
    "Date": "2018-04-15T14:21:42Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code key",
      "key Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashTable",
      "HashTable hashCount",
      "hashCount param",
      "param key",
      "key the",
      "the value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of the",
      "the code",
      "code key"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code key}.Should return an integer from 0 to { @link HashTable#hashCount}. @param key the value for hashing @return hash of the { @code key} "
  },
  {
    "NameOfCommits": "945e2f7d66eaf8f2e412a6604fa9a04b70fd5fd8",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-169",
    "Date": "2018-04-15T14:21:42Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "e8fac724ce8c9eb5609102279654bb496ec30516",
    "Signature": "public int getBadHash() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "288-420",
    "Date": "2018-04-04T16:47:01Z",
    "NGrams": [
      "Returns the",
      "the bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated",
      "generated return",
      "return bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": "Returns the bad hash that was generated. @return bad hash that was generated "
  },
  {
    "NameOfCommits": "97e44d1898206f1ab241d924d019d4d1321ba6a8",
    "Signature": "public class HashTable\u003cK, V\u003e implements Iterable\u003cV\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "122-428",
    "Date": "2018-04-04T16:47:01Z",
    "NGrams": [
      "Hash table",
      "table that",
      "that allows",
      "allows adding",
      "adding values",
      "values of",
      "of the",
      "the type",
      "type code",
      "code V",
      "V associated",
      "associated with",
      "with keys",
      "keys of",
      "of the",
      "the type",
      "type code",
      "code K",
      "K Hash",
      "Hash function",
      "function should",
      "should be",
      "be provided",
      "provided by",
      "by client",
      "client an",
      "an can",
      "can be",
      "be changed",
      "changed in",
      "in runtime",
      "runtime param",
      "param K",
      "K the",
      "the type",
      "type of",
      "of keys",
      "keys param",
      "param V",
      "V the",
      "the type",
      "type of",
      "of values"
    ],
    "Location": "HashTable.java",
    "Content": "Hash table that allows adding values of the type { @code V} associated with keys of the type { @code K}Hash function should be provided by client an can be changed in runtime. @param \u003cK\u003e the type of keys @param \u003cV\u003e the type of values "
  },
  {
    "NameOfCommits": "6f4d29da8c22144e2b483cb0cea7ea0e89ece539",
    "Signature": "public void add(K key, V value) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2128-2520",
    "Date": "2018-04-04T16:45:24Z",
    "NGrams": [
      "Adds the",
      "the code",
      "code value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key to",
      "to the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key for",
      "for the",
      "the value",
      "value to",
      "to be",
      "be associated",
      "associated with",
      "with param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be added",
      "added throws",
      "throws KeyAlreadyExistsException",
      "KeyAlreadyExistsException if",
      "if the",
      "the code",
      "code key",
      "key already",
      "already exists",
      "exists in",
      "in the",
      "the table",
      "table throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Adds the { @code value} associated with the { @code key} to the set. @param key the key for the value to be associated with @param value the value to be added @throws KeyAlreadyExistsException if the { @code key} already exists in the table @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "04c82ace8bffdac27131e8184327923ee541141d",
    "Signature": "public void remove(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2884-3195",
    "Date": "2018-04-04T16:43:55Z",
    "NGrams": [
      "Removes the",
      "the value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key from",
      "from the",
      "the set",
      "set Does",
      "Does nothing",
      "nothing in",
      "in case",
      "case of",
      "of not",
      "not founding",
      "founding this",
      "this key",
      "key in",
      "in the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key to",
      "to be",
      "be removed",
      "removed with",
      "with its",
      "its value",
      "value throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Removes the value associated with the { @code key} from the set.Does nothing in case of not founding this key in the set. @param key the key to be removed with its value @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "518631381e67450c75447321f32600c9542133bc",
    "Signature": "public boolean doesContain(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "3622-3912",
    "Date": "2018-04-04T16:43:55Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the set",
      "set contains",
      "contains a",
      "a value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key param",
      "param key",
      "key the",
      "the value",
      "value to",
      "to search",
      "search for",
      "for return",
      "return true",
      "true if",
      "if code",
      "code key",
      "key was",
      "was found",
      "found throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Checks if the set contains a value associated with the { @code key}. @param key the value to search for @return true if { @code key} was found @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "9451aeb893ce452d5451a7ac7ceb094f3b925271",
    "Signature": "public void setHasher(Hasher\u003cK\u003e newHasher) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "4258-4501",
    "Date": "2018-04-04T16:41:29Z",
    "NGrams": [
      "Change used",
      "used hash",
      "hash function",
      "function param",
      "param newHasher",
      "newHasher object",
      "object that",
      "that implements",
      "implements link",
      "link Hasher",
      "Hasher interface",
      "interface throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Change used hash function. @param newHasher object that implements { @link Hasher} interface @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "1ba00289d90ed03c6da3d24f56cd04504019494a",
    "Signature": "public int size() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5083-5186",
    "Date": "2018-04-04T16:41:29Z",
    "NGrams": [
      "Size of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Size of the set. @return number of objects in the set "
  },
  {
    "NameOfCommits": "6e9a8cbad217ba323ec3f63e20df66840545916c",
    "Signature": "public double loadFactor() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5219-5370",
    "Date": "2018-04-02T09:03:05Z",
    "NGrams": [
      "Load factor",
      "factor of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects divided",
      "divided by",
      "by number",
      "number of",
      "of different",
      "different hash",
      "hash values"
    ],
    "Location": "HashTable.java",
    "Content": "Load factor of the set. @return number of objects divided by number of different hash values "
  },
  {
    "NameOfCommits": "4086d8e98c77b6e754b99c47e56386f9b5acbcad",
    "Signature": "public int maxListLength() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5420-5591",
    "Date": "2018-04-02T09:03:05Z",
    "NGrams": [
      "Returns the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set",
      "set return",
      "return the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Returns the length of the maximum-sized list in the set. @return the length of the maximum-sized list in the set "
  },
  {
    "NameOfCommits": "8d2c0dbc9b496b10a99ea136436899cf0ab5fb47",
    "Signature": "public class KeyAlreadyExistsException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-203",
    "Date": "2018-04-02T09:02:46Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody wants",
      "wants to",
      "to link",
      "link sem2",
      "sem2 hw4",
      "hw4 task2",
      "task2 HashTable",
      "HashTable add",
      "add an",
      "an existing",
      "existing key",
      "key to",
      "to a",
      "a table"
    ],
    "Location": "KeyAlreadyExistsException.java",
    "Content": " An exception thrown if somebody wants to { @link sem2.hw4.task2.HashTable#add} an existing key to a table. "
  },
  {
    "NameOfCommits": "7e2567ae1886d156b4a81babcb136bcdd474b023",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "106-233",
    "Date": "2018-04-02T09:02:26Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "678045b55c9daea28c9eb5cd767372ee74058e9d",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "239-359",
    "Date": "2018-04-02T09:02:26Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "288689bf66ae4e42ffa55633000eaa6d925b9d6b",
    "Signature": "void remove(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "365-539",
    "Date": "2018-04-02T09:01:41Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list If",
      "If the",
      "the value",
      "value was",
      "was not",
      "not found",
      "found does",
      "does nothing",
      "nothing param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed"
    ],
    "Location": "List.java",
    "Content": "Removes { @code value} from the list.If the value was not found, does nothing. @param value the value to be removed "
  },
  {
    "NameOfCommits": "217c55f1e0f4854fe5358fe79153368f752695cc",
    "Signature": "boolean doesContain(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "545-737",
    "Date": "2018-04-02T09:01:41Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value",
      "value param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to look",
      "look for",
      "for return",
      "return true",
      "true if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value"
    ],
    "Location": "List.java",
    "Content": "Checks if the list contains { @code value}. @param value the value to look for @return true if the list contains { @code value} "
  },
  {
    "NameOfCommits": "47131f3b1ea9a33819238e07011aa115c5f5cd75",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task2",
    "Range": "790-882",
    "Date": "2018-04-02T09:01:22Z",
    "NGrams": [
      "Get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "Get the size of the list. @return size of the list "
  },
  {
    "NameOfCommits": "e9b7a584f173f569b917dc037ab7908121f6450a",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task2",
    "Range": "888-1004",
    "Date": "2018-03-20T08:00:20Z",
    "NGrams": [
      "Checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "Checks whether our list is empty. @return true if our list is empty "
  },
  {
    "NameOfCommits": "92294ec3ae6a66b955a91f2c8d728245111f5664",
    "Signature": "public class SinglyLinkedList\u003cT\u003e implements List\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "94-303",
    "Date": "2018-03-20T08:00:20Z",
    "NGrams": [
      "Singly linked",
      "linked list",
      "list implementation",
      "implementation Can",
      "Can be",
      "be iterated",
      "iterated through",
      "through using",
      "using foreach",
      "foreach iterator",
      "iterator implementation",
      "implementation supports",
      "supports link",
      "link java",
      "java util",
      "util Iterator",
      "Iterator remove"
    ],
    "Location": "SinglyLinkedList.java",
    "Content": " Singly-linked list implementation.Can be iterated through using foreach, iterator implementationsupports { @link java.util.Iterator#remove}. "
  },
  {
    "NameOfCommits": "253f9b3b5355d59614cad1f23e7120be2a7435f1",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "105-231",
    "Date": "2018-03-20T07:33:51Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "065496c309fc550459c88a84dce9ca13febb5c1c",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "237-356",
    "Date": "2018-03-20T07:23:15Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "e9c0369176ba1728696953b88bf9678ec29ff665",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task1",
    "Range": "408-499",
    "Date": "2018-03-20T07:09:32Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "fb9968d1b12b2935dc8b459bcb8c33dcf76e34b5",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task1",
    "Range": "505-620",
    "Date": "2018-03-20T07:09:32Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "2a93891527f8bc7bcd5e5698246a50922dbae749",
    "Signature": "public class UniqueList\u003cT\u003e extends SinglyLinkedList\u003cT\u003e ",
    "Namespace": "sem2.hw4.task1",
    "Range": "53-170",
    "Date": "2018-03-20T06:48:09Z",
    "NGrams": [
      "A list",
      "list where",
      "where every",
      "every element",
      "element could",
      "could be",
      "be present",
      "present only",
      "only once"
    ],
    "Location": "UniqueList.java",
    "Content": " A list where every element could be present only once "
  },
  {
    "NameOfCommits": "91fe909414f4d74d3954672d8d2fcbd35b39f0a6",
    "Signature": "public void addFirst(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "396-527",
    "Date": "2018-03-20T06:11:04Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already have",
      "have code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already have { @code value} in it "
  },
  {
    "NameOfCommits": "92a139b3b8ae739fc5e92735e19f6f183f43c1b6",
    "Signature": "public void addLast(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "652-786",
    "Date": "2018-03-20T06:11:04Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already contains",
      "contains code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already contains { @code value} in it "
  },
  {
    "NameOfCommits": "ca23406664bdb05ddfd0071d2a1491436731c4ba",
    "Signature": "public void remove(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "910-1129",
    "Date": "2018-03-17T15:17:35Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed",
      "removed throws",
      "throws NoSuchElementException",
      "NoSuchElementException if",
      "if the",
      "the list",
      "list does",
      "does not",
      "not contain",
      "contain code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": "Removes { @code value} from the list @param value the value to be removed @throws NoSuchElementException if the list does not contain { @code value} in it "
  },
  {
    "NameOfCommits": "942241a6eb0a76aa71c95a2012d8f2500cf8e789",
    "Signature": "public Expression(String expressionString) throws BadExpressionException ",
    "Namespace": "sem2.hw6.task1",
    "Range": "2059-2740",
    "Date": "2018-03-17T15:17:13Z",
    "NGrams": [
      "Creates an",
      "an ExpressionTree",
      "ExpressionTree by",
      "by a",
      "a specially",
      "specially formatted",
      "formatted string",
      "string code",
      "code expressionString",
      "expressionString should",
      "should be",
      "be formatted",
      "formatted as",
      "as follows",
      "follows br",
      "br Expr",
      "Expr is",
      "is a",
      "a positive",
      "positive integer",
      "integer number",
      "number or",
      "or Op",
      "Op Expr",
      "Expr Expr",
      "Expr br",
      "br where",
      "where Op",
      "Op is",
      "is an",
      "an operation",
      "operation one",
      "one of",
      "of br",
      "br So",
      "So the",
      "the correctly",
      "correctly formatted",
      "formatted string",
      "string is",
      "is Expr",
      "Expr br",
      "br Examples",
      "Examples of",
      "of good",
      "good strings",
      "strings ul",
      "ul li",
      "li 123",
      "123 li",
      "li li",
      "li 2",
      "2 2",
      "2 li",
      "li li",
      "li 4",
      "4 6",
      "6 12",
      "12 li",
      "li ul",
      "ul param",
      "param expressionString",
      "expressionString the",
      "the formatted",
      "formatted string",
      "string throws",
      "throws BadExpressionException",
      "BadExpressionException if",
      "if code",
      "code expressionString",
      "expressionString is",
      "is not",
      "not formatted",
      "formatted properly"
    ],
    "Location": "Expression.java",
    "Content": " Creates an ExpressionTree by a specially-formatted string.{ @code expressionString} should be formatted as follows:\u003cbr\u003eExpr is a positive integer number or (Op Expr Expr)\u003cbr\u003ewhere Op is an operation -- one of (+, -, , ).\u003cbr\u003eSo the correctly-formatted string is Expr.\u003cbr\u003e Examples of good strings:\u003cul\u003e \u003cli\u003e123\u003cli\u003e \u003cli\u003e(+ 2 2)\u003cli\u003e \u003cli\u003e(- ( 4 6) 12)\u003cli\u003e\u003cul\u003e @param expressionString the formatted string @throws BadExpressionException if { @code expressionString} is not formatted properly "
  },
  {
    "NameOfCommits": "c329a7bec243c879292b364b075c3c685f6f6012",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-129",
    "Date": "2018-03-11T11:14:27Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used to",
      "to provide",
      "provide some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashSet"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used to provide some hash function for { @link HashSet}. "
  },
  {
    "NameOfCommits": "92efd01e9efbedc5ec5120e6bcad7ea7bd40095b",
    "Signature": "int hash(T value)",
    "Namespace": "sem2.hw6.task2",
    "Range": "134-353",
    "Date": "2018-03-11T11:19:25Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code value",
      "value Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashSet",
      "HashSet HASH",
      "HASH COUNT",
      "COUNT param",
      "param value",
      "value a",
      "a value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of code",
      "code value"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code value}.Should return an integer from 0 to { @link HashSet#HASH_COUNT}. @param value a value for hashing @return hash of { @code value} "
  },
  {
    "NameOfCommits": "5a6e100270aef82c79757b41ce4282036e87d946",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-169",
    "Date": "2018-03-11T10:45:12Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "30534a9909fe47f889b9fd5d365a3f09bd5a724f",
    "Signature": "public class HashSet\u003cT\u003e implements Set\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "46-187",
    "Date": "2018-03-11T10:45:12Z",
    "NGrams": [
      "The set",
      "set that",
      "that groups",
      "groups its",
      "its elements",
      "elements by",
      "by their",
      "their hashes",
      "hashes so",
      "so it",
      "it becomes",
      "becomes easier",
      "easier to",
      "to find",
      "find one",
      "one of",
      "of them"
    ],
    "Location": "HashSet.java",
    "Content": " The set that groups its elements by their hashes so it becomes easier to find one of them. "
  },
  {
    "NameOfCommits": "2008d7ffe9164845af073275305da1dc8a68dfd0",
    "Signature": "public enum TurnResult ",
    "Namespace": "sem2.hw7.task2",
    "Range": "140-246",
    "Date": "2018-03-11T08:58:15Z",
    "NGrams": [
      "The enumeration",
      "enumeration of",
      "of thing",
      "thing that",
      "that could",
      "could happen",
      "happen after",
      "after a",
      "a turn",
      "turn was",
      "was performed"
    ],
    "Location": "TicTacToe.java",
    "Content": " The enumeration of thing that could happen after a turn was performed. "
  },
  {
    "NameOfCommits": "e8840490ee9424712c5bc2d0c86e75c90a8c043b",
    "Signature": "public TicTacToe(int N) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1159-1279",
    "Date": "2018-03-11T07:49:43Z",
    "NGrams": [
      "Start a",
      "a game",
      "game with",
      "with field",
      "field side",
      "side size",
      "size code",
      "code N",
      "N param",
      "param N",
      "N field",
      "field side",
      "side size"
    ],
    "Location": "TicTacToe.java",
    "Content": " Start a game with field side size \u003d { @code N}. @param N field side size "
  },
  {
    "NameOfCommits": "d5f72119f1eb477fff70e8ced73db3eb26f899e1",
    "Signature": "public TurnResult makeTurn(int i, int j) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1492-1804",
    "Date": "2018-03-11T06:49:16Z",
    "NGrams": [
      "Place next",
      "next cross",
      "cross or",
      "or zero",
      "zero to",
      "to the",
      "the code",
      "code i",
      "i code",
      "code j",
      "j cell",
      "cell param",
      "param i",
      "i the",
      "the row",
      "row where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero param",
      "param j",
      "j the",
      "the column",
      "column where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero return",
      "return An",
      "An link",
      "link TurnResult",
      "TurnResult entity",
      "entity see",
      "see TurnResult"
    ],
    "Location": "TicTacToe.java",
    "Content": " Place next cross or zero to the ({ @code i}, { @code j}) cell. @param i the row where to put the next cross or zero. @param j the column where to put the next cross or zero. @return An { @link TurnResult} entity. @see TurnResult "
  },
  {
    "NameOfCommits": "15101af0e640baff839c6bc3e22d33e0bb6cc6ac",
    "Signature": "public class ClassPrinter ",
    "Namespace": "sem2.hw7.task1",
    "Range": "54-336",
    "Date": "2018-03-11T05:52:13Z",
    "NGrams": [
      "The class",
      "class that",
      "that can",
      "can output",
      "output some",
      "some RTTI",
      "RTTI Instead",
      "Instead of",
      "of standard",
      "standard testing",
      "testing which",
      "which is",
      "is inconvenient",
      "inconvenient here",
      "here one",
      "one can",
      "can pass",
      "pass different",
      "different classes",
      "classes into",
      "into print",
      "print statement",
      "statement in",
      "in main",
      "main Some",
      "Some classes",
      "classes to",
      "to check",
      "check are",
      "are declared",
      "declared below",
      "below standard",
      "standard library",
      "library could",
      "could also",
      "also be",
      "be used"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The class that can output some RTTI.Instead of standard testing, which is inconvenient here,one can pass different classes into print() statement in main().Some classes to check are declared below, standard library could also be used. "
  },
  {
    "NameOfCommits": "745ec4f46a58a89811fdbe37cf112b3c933a4bd9",
    "Signature": "public static void print(Class\u003c?\u003e clazz) ",
    "Namespace": "sem2.hw7.task1",
    "Range": "6219-6413",
    "Date": "2018-03-11T05:52:13Z",
    "NGrams": [
      "The method",
      "method that",
      "that prints",
      "prints some",
      "some RTTI",
      "RTTI Works",
      "Works with",
      "with classes",
      "classes interfaces",
      "interfaces and",
      "and enums",
      "enums param",
      "param clazz",
      "clazz a",
      "a class",
      "class to",
      "to learn",
      "learn something",
      "something about"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The method that prints some RTTI.Works with classes, interfaces and enums. @param clazz a class to learn something about "
  },
  {
    "NameOfCommits": "bcde3083393d720aef753b80b6b85c1698b73e5b",
    "Signature": "public class Sorters\u003cT extends Comparable\u003cT\u003e\u003e extends RecursiveAction ",
    "Namespace": "sem2.hw8.task2",
    "Range": "141-300",
    "Date": "2018-03-05T15:51:51Z",
    "NGrams": [
      "The class",
      "class that",
      "that provides",
      "provides parallel",
      "parallel and",
      "and non",
      "non parallel",
      "parallel quicksort",
      "quicksort implementations"
    ],
    "Location": "Sorters.java",
    "Content": "The class that provides parallel and non-parallel quicksort implementations. "
  },
  {
    "NameOfCommits": "6a39b16684f1fce50517caa505af5b2a9208d069",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void parallelSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "951-1211",
    "Date": "2018-03-05T15:52:01Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList using",
      "using multiple",
      "multiple threads",
      "threads param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} using multiple threads. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "6d86e7a22b51ecbbad346a6b1dd2aa96ad0843da",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void singleThreadSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "1398-1662",
    "Date": "2018-03-05T15:51:19Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList without",
      "without multithreading",
      "multithreading param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} without multithreading. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "3191108ba5d44e74a2598b04f1036db4021fd404",
    "Signature": "public class EmptyQueueException extends Exception ",
    "Namespace": "sem2.test1.task1",
    "Range": "27-170",
    "Date": "2018-03-05T15:51:19Z",
    "NGrams": [
      "an exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody was",
      "was trying",
      "trying to",
      "to remove",
      "remove an",
      "an element",
      "element form",
      "form an",
      "an empty",
      "empty queue"
    ],
    "Location": "EmptyQueueException.java",
    "Content": " an exception thrown if somebody was trying to remove an element form an empty queue "
  },
  {
    "NameOfCommits": "540428ad4b0010c107feea706823bf105d1553eb",
    "Signature": "void enqueue(T element, int priority)",
    "Namespace": "sem2.test1.task1",
    "Range": "133-336",
    "Date": "2018-03-05T15:50:35Z",
    "NGrams": [
      "Put an",
      "an code",
      "code element",
      "element with",
      "with code",
      "code priority",
      "priority into",
      "into the",
      "the queue",
      "queue param",
      "param element",
      "element value",
      "value to",
      "to be",
      "be put",
      "put into",
      "into the",
      "the queue",
      "queue param",
      "param priority",
      "priority its",
      "its priority"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Put an { @code element} with { @code priority} into the queue @param element value to be put into the queue @param priority its priority "
  },
  {
    "NameOfCommits": "e36a5641549d164f5a5a0eac8579b09f8e25d376",
    "Signature": "T dequeue() throws EmptyQueueException",
    "Namespace": "sem2.test1.task1",
    "Range": "342-580",
    "Date": "2018-03-05T15:50:10Z",
    "NGrams": [
      "Get an",
      "an element",
      "element with",
      "with maximum",
      "maximum priority",
      "priority from",
      "from the",
      "the queue",
      "queue and",
      "and remove",
      "remove it",
      "it throws",
      "throws EmptyQueueException",
      "EmptyQueueException if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty and",
      "and there",
      "there is",
      "is nothing",
      "nothing to",
      "to return",
      "return return",
      "return removed",
      "removed value"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Get an element with maximum priority from the queue and remove it @throws EmptyQueueException if the queue is empty and there is nothing to return @return removed value "
  },
  {
    "NameOfCommits": "752bd9b3a80f227269479fd4c5cb9c073eae561d",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.test1.task1",
    "Range": "586-691",
    "Date": "2018-03-05T15:50:10Z",
    "NGrams": [
      "checks if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if the",
      "the queue",
      "queue is",
      "is empty"
    ],
    "Location": "PriorityQueue.java",
    "Content": " checks if the queue is empty @return true if the queue is empty "
  },
  {
    "NameOfCommits": "f03742b8e6738b60d62a0396516494492f32880a",
    "Signature": "public CannonBall(long startTime, double x0, double y0, double angle) ",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "703-1073",
    "Date": "2018-03-05T07:47:26Z",
    "NGrams": [
      "Create a",
      "a bullet",
      "bullet with",
      "with all",
      "all necessary",
      "necessary initial",
      "initial parameters",
      "parameters param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the ball",
      "ball is",
      "is being",
      "being fired"
    ],
    "Location": "CannonBall.java",
    "Content": "Create a bullet with all necessary initial parameters @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the ball is being fired "
  },
  {
    "NameOfCommits": "e307fda1d70ee2e1c1c8af6d0c6634646322e84c",
    "Signature": "public abstract Explosion getExplosion(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "236-599",
    "Date": "2017-12-28T10:32:50Z",
    "NGrams": [
      "Get the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown",
      "blown in",
      "in the",
      "the point",
      "point x",
      "x y",
      "y param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion return",
      "return the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown"
    ],
    "Location": "TankBullet.java",
    "Content": "Get the explosion which would happen if the bullet was blown in the point (x, y) @param x x-coord of the point of the generated explosion @param y y-coord of the point of the generated explosion @return the explosion which would happen if the bullet was blown "
  },
  {
    "NameOfCommits": "bf04548fc070640a66c20e9a3887c7c129e924e2",
    "Signature": "public abstract void draw(Graphics2D graphics)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "605-756",
    "Date": "2017-12-28T10:32:50Z",
    "NGrams": [
      "draw the",
      "the bullet",
      "bullet param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "TankBullet.java",
    "Content": "draw the bullet @param graphics the { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "c66384b8b485438bb3084be456b00948fb3806ff",
    "Signature": "public abstract void update(long time)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "762-900",
    "Date": "2017-12-28T09:43:11Z",
    "NGrams": [
      "Update the",
      "the bullet",
      "bullet position",
      "position param",
      "param time",
      "time current",
      "current system",
      "system time",
      "time in",
      "in millis"
    ],
    "Location": "TankBullet.java",
    "Content": "Update the bullet position @param time current system time in millis "
  },
  {
    "NameOfCommits": "8c408b6c489902c0ca1f5f02f59d53cb0bac197c",
    "Signature": "public abstract double getX0()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "906-1021",
    "Date": "2017-12-28T09:43:11Z",
    "NGrams": [
      "get the",
      "the initial",
      "initial x",
      "x cooord",
      "cooord return",
      "return the",
      "the initial",
      "initial x",
      "x cooord"
    ],
    "Location": "TankBullet.java",
    "Content": "get the initial x-cooord @return the initial x-cooord "
  },
  {
    "NameOfCommits": "5198e20d95768bbf99a29d4cc8b767271e124e10",
    "Signature": "public abstract double getX()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1027-1167",
    "Date": "2017-12-28T09:18:53Z",
    "NGrams": [
      "get the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current x-coord of the bullet @return the current x-coord of the bullet "
  },
  {
    "NameOfCommits": "5aa1981d12fcd49798f6558e1dcb19a4211c74c2",
    "Signature": "public abstract double getY()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1173-1313",
    "Date": "2017-12-28T09:18:53Z",
    "NGrams": [
      "get the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current y-coord of the bullet @return the current y-coord of the bullet "
  },
  {
    "NameOfCommits": "484facf23d63a67f8c1ba5a647153a9048ce631e",
    "Signature": "public abstract BulletPackage getPackage()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1319-1495",
    "Date": "2017-12-28T02:55:18Z",
    "NGrams": [
      "form a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet",
      "bullet return",
      "return a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "form a { @link BulletPackage} based on this bullet @return a { @link BulletPackage} based on this bullet "
  },
  {
    "NameOfCommits": "b2c1e51f28b5910ba4e2fa27d0fd527b6622c8ec",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "166-330",
    "Date": "2017-12-24T07:52:25Z",
    "NGrams": [
      "draw the",
      "the current",
      "current state",
      "state of",
      "of explosion",
      "explosion param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Explosion.java",
    "Content": "draw the current state of explosion @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "cea1fddaee5e8aab98c7ace4d99d39b71cfd5704",
    "Signature": "public abstract boolean update(long currentTime)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "337-565",
    "Date": "2017-12-24T07:52:25Z",
    "NGrams": [
      "Update the",
      "the explosion",
      "explosion state",
      "state basically",
      "basically the",
      "the sound",
      "sound wave",
      "wave param",
      "param currentTime",
      "currentTime current",
      "current tyme",
      "tyme of",
      "of the",
      "the system",
      "system return",
      "return code",
      "code true",
      "true if",
      "if it",
      "it still",
      "still explodes"
    ],
    "Location": "Explosion.java",
    "Content": "Update the explosion state (basically the sound wave) @param currentTime current tyme of the system @return { @code true} if it still explodes "
  },
  {
    "NameOfCommits": "e76d6106ce70afdc4055a3fd4879e9d5874dac3d",
    "Signature": "public abstract boolean inAffectedZone(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "571-835",
    "Date": "2017-12-10T22:49:27Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone",
      "zone param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone"
    ],
    "Location": "Explosion.java",
    "Content": "Check if the point is in the affected zone @param x x-coord of the point @param y y-coord of the point @return { @code true} if the point is in the affected zone "
  },
  {
    "NameOfCommits": "86710f1eac8a6b27c354d5bc5554f7164e3c6820",
    "Signature": "public class NoExplosion extends Explosion ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "41-160",
    "Date": "2017-10-31T13:22:13Z",
    "NGrams": [
      "Explosion mock",
      "mock which",
      "which is",
      "is not",
      "not drawn",
      "drawn but",
      "but has",
      "has the",
      "the affection",
      "affection radius"
    ],
    "Location": "NoExplosion.java",
    "Content": "Explosion-mock which is not drawn, but has the affection radius "
  },
  {
    "NameOfCommits": "1d7608338c9e736e062f77a4421596f480e4142b",
    "Signature": "public void draw(Graphics2D graphics, double angle, double x, double y) ",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "203-524",
    "Date": "2017-10-14T20:47:04Z",
    "NGrams": [
      "draw the",
      "the gun",
      "gun param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw into",
      "into param",
      "param angle",
      "angle the",
      "the angle",
      "angle for",
      "for gun",
      "gun to",
      "to be",
      "be placed",
      "placed param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun",
      "gun param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "draw the gun @param graphics the { @link Graphics2D} context to draw into @param angle the angle for gun to be placed @param x x-coord of the root of the gun @param y y-coord of the root of the gun "
  },
  {
    "NameOfCommits": "0be135a178a0c40ad69ee0290481dd32ee320331",
    "Signature": "protected abstract Shape getShape()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1149-1315",
    "Date": "2017-10-14T20:47:04Z",
    "NGrams": [
      "get the",
      "the basic",
      "basic unrotated",
      "unrotated shape",
      "shape of",
      "of the",
      "the gun",
      "gun return",
      "return link",
      "link Shape",
      "Shape entity",
      "entity which",
      "which id",
      "id the",
      "the shape",
      "shape of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "get the basic unrotated shape of the gun @return { @link Shape} entity which id the shape of the gun "
  },
  {
    "NameOfCommits": "98fc89969d0a414fcc0c3ce15cc9e989a3043c5d",
    "Signature": "public abstract TankBullet getBullet(long startTime, double x0, double y0, double angle)",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1321-1704",
    "Date": "2017-10-14T20:30:44Z",
    "NGrams": [
      "Produce a",
      "a bullet",
      "bullet param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the bullet",
      "bullet is",
      "is being",
      "being fired",
      "fired return",
      "return the",
      "the new",
      "new bullet"
    ],
    "Location": "TankGun.java",
    "Content": "Produce a bullet @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the bullet is being fired @return the new bullet "
  },
  {
    "NameOfCommits": "dc1a9e069b895a66303b4fad63ccdf33b16b374d",
    "Signature": "public abstract TankGun getNextGun()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1710-1863",
    "Date": "2017-10-14T20:30:44Z",
    "NGrams": [
      "Get the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns",
      "guns return",
      "return the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns"
    ],
    "Location": "TankGun.java",
    "Content": "Get the next gun in the list af all guns @return the next gun in the list af all guns "
  },
  {
    "NameOfCommits": "017a256f423bfdb128d6f710b35aaa5b7672b0b7",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1667-1803",
    "Date": "2017-10-10T23:50:16Z",
    "NGrams": [
      "draws the",
      "the landscape",
      "landscape param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "Landscape.java",
    "Content": " draws the landscape @param graphics { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "33b1330ce270ad55e5d5edf4d52ee74fce20c72c",
    "Signature": "public double getY(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1896-2086",
    "Date": "2017-10-10T23:23:27Z",
    "NGrams": [
      "get the",
      "the y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface",
      "surface param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate for",
      "for which",
      "which we",
      "we need",
      "need its",
      "its height",
      "height return",
      "return y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface"
    ],
    "Location": "Landscape.java",
    "Content": "get the y-coordinate on the surface @param x x-coordinate for which we need its height @return y-coordinate on the surface "
  },
  {
    "NameOfCommits": "4e119343978c8b1fc5b6364b7abdfb25fc459cde",
    "Signature": "public double getAngle(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2542-2919",
    "Date": "2017-10-10T23:49:54Z",
    "NGrams": [
      "get the",
      "the angle",
      "angle of",
      "of the",
      "the surface",
      "surface where",
      "where x",
      "x coordinate",
      "coordinate is",
      "is code",
      "code x",
      "x code",
      "code param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate to",
      "to find",
      "find the",
      "the angle",
      "angle return",
      "return the",
      "the angle",
      "angle from",
      "from pi",
      "pi 2",
      "2 pi",
      "pi 2",
      "2 in",
      "in radians",
      "radians If",
      "If the",
      "the height",
      "height is",
      "is growing",
      "growing y",
      "y is",
      "is decreasing",
      "decreasing when",
      "when moving",
      "moving right",
      "right the",
      "the angle",
      "angle is",
      "is positive",
      "positive If",
      "If the",
      "the height",
      "height is",
      "is decreasing",
      "decreasing the",
      "the angle",
      "angle is",
      "is negative"
    ],
    "Location": "Landscape.java",
    "Content": "get the angle of the surface where x-coordinate is \u003ccode\u003ex\u003ccode\u003e @param x x-coordinate to find the angle @return the angle from [-pi2, pi2] in radians. If the heightis growing (y is decreasing) when moving right, the angle is positive.If the height is decreasing, the angle is negative. "
  },
  {
    "NameOfCommits": "97ab470bfd5afdf42be979b1b2c624976c9bbfaf",
    "Signature": "public boolean isInAir(double x, double y) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3209-3466",
    "Date": "2017-10-10T23:49:26Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground",
      "ground param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground"
    ],
    "Location": "Landscape.java",
    "Content": "Check if the point is over the ground @param x x-coord of the point to check @param y y-coord of the point to check @return { @code true} if the point is over the ground "
  },
  {
    "NameOfCommits": "e949fddf9e3a12f30a9519e419c3c4f60bba1676",
    "Signature": "public class BulletPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "321-523",
    "Date": "2017-10-10T23:49:26Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "BulletPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "1c5d80bdac365dcd98a26d302d12b0285eaf7e77",
    "Signature": "public class OpponentFinder ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "201-351",
    "Date": "2017-10-10T23:37:40Z",
    "NGrams": [
      "The class",
      "class responsible",
      "responsible for",
      "for connecting",
      "connecting to",
      "to the",
      "the opponent",
      "opponent It",
      "It starts",
      "starts the",
      "the game",
      "game when",
      "when the",
      "the connection",
      "connection is",
      "is established"
    ],
    "Location": "OpponentFinder.java",
    "Content": "The class responsible for connecting to the opponentIt starts the game when the connection is established "
  },
  {
    "NameOfCommits": "238c50393b5d40303770880c3b7aa54f4661defb",
    "Signature": "public class Receiver implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "249-449",
    "Date": "2017-10-10T23:37:40Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It receives",
      "receives all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the opponent",
      "opponent and",
      "and synchronizes",
      "synchronizes the",
      "the scene",
      "scene according",
      "according to",
      "to it"
    ],
    "Location": "Receiver.java",
    "Content": "The class implementing the conversation to the opponent.It receives all the data from the opponent and synchronizes the scene according to it "
  },
  {
    "NameOfCommits": "91dfe15bcd22123568b274bd58446dc6d9e1f1d1",
    "Signature": "public Receiver(Tank opponent, TanksGame game, InputStream inputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "587-858",
    "Date": "2017-05-26T09:38:14Z",
    "NGrams": [
      "param opponent",
      "opponent the",
      "the tank",
      "tank to",
      "to be",
      "be updated",
      "updated according",
      "according to",
      "to the",
      "the input",
      "input data",
      "data param",
      "param game",
      "game the",
      "the game",
      "game to",
      "to be",
      "be updated",
      "updated param",
      "param inputStream",
      "inputStream the",
      "the link",
      "link InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data"
    ],
    "Location": "Receiver.java",
    "Content": " @param opponent the tank to be updated according to the input data @param game the game to be updated @param inputStream the { @link InputStream} to get the data "
  },
  {
    "NameOfCommits": "d37846448daf70166b8189c221ad475cfc2d76d1",
    "Signature": "public boolean isDisconnected() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1088-1262",
    "Date": "2017-05-26T09:38:14Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has stopped",
      "stopped working",
      "working return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has terminated"
    ],
    "Location": "Receiver.java",
    "Content": "Checks if the { @code Receiver} has stopped working @return { @code true} if the { @code Receiver} has terminated "
  },
  {
    "NameOfCommits": "18ecb40fa6d083afa326571527cb5ae0ebb19126",
    "Signature": "public class Sender implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "265-437",
    "Date": "2017-05-26T09:35:38Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It gets",
      "gets all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the game",
      "game and",
      "and sends",
      "sends it",
      "it every",
      "every while"
    ],
    "Location": "Sender.java",
    "Content": "The class implementing the conversation to the opponent.It gets all the data from the game and sends it every while "
  },
  {
    "NameOfCommits": "c53ecd1f40eea761f0b919b73a2e2e6534591d24",
    "Signature": "public Sender(Tank tank, OutputStream outputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "542-750",
    "Date": "2017-05-26T09:35:38Z",
    "NGrams": [
      "param tank",
      "tank the",
      "the tank",
      "tank which",
      "which position",
      "position is",
      "is needed",
      "needed to",
      "to be",
      "be sent",
      "sent param",
      "param outputStream",
      "outputStream the",
      "the code",
      "code OutputStream",
      "OutputStream to",
      "to put",
      "put all",
      "all the",
      "the data",
      "data in"
    ],
    "Location": "Sender.java",
    "Content": " @param tank the tank which position is needed to be sent @param outputStream the { @code OutputStream} to put all the data in "
  },
  {
    "NameOfCommits": "fbb5f1a643b5c77df152feb6465fc136b61fdb0f",
    "Signature": "public void sendBulletPackage(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "838-989",
    "Date": "2017-05-26T06:53:08Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent that",
      "that we",
      "we have",
      "have shot",
      "shot param",
      "param bullet",
      "bullet the",
      "the bullet",
      "bullet we",
      "we shot"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent that we have shot @param bullet the bullet we shot "
  },
  {
    "NameOfCommits": "c89c0033edd3895f50d8f1b6885d233f1e4fd2be",
    "Signature": "public void sendGameEnded() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1450-1588",
    "Date": "2017-05-26T06:53:08Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent we",
      "we have",
      "have lost",
      "lost the",
      "the game",
      "game Triples",
      "Triples the",
      "the notification",
      "notification to",
      "to be",
      "be sure"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent we have lost the game.Triples the notification to be sure "
  },
  {
    "NameOfCommits": "ca5532fb2674063c5b8f89713de93b398f70f38b",
    "Signature": "public class TankPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "38-238",
    "Date": "2017-05-25T15:20:51Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "TankPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "2bae4e9c2d7c3fa350141762a471b5fe1d69cfe1",
    "Signature": "public boolean isConnected() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "952-1145",
    "Date": "2017-05-24T18:33:26Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server",
      "server return",
      "return true",
      "true if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server"
    ],
    "Location": "TanksClient.java",
    "Content": "Checks if the client has successfully connected to the server @return { @true} if the client has successfully connected to the server "
  },
  {
    "NameOfCommits": "435e9b1c03b3bda348b46d3f82e06608679b7cbb",
    "Signature": "public String getErrorMessage() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1185-1338",
    "Date": "2017-05-24T18:33:26Z",
    "NGrams": [
      "What went",
      "went wrong",
      "wrong if",
      "if something",
      "something did",
      "did return",
      "return the",
      "the message",
      "message with",
      "with the",
      "the description",
      "description of",
      "of the",
      "the error"
    ],
    "Location": "TanksClient.java",
    "Content": "What went wrong (if something did)? @return the message with the description of the error "
  },
  {
    "NameOfCommits": "e7964cd43252eaa90da599832241ac96d616fc07",
    "Signature": "public InputStream getInput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1379-1534",
    "Date": "2017-05-24T18:31:13Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to send",
      "send some",
      "some data",
      "data to",
      "to the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to put",
      "put the",
      "the data",
      "data in"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to send some data to the server @return { @code InputStream} to put the data in "
  },
  {
    "NameOfCommits": "b5e5942349028ed04406b7b19fc47ac1fc563990",
    "Signature": "public OutputStream getOutput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1568-1728",
    "Date": "2017-05-24T18:31:13Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to get",
      "get some",
      "some data",
      "data from",
      "from the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data",
      "data from"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to get some data from the server @return { @code InputStream} to get the data from "
  },
  {
    "NameOfCommits": "4fb34a6ca547fed320198669a5700ac74511aba1",
    "Signature": "public class TanksServer implements Runnable ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "258-516",
    "Date": "2017-05-23T09:14:14Z",
    "NGrams": [
      "A simple",
      "simple data",
      "data passing",
      "passing server",
      "server for",
      "for two",
      "two clients",
      "clients It",
      "It does",
      "does all",
      "all the",
      "the initial",
      "initial conversation",
      "conversation with",
      "with clients",
      "clients When",
      "When it",
      "it establishes",
      "establishes a",
      "a connection",
      "connection with",
      "with two",
      "two clients",
      "clients it",
      "it just",
      "just passes",
      "passes all",
      "all the",
      "the data",
      "data from",
      "from one",
      "one to",
      "to another"
    ],
    "Location": "TanksServer.java",
    "Content": "A simple data-passing server for two clients.It does all the initial conversation with clients.When it establishes a connection with two clients it just passes all the data from one to another "
  },
  {
    "NameOfCommits": "5db68b00724a8e4cbf737afa8767194176c2e170",
    "Signature": "public Tank(Landscape land, boolean isOpponent, TanksGame game, TankGun gun, int xPos) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1140-1406",
    "Date": "2017-05-22T19:22:16Z",
    "NGrams": [
      "Creates new",
      "new tank",
      "tank located",
      "located on",
      "on code",
      "code land",
      "land param",
      "param land",
      "land link",
      "link Landscape",
      "Landscape where",
      "where to",
      "to locate",
      "locate our",
      "our new",
      "new tank",
      "tank param",
      "param xPos",
      "xPos our",
      "our tank",
      "tank initial",
      "initial x",
      "x position"
    ],
    "Location": "Tank.java",
    "Content": "Creates new tank located on { @code land} @param land { @link Landscape}, where to locate our new tank @param xPos our tank initial x-position "
  },
  {
    "NameOfCommits": "62f09e7575f3e4e8413b8095e154cec90fb52e46",
    "Signature": "public double getX() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1558-1680",
    "Date": "2017-05-22T19:22:16Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank",
      "tank return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the tank @return the x-coordinate of the tank "
  },
  {
    "NameOfCommits": "b044c5a269cfee0e71cc6762029cd134848850be",
    "Signature": "public double getCenterX(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1713-2061",
    "Date": "2017-05-22T19:07:01Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the x-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "0ee42bbec20a485624247ea8ad3a6a6e189a00f3",
    "Signature": "public double getCenterY(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2125-2473",
    "Date": "2017-05-22T19:07:01Z",
    "NGrams": [
      "Get the",
      "the y",
      "y coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the y",
      "y coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the y-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the y-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "aca926176dc1314170a0a5242e996e50f554d127",
    "Signature": "public void shoot() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2975-3076",
    "Date": "2017-05-22T16:37:51Z",
    "NGrams": [
      "Add a",
      "a bullet",
      "bullet to",
      "to the",
      "the game",
      "game based",
      "based on",
      "on the",
      "the current",
      "current tank",
      "tank state"
    ],
    "Location": "Tank.java",
    "Content": "Add a bullet to the game based on the current tank state "
  },
  {
    "NameOfCommits": "fc25a561b92447897558002d480c494e6c86fc80",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3542-3723",
    "Date": "2017-05-22T16:37:51Z",
    "NGrams": [
      "draw the",
      "the tank",
      "tank into",
      "into the",
      "the code",
      "code graphics",
      "graphics param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Tank.java",
    "Content": "draw the tank into the { @code graphics} @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "1dd0e0dc0676726ce7c37b98852176d912448095",
    "Signature": "public synchronized void move(long ms) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "5591-5841",
    "Date": "2017-05-22T15:10:11Z",
    "NGrams": [
      "update all",
      "all necessary",
      "necessary parameters",
      "parameters to",
      "to move",
      "move the",
      "the tank",
      "tank according",
      "according to",
      "to how",
      "how much",
      "much time",
      "time has",
      "has passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation param",
      "param ms",
      "ms time",
      "time passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation in",
      "in milliseconds"
    ],
    "Location": "Tank.java",
    "Content": "update all necessary parameters to move the tank according tohow much time has passed since the last updation @param ms time passed since the last updation in milliseconds "
  },
  {
    "NameOfCommits": "50f53794fd8d28c15ba9f871db608130f4d3a13f",
    "Signature": "public synchronized TankPackage getPosition() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7193-7408",
    "Date": "2017-05-22T15:10:11Z",
    "NGrams": [
      "get the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank",
      "tank return",
      "return the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "get the { @link TankPackage} object with actual data about the tank @return the { @link TankPackage} object with actual data about the tank "
  },
  {
    "NameOfCommits": "4e1fd03a1547eac42c53045b3cdfba2c088c8c4d",
    "Signature": "public synchronized void updatePosition(TankPackage tankPackage) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7616-7933",
    "Date": "2017-05-22T08:45:17Z",
    "NGrams": [
      "update position",
      "position based",
      "based on",
      "on the",
      "the code",
      "code tankPackage",
      "tankPackage while",
      "while our",
      "our tank",
      "tank is",
      "is updated",
      "updated based",
      "based on",
      "on key",
      "key presses",
      "presses the",
      "the opponent",
      "opponent one",
      "one is",
      "is updated",
      "updated by",
      "by calling",
      "calling this",
      "this method",
      "method param",
      "param tankPackage",
      "tankPackage information",
      "information about",
      "about the",
      "the new",
      "new position",
      "position of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "update position based on the { @code tankPackage}while our tank is updated based on key presses, the opponent one is updated by calling this method @param tankPackage information about the new position of the tank "
  },
  {
    "NameOfCommits": "39db275e1edbec88a2187d0970a252ced2649459",
    "Signature": "public TanksGame(long startTime, boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1620-2092",
    "Date": "2017-05-22T10:17:18Z",
    "NGrams": [
      "Creates new",
      "new code",
      "code TankGame",
      "TankGame with",
      "with 2",
      "2 tanks",
      "tanks with",
      "with x",
      "x coords",
      "coords set",
      "set to",
      "to 100",
      "100 and",
      "and to",
      "to 500",
      "500 respectively",
      "respectively param",
      "param startTime",
      "startTime System",
      "System time",
      "time when",
      "when the",
      "the game",
      "game is",
      "is being",
      "being init",
      "init param",
      "param isSecondPlayer",
      "isSecondPlayer code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are the",
      "the tank",
      "tank with",
      "with x",
      "x coord",
      "coord set",
      "set to",
      "to 500",
      "500 param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksGame.java",
    "Content": "Creates new { @code TankGame} with 2 tanks with x-coords set to 100 and to 500 respectively @param startTime System time when the game is being init @param isSecondPlayer { @code true} if we are the tank with x-coord set to 500 @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "a69dbe998578fd98d45139afe3786dd315c10c4c",
    "Signature": "public synchronized void addBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2944-3120",
    "Date": "2017-05-22T07:17:37Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered ours",
      "ours param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered ours @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "55aff1be5103dd305aec77721876ed05b6e2d140",
    "Signature": "public synchronized void addOpponentBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3256-3446",
    "Date": "2017-05-22T07:17:37Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered opponent\u0027s",
      "opponent\u0027s param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered opponent\u0027s @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "9c27b389537aa80d2cc23cc0894cc8f51d7d106c",
    "Signature": "public synchronized void handleOpponentShoot(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3545-3882",
    "Date": "2017-05-19T08:12:46Z",
    "NGrams": [
      "A method",
      "method that",
      "that is",
      "is used",
      "used by",
      "by link",
      "link Receiver",
      "Receiver to",
      "to add",
      "add a",
      "a bullet",
      "bullet smartly",
      "smartly It",
      "It discards",
      "discards bad",
      "bad bullets",
      "bullets and",
      "and can",
      "can manually",
      "manually create",
      "create the",
      "the one",
      "one lost",
      "lost with",
      "with loosing",
      "loosing a",
      "a bit",
      "bit of",
      "of precision",
      "precision param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add",
      "add if",
      "if null",
      "null the",
      "the bullet",
      "bullet will",
      "will be",
      "be created",
      "created manually"
    ],
    "Location": "TanksGame.java",
    "Content": "A method that is used by { @link Receiver} to add a bullet smartlyIt discards bad bullets and can manually create the one lost with loosing a bit of precision @param bullet a bullet to add; if null, the bullet will be created manually "
  },
  {
    "NameOfCommits": "cb831f99ddba5c0d6fa0d1d25bc111cc2a261e83",
    "Signature": "public void handleGunChanged() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4396-4497",
    "Date": "2017-05-19T08:12:46Z",
    "NGrams": [
      "Used by",
      "by our",
      "our tank",
      "tank to",
      "to notify",
      "notify the",
      "the gun",
      "gun is",
      "is changed"
    ],
    "Location": "TanksGame.java",
    "Content": "Used by our tank to notify the gun is changed "
  },
  {
    "NameOfCommits": "e79d4b4aa3c7992863f5e29bdcb314ac64f4711f",
    "Signature": "public KeyListener getKeyListener() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4542-4710",
    "Date": "2017-05-18T12:21:26Z",
    "NGrams": [
      "Return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses",
      "presses return",
      "return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses"
    ],
    "Location": "TanksGame.java",
    "Content": "Return the tank that will handle with key presses @return the tank that will handle with key presses "
  },
  {
    "NameOfCommits": "85460ff7fe53d6d803fdd00063ce2ceefd03bfa3",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7591-7749",
    "Date": "2017-05-18T12:21:26Z",
    "NGrams": [
      "Draw the",
      "the whole",
      "whole scene",
      "scene param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "TanksGame.java",
    "Content": "Draw the whole scene @param graphics { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "af825911ef189e5d137814811b3a3772ebabc94b",
    "Signature": "public boolean cycle(long time) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "8109-8283",
    "Date": "2017-05-17T19:53:45Z",
    "NGrams": [
      "Update the",
      "the scene",
      "scene param",
      "param time",
      "time current",
      "current time",
      "time in",
      "in millis",
      "millis return",
      "return code",
      "code true",
      "true if",
      "if there",
      "there is",
      "is anything",
      "anything to",
      "to update"
    ],
    "Location": "TanksGame.java",
    "Content": "Update the scene @param time current time in millis @return { @code true} if there is anything to update "
  },
  {
    "NameOfCommits": "6256c83f086d557f796223b9c1c6bb39cd386aaf",
    "Signature": "public Tank getWinnerTank() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "9114-9278",
    "Date": "2017-05-14T23:16:36Z",
    "NGrams": [
      "Get the",
      "the winner",
      "winner tank",
      "tank Do",
      "Do not",
      "not use",
      "use when",
      "when the",
      "the game",
      "game is",
      "is not",
      "not finished",
      "finished return",
      "return the",
      "the tank",
      "tank which",
      "which won",
      "won the",
      "the game"
    ],
    "Location": "TanksGame.java",
    "Content": "Get the winner tankDo not use when the game is not finished. @return the tank which won the game "
  },
  {
    "NameOfCommits": "a3e3251a7b22487fd36bc8bb894aa6659a941b0c",
    "Signature": "public boolean isWaiting() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3162-3315",
    "Date": "2017-05-11T21:35:26Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent",
      "opponent return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are waiting for an opponent @return { @code true} if we are waiting for an opponent "
  },
  {
    "NameOfCommits": "a97f97c5d9c4c0a6593cb7065668b3261b3628b5",
    "Signature": "public boolean isInGame() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3375-3503",
    "Date": "2017-05-11T21:35:26Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are playing",
      "playing now",
      "now return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are playing",
      "playing now"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are playing now @return { @code true} if we are playing now "
  },
  {
    "NameOfCommits": "a71040042f47e27389e8ab41f9bd60c4ec6f71a9",
    "Signature": "public void startGame(boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3554-3935",
    "Date": "2017-05-10T23:03:21Z",
    "NGrams": [
      "Start a",
      "a new",
      "new game",
      "game Expects",
      "Expects that",
      "that the",
      "the connection",
      "connection to",
      "to our",
      "our opponent",
      "opponent has",
      "has already",
      "already been",
      "been established",
      "established param",
      "param isSecondPlayer",
      "isSecondPlayer are",
      "are we",
      "we the",
      "the right",
      "right player",
      "player on",
      "on start",
      "start param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksPanel.java",
    "Content": "Start a new gameExpects that the connection to our opponent has already been established @param isSecondPlayer are we the right player on start? @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "1c820199fc3155c2949aaebe50ae7872883ab9e9",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2018-05-25T12:47:40Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "6d4e8fc0b881489046420b947ea56533ad8ac804",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2017-04-22T19:21:23Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "20c7e8fd76a40957ae28e8c4a9b0538c0b86deae",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "237-356",
    "Date": "2017-04-22T19:21:23Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "99f2dfcc8b08b8fd014595779633eacd2896fdbb",
    "Signature": "int size()",
    "Namespace": "sem2.hw2.task2",
    "Range": "408-499",
    "Date": "2017-04-22T19:15:46Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "e984b2213d4461976003b069f1916a710b83193b",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw2.task2",
    "Range": "505-620",
    "Date": "2017-04-22T18:52:39Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "b9da2ff5a2adb9c3be6c6fbff1b30403d89be506",
    "Signature": "protected \u003cT extends Comparable\u003cT\u003e\u003e void swap(T[] array, int i, int j) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "116-456",
    "Date": "2017-04-19T18:45:35Z",
    "NGrams": [
      "Swaps two",
      "two elements",
      "elements in",
      "in the",
      "the array",
      "array param",
      "param array",
      "array an",
      "an array",
      "array where",
      "where swapping",
      "swapping is",
      "is done",
      "done param",
      "param i",
      "i index",
      "index of",
      "of the",
      "the first",
      "first element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param j",
      "j index",
      "index of",
      "of the",
      "the second",
      "second element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "BaseSorter.java",
    "Content": "Swaps two elements in the array @param array an array where swapping is done @param i index of the first element in the array @param j index of the second element in the array @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "8794c799da47986891906528bd32996cfeb3e64b",
    "Signature": "public static \u003cT extends Comparable\u003cT\u003e\u003e boolean isSorted(T[] array) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "549-868",
    "Date": "2017-04-19T18:03:41Z",
    "NGrams": [
      "Checks whether",
      "whether an",
      "an array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order",
      "order param",
      "param array",
      "array an",
      "an array",
      "array which",
      "which is",
      "is being",
      "being checked",
      "checked param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array",
      "array return",
      "return code",
      "code true",
      "true if",
      "if code",
      "code array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order"
    ],
    "Location": "BaseSorter.java",
    "Content": "Checks whether an array is sorted in ascending order @param array an array which is being checked @param \u003cT\u003e type of elements in the array @return { @code true} if { @code array} is sorted in ascending order "
  },
  {
    "NameOfCommits": "3d1b24c40ecb17aa86660c89b28c8ed632d48a73",
    "Signature": "\u003cT extends Comparable\u003cT\u003e\u003e void sort(T[] array)",
    "Namespace": "sem2.hw3.task1",
    "Range": "105-334",
    "Date": "2017-04-19T18:00:28Z",
    "NGrams": [
      "Sorts code",
      "code array",
      "array in",
      "in ascending",
      "ascending order",
      "order using",
      "using link",
      "link Comparable",
      "Comparable compareTo",
      "compareTo param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "Sorter.java",
    "Content": "Sorts { @code array} in ascending order using { @link Comparable#compareTo} @param array an array to sort @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "2cfe35ec05550184f0e713df92a72de433f72dca",
    "Signature": "public class ConsoleSpiralOutputter extends DefaultSpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "25-165",
    "Date": "2017-04-19T17:43:44Z",
    "NGrams": [
      "Table spiral",
      "spiral outputter",
      "outputter using",
      "using link",
      "link System",
      "System out",
      "out as",
      "as a",
      "a destination"
    ],
    "Location": "ConsoleSpiralOutputter.java",
    "Content": " Table spiral outputter using { @link System#out} as a destination "
  },
  {
    "NameOfCommits": "8216d74f74756a213640397f55ac96f6044d506e",
    "Signature": "public abstract class DefaultSpiralOutputter implements SpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "54-267",
    "Date": "2017-04-19T17:43:44Z",
    "NGrams": [
      "Default SpiralOutputter",
      "SpiralOutputter implementation",
      "implementation Can",
      "Can output",
      "output a",
      "a table",
      "table to",
      "to any",
      "any link",
      "link PrintStream",
      "PrintStream including",
      "including System",
      "System out",
      "out and",
      "and any",
      "any file"
    ],
    "Location": "DefaultSpiralOutputter.java",
    "Content": "Default SpiralOutputter implementation.Can output a table to any { @link PrintStream}including System.out and any file."
  },
  {
    "NameOfCommits": "a56ab6add311a11ae02c38f90826c1a967d77978",
    "Signature": "public FileSpiralOutputter(String fileName) throws FileNotFoundException ",
    "Namespace": "sem2.hw3.task2",
    "Range": "208-511",
    "Date": "2017-04-16T19:39:49Z",
    "NGrams": [
      "Creates outputter",
      "outputter associated",
      "associated with",
      "with file",
      "file named",
      "named code",
      "code fileName",
      "fileName param",
      "param fileName",
      "fileName name",
      "name of",
      "of the",
      "the file",
      "file to",
      "to output",
      "output the",
      "the table",
      "table in",
      "in throws",
      "throws FileNotFoundException",
      "FileNotFoundException if",
      "if no",
      "no file",
      "file named",
      "named code",
      "code fileName",
      "fileName was",
      "was found"
    ],
    "Location": "FileSpiralOutputter.java",
    "Content": "Creates outputter associated with file named { @code fileName} @param fileName name of the file to output the table in @throws FileNotFoundException if no file named { @code fileName} was found "
  },
  {
    "NameOfCommits": "ca43d8ae108b690cdf8b1c91367665624d46fc14",
    "Signature": "void outputSpirally(int[][] table)",
    "Namespace": "sem2.hw3.task2",
    "Range": "114-241",
    "Date": "2017-04-16T18:20:11Z",
    "NGrams": [
      "Outputs code",
      "code table",
      "table spirally",
      "spirally param",
      "param table",
      "table a",
      "a table",
      "table to",
      "to output"
    ],
    "Location": "SpiralOutputter.java",
    "Content": "Outputs { @code table} spirally @param table a table to output "
  },
  {
    "NameOfCommits": "088ae1e526ecdc417bb6704af40e1e9345ff3fb8",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-134",
    "Date": "2017-04-16T16:17:56Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used for",
      "for providing",
      "providing some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashTable"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used for providing some hash function for { @link HashTable}. "
  },
  {
    "NameOfCommits": "e2aee3c83bb3bb938ef076cd4402e0399cb065c6",
    "Signature": "int hash(T key)",
    "Namespace": "sem2.hw4.task2",
    "Range": "139-357",
    "Date": "2017-04-16T16:17:56Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code key",
      "key Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashTable",
      "HashTable hashCount",
      "hashCount param",
      "param key",
      "key the",
      "the value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of the",
      "the code",
      "code key"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code key}.Should return an integer from 0 to { @link HashTable#hashCount}. @param key the value for hashing @return hash of the { @code key} "
  },
  {
    "NameOfCommits": "29135cd4758102b57f4691d83c6e21ef84c44970",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-169",
    "Date": "2017-04-14T15:01:18Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "6dbc1a31fbeb42781b19328b8200aef75a403ebf",
    "Signature": "public int getBadHash() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "288-420",
    "Date": "2017-04-14T15:01:18Z",
    "NGrams": [
      "Returns the",
      "the bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated",
      "generated return",
      "return bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": "Returns the bad hash that was generated. @return bad hash that was generated "
  },
  {
    "NameOfCommits": "90150d149efdebac12ef47db5f4cd554ac3ca9c3",
    "Signature": "public class HashTable\u003cK, V\u003e implements Iterable\u003cV\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "122-428",
    "Date": "2017-04-14T14:39:56Z",
    "NGrams": [
      "Hash table",
      "table that",
      "that allows",
      "allows adding",
      "adding values",
      "values of",
      "of the",
      "the type",
      "type code",
      "code V",
      "V associated",
      "associated with",
      "with keys",
      "keys of",
      "of the",
      "the type",
      "type code",
      "code K",
      "K Hash",
      "Hash function",
      "function should",
      "should be",
      "be provided",
      "provided by",
      "by client",
      "client an",
      "an can",
      "can be",
      "be changed",
      "changed in",
      "in runtime",
      "runtime param",
      "param K",
      "K the",
      "the type",
      "type of",
      "of keys",
      "keys param",
      "param V",
      "V the",
      "the type",
      "type of",
      "of values"
    ],
    "Location": "HashTable.java",
    "Content": "Hash table that allows adding values of the type { @code V} associated with keys of the type { @code K}Hash function should be provided by client an can be changed in runtime. @param \u003cK\u003e the type of keys @param \u003cV\u003e the type of values "
  },
  {
    "NameOfCommits": "2a877bd08e21a6b3ff59cda56563a3267776f4f6",
    "Signature": "public void add(K key, V value) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2128-2520",
    "Date": "2017-04-11T18:55:57Z",
    "NGrams": [
      "Adds the",
      "the code",
      "code value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key to",
      "to the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key for",
      "for the",
      "the value",
      "value to",
      "to be",
      "be associated",
      "associated with",
      "with param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be added",
      "added throws",
      "throws KeyAlreadyExistsException",
      "KeyAlreadyExistsException if",
      "if the",
      "the code",
      "code key",
      "key already",
      "already exists",
      "exists in",
      "in the",
      "the table",
      "table throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Adds the { @code value} associated with the { @code key} to the set. @param key the key for the value to be associated with @param value the value to be added @throws KeyAlreadyExistsException if the { @code key} already exists in the table @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "0077d4699b1779d05824710ca07f3d087f50dd75",
    "Signature": "public void remove(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2884-3195",
    "Date": "2017-04-11T18:55:57Z",
    "NGrams": [
      "Removes the",
      "the value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key from",
      "from the",
      "the set",
      "set Does",
      "Does nothing",
      "nothing in",
      "in case",
      "case of",
      "of not",
      "not founding",
      "founding this",
      "this key",
      "key in",
      "in the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key to",
      "to be",
      "be removed",
      "removed with",
      "with its",
      "its value",
      "value throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Removes the value associated with the { @code key} from the set.Does nothing in case of not founding this key in the set. @param key the key to be removed with its value @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "409352e61826eca23a27705cdec304e0f7f7b329",
    "Signature": "public boolean doesContain(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "3622-3912",
    "Date": "2017-04-11T18:43:09Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the set",
      "set contains",
      "contains a",
      "a value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key param",
      "param key",
      "key the",
      "the value",
      "value to",
      "to search",
      "search for",
      "for return",
      "return true",
      "true if",
      "if code",
      "code key",
      "key was",
      "was found",
      "found throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Checks if the set contains a value associated with the { @code key}. @param key the value to search for @return true if { @code key} was found @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "92db7e3a182d9821cbc67a667863819d212f644d",
    "Signature": "public void setHasher(Hasher\u003cK\u003e newHasher) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "4258-4501",
    "Date": "2017-04-11T18:43:09Z",
    "NGrams": [
      "Change used",
      "used hash",
      "hash function",
      "function param",
      "param newHasher",
      "newHasher object",
      "object that",
      "that implements",
      "implements link",
      "link Hasher",
      "Hasher interface",
      "interface throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Change used hash function. @param newHasher object that implements { @link Hasher} interface @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "39456ff8257b863cb2f949bde23770fe8be51942",
    "Signature": "public int size() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5083-5186",
    "Date": "2017-04-11T15:48:39Z",
    "NGrams": [
      "Size of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Size of the set. @return number of objects in the set "
  },
  {
    "NameOfCommits": "a926c8dd9b0af94d08f98c67e0973c21e63410a7",
    "Signature": "public double loadFactor() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5219-5370",
    "Date": "2017-04-11T15:48:39Z",
    "NGrams": [
      "Load factor",
      "factor of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects divided",
      "divided by",
      "by number",
      "number of",
      "of different",
      "different hash",
      "hash values"
    ],
    "Location": "HashTable.java",
    "Content": "Load factor of the set. @return number of objects divided by number of different hash values "
  },
  {
    "NameOfCommits": "28c5996a6ffcbbd9718a803f0aae25ffe2a4ddae",
    "Signature": "public int maxListLength() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5420-5591",
    "Date": "2017-04-11T15:47:21Z",
    "NGrams": [
      "Returns the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set",
      "set return",
      "return the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Returns the length of the maximum-sized list in the set. @return the length of the maximum-sized list in the set "
  },
  {
    "NameOfCommits": "25d90f5df3c9c9dfca1da468e71120c13fd4b9d2",
    "Signature": "public class KeyAlreadyExistsException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-203",
    "Date": "2017-04-11T15:47:21Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody wants",
      "wants to",
      "to link",
      "link sem2",
      "sem2 hw4",
      "hw4 task2",
      "task2 HashTable",
      "HashTable add",
      "add an",
      "an existing",
      "existing key",
      "key to",
      "to a",
      "a table"
    ],
    "Location": "KeyAlreadyExistsException.java",
    "Content": " An exception thrown if somebody wants to { @link sem2.hw4.task2.HashTable#add} an existing key to a table. "
  },
  {
    "NameOfCommits": "d65260e2c4c99316a5abcfc126696259775b5691",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "106-233",
    "Date": "2017-04-09T11:46:58Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "22ba639c467e283d7e787a7683ad442908b79fb2",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "239-359",
    "Date": "2017-04-08T16:05:46Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "bb2196808d52d678f70a60fc4b57644c8e7d237a",
    "Signature": "void remove(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "365-539",
    "Date": "2017-04-08T16:05:46Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list If",
      "If the",
      "the value",
      "value was",
      "was not",
      "not found",
      "found does",
      "does nothing",
      "nothing param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed"
    ],
    "Location": "List.java",
    "Content": "Removes { @code value} from the list.If the value was not found, does nothing. @param value the value to be removed "
  },
  {
    "NameOfCommits": "0d28f4a3ce3b54fb125c9beb998f5f28b8148ea9",
    "Signature": "boolean doesContain(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "545-737",
    "Date": "2017-04-08T06:55:34Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value",
      "value param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to look",
      "look for",
      "for return",
      "return true",
      "true if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value"
    ],
    "Location": "List.java",
    "Content": "Checks if the list contains { @code value}. @param value the value to look for @return true if the list contains { @code value} "
  },
  {
    "NameOfCommits": "125ffd60cc50f950604d8150bed960769593a1ae",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task2",
    "Range": "790-882",
    "Date": "2017-04-07T08:06:13Z",
    "NGrams": [
      "Get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "Get the size of the list. @return size of the list "
  },
  {
    "NameOfCommits": "cb5d399ffd3ce0a275d19c25e38176cc9660d663",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task2",
    "Range": "888-1004",
    "Date": "2017-04-07T08:06:13Z",
    "NGrams": [
      "Checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "Checks whether our list is empty. @return true if our list is empty "
  },
  {
    "NameOfCommits": "69e9df8048ec94fdd36106e068d240c7ad9a565c",
    "Signature": "public class SinglyLinkedList\u003cT\u003e implements List\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "94-303",
    "Date": "2017-04-07T07:53:56Z",
    "NGrams": [
      "Singly linked",
      "linked list",
      "list implementation",
      "implementation Can",
      "Can be",
      "be iterated",
      "iterated through",
      "through using",
      "using foreach",
      "foreach iterator",
      "iterator implementation",
      "implementation supports",
      "supports link",
      "link java",
      "java util",
      "util Iterator",
      "Iterator remove"
    ],
    "Location": "SinglyLinkedList.java",
    "Content": " Singly-linked list implementation.Can be iterated through using foreach, iterator implementationsupports { @link java.util.Iterator#remove}. "
  },
  {
    "NameOfCommits": "cb6236cea67f771dc266ac29fa4994c84c3fc276",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "105-231",
    "Date": "2017-04-07T07:48:26Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "c8a6280571f0af9c7ca870e9ac33cd83a0b89200",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "237-356",
    "Date": "2017-04-07T07:48:26Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "f22624b3b20bfa3af7440378fdeaf997fce6e797",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task1",
    "Range": "408-499",
    "Date": "2017-04-06T23:07:33Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "c548b22ec5162d2ab4d2a8f1c6f31ecccdbd547c",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task1",
    "Range": "505-620",
    "Date": "2017-04-03T06:24:22Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "ce89298411a6218311a057da54af13a300a45f5d",
    "Signature": "public class UniqueList\u003cT\u003e extends SinglyLinkedList\u003cT\u003e ",
    "Namespace": "sem2.hw4.task1",
    "Range": "53-170",
    "Date": "2017-04-03T05:29:07Z",
    "NGrams": [
      "A list",
      "list where",
      "where every",
      "every element",
      "element could",
      "could be",
      "be present",
      "present only",
      "only once"
    ],
    "Location": "UniqueList.java",
    "Content": " A list where every element could be present only once "
  },
  {
    "NameOfCommits": "5fc498f22ae9094f1f471c961ff9fc4b949d4ba8",
    "Signature": "public void addFirst(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "396-527",
    "Date": "2017-04-03T05:29:07Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already have",
      "have code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already have { @code value} in it "
  },
  {
    "NameOfCommits": "ca96b40093a17cb1ec525b859334fd6c9fb30473",
    "Signature": "public void addLast(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "652-786",
    "Date": "2017-04-03T03:33:22Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already contains",
      "contains code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already contains { @code value} in it "
  },
  {
    "NameOfCommits": "0e5f4c3eda6bf436f71cbbf9158a2ba45019e057",
    "Signature": "public void remove(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "910-1129",
    "Date": "2017-04-03T03:33:22Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed",
      "removed throws",
      "throws NoSuchElementException",
      "NoSuchElementException if",
      "if the",
      "the list",
      "list does",
      "does not",
      "not contain",
      "contain code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": "Removes { @code value} from the list @param value the value to be removed @throws NoSuchElementException if the list does not contain { @code value} in it "
  },
  {
    "NameOfCommits": "21ce099c0275b9ed4bc99cba650e0b5cc5e3ed80",
    "Signature": "public Expression(String expressionString) throws BadExpressionException ",
    "Namespace": "sem2.hw6.task1",
    "Range": "2059-2740",
    "Date": "2017-03-29T14:39:23Z",
    "NGrams": [
      "Creates an",
      "an ExpressionTree",
      "ExpressionTree by",
      "by a",
      "a specially",
      "specially formatted",
      "formatted string",
      "string code",
      "code expressionString",
      "expressionString should",
      "should be",
      "be formatted",
      "formatted as",
      "as follows",
      "follows br",
      "br Expr",
      "Expr is",
      "is a",
      "a positive",
      "positive integer",
      "integer number",
      "number or",
      "or Op",
      "Op Expr",
      "Expr Expr",
      "Expr br",
      "br where",
      "where Op",
      "Op is",
      "is an",
      "an operation",
      "operation one",
      "one of",
      "of br",
      "br So",
      "So the",
      "the correctly",
      "correctly formatted",
      "formatted string",
      "string is",
      "is Expr",
      "Expr br",
      "br Examples",
      "Examples of",
      "of good",
      "good strings",
      "strings ul",
      "ul li",
      "li 123",
      "123 li",
      "li li",
      "li 2",
      "2 2",
      "2 li",
      "li li",
      "li 4",
      "4 6",
      "6 12",
      "12 li",
      "li ul",
      "ul param",
      "param expressionString",
      "expressionString the",
      "the formatted",
      "formatted string",
      "string throws",
      "throws BadExpressionException",
      "BadExpressionException if",
      "if code",
      "code expressionString",
      "expressionString is",
      "is not",
      "not formatted",
      "formatted properly"
    ],
    "Location": "Expression.java",
    "Content": " Creates an ExpressionTree by a specially-formatted string.{ @code expressionString} should be formatted as follows:\u003cbr\u003eExpr is a positive integer number or (Op Expr Expr)\u003cbr\u003ewhere Op is an operation -- one of (+, -, , ).\u003cbr\u003eSo the correctly-formatted string is Expr.\u003cbr\u003e Examples of good strings:\u003cul\u003e \u003cli\u003e123\u003cli\u003e \u003cli\u003e(+ 2 2)\u003cli\u003e \u003cli\u003e(- ( 4 6) 12)\u003cli\u003e\u003cul\u003e @param expressionString the formatted string @throws BadExpressionException if { @code expressionString} is not formatted properly "
  },
  {
    "NameOfCommits": "1236a44e1ca517294a82a1774d747bfd4f02701c",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-129",
    "Date": "2017-03-25T07:54:50Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used to",
      "to provide",
      "provide some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashSet"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used to provide some hash function for { @link HashSet}. "
  },
  {
    "NameOfCommits": "9c7235bbd12e7f4561b45bd963b90f80b3e6fcaa",
    "Signature": "int hash(T value)",
    "Namespace": "sem2.hw6.task2",
    "Range": "134-353",
    "Date": "2017-03-25T07:31:09Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code value",
      "value Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashSet",
      "HashSet HASH",
      "HASH COUNT",
      "COUNT param",
      "param value",
      "value a",
      "a value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of code",
      "code value"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code value}.Should return an integer from 0 to { @link HashSet#HASH_COUNT}. @param value a value for hashing @return hash of { @code value} "
  },
  {
    "NameOfCommits": "3a1099becdcf7bda0c1f1b284a9b34f64b5f03e0",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-169",
    "Date": "2017-03-25T07:31:09Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "c1bc13097be126426315c6d3bffbc139d82312fa",
    "Signature": "public class HashSet\u003cT\u003e implements Set\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "46-187",
    "Date": "2017-03-24T17:11:24Z",
    "NGrams": [
      "The set",
      "set that",
      "that groups",
      "groups its",
      "its elements",
      "elements by",
      "by their",
      "their hashes",
      "hashes so",
      "so it",
      "it becomes",
      "becomes easier",
      "easier to",
      "to find",
      "find one",
      "one of",
      "of them"
    ],
    "Location": "HashSet.java",
    "Content": " The set that groups its elements by their hashes so it becomes easier to find one of them. "
  },
  {
    "NameOfCommits": "5cbd05892c28efb16583b002c0340632800fbfb7",
    "Signature": "public enum TurnResult ",
    "Namespace": "sem2.hw7.task2",
    "Range": "140-246",
    "Date": "2017-03-23T21:55:00Z",
    "NGrams": [
      "The enumeration",
      "enumeration of",
      "of thing",
      "thing that",
      "that could",
      "could happen",
      "happen after",
      "after a",
      "a turn",
      "turn was",
      "was performed"
    ],
    "Location": "TicTacToe.java",
    "Content": " The enumeration of thing that could happen after a turn was performed. "
  },
  {
    "NameOfCommits": "3a023d9106e079cb0716be5af521af7d06ab19b0",
    "Signature": "public TicTacToe(int N) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1159-1279",
    "Date": "2017-03-19T09:21:55Z",
    "NGrams": [
      "Start a",
      "a game",
      "game with",
      "with field",
      "field side",
      "side size",
      "size code",
      "code N",
      "N param",
      "param N",
      "N field",
      "field side",
      "side size"
    ],
    "Location": "TicTacToe.java",
    "Content": " Start a game with field side size \u003d { @code N}. @param N field side size "
  },
  {
    "NameOfCommits": "aeecec5778e63ce30b9e3583c1ee6002f7ab7a92",
    "Signature": "public TurnResult makeTurn(int i, int j) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1492-1804",
    "Date": "2017-03-19T09:21:55Z",
    "NGrams": [
      "Place next",
      "next cross",
      "cross or",
      "or zero",
      "zero to",
      "to the",
      "the code",
      "code i",
      "i code",
      "code j",
      "j cell",
      "cell param",
      "param i",
      "i the",
      "the row",
      "row where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero param",
      "param j",
      "j the",
      "the column",
      "column where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero return",
      "return An",
      "An link",
      "link TurnResult",
      "TurnResult entity",
      "entity see",
      "see TurnResult"
    ],
    "Location": "TicTacToe.java",
    "Content": " Place next cross or zero to the ({ @code i}, { @code j}) cell. @param i the row where to put the next cross or zero. @param j the column where to put the next cross or zero. @return An { @link TurnResult} entity. @see TurnResult "
  },
  {
    "NameOfCommits": "6c7fb22228235b5ece0028f764055639832aebae",
    "Signature": "public class ClassPrinter ",
    "Namespace": "sem2.hw7.task1",
    "Range": "54-336",
    "Date": "2017-03-19T09:02:16Z",
    "NGrams": [
      "The class",
      "class that",
      "that can",
      "can output",
      "output some",
      "some RTTI",
      "RTTI Instead",
      "Instead of",
      "of standard",
      "standard testing",
      "testing which",
      "which is",
      "is inconvenient",
      "inconvenient here",
      "here one",
      "one can",
      "can pass",
      "pass different",
      "different classes",
      "classes into",
      "into print",
      "print statement",
      "statement in",
      "in main",
      "main Some",
      "Some classes",
      "classes to",
      "to check",
      "check are",
      "are declared",
      "declared below",
      "below standard",
      "standard library",
      "library could",
      "could also",
      "also be",
      "be used"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The class that can output some RTTI.Instead of standard testing, which is inconvenient here,one can pass different classes into print() statement in main().Some classes to check are declared below, standard library could also be used. "
  },
  {
    "NameOfCommits": "25d0182dc61e9844cd09037187adefd7d38bcf64",
    "Signature": "public static void print(Class\u003c?\u003e clazz) ",
    "Namespace": "sem2.hw7.task1",
    "Range": "6219-6413",
    "Date": "2017-03-15T20:36:18Z",
    "NGrams": [
      "The method",
      "method that",
      "that prints",
      "prints some",
      "some RTTI",
      "RTTI Works",
      "Works with",
      "with classes",
      "classes interfaces",
      "interfaces and",
      "and enums",
      "enums param",
      "param clazz",
      "clazz a",
      "a class",
      "class to",
      "to learn",
      "learn something",
      "something about"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The method that prints some RTTI.Works with classes, interfaces and enums. @param clazz a class to learn something about "
  },
  {
    "NameOfCommits": "8a757c6a7e2ba1a6e1302b06da50255a62cb67de",
    "Signature": "public class Sorters\u003cT extends Comparable\u003cT\u003e\u003e extends RecursiveAction ",
    "Namespace": "sem2.hw8.task2",
    "Range": "141-300",
    "Date": "2017-03-15T20:36:18Z",
    "NGrams": [
      "The class",
      "class that",
      "that provides",
      "provides parallel",
      "parallel and",
      "and non",
      "non parallel",
      "parallel quicksort",
      "quicksort implementations"
    ],
    "Location": "Sorters.java",
    "Content": "The class that provides parallel and non-parallel quicksort implementations. "
  },
  {
    "NameOfCommits": "0b0ff428875116b90ca701ad6d05b39367d99929",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void parallelSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "951-1211",
    "Date": "2017-03-15T20:09:29Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList using",
      "using multiple",
      "multiple threads",
      "threads param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} using multiple threads. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "8a929877cf8aeb6172968bf1cd3e0c9dc8c16540",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void singleThreadSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "1398-1662",
    "Date": "2017-03-15T20:09:29Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList without",
      "without multithreading",
      "multithreading param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} without multithreading. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "2e82ed1b93e429471f07715c23e24bb5c9d9cf0b",
    "Signature": "public class EmptyQueueException extends Exception ",
    "Namespace": "sem2.test1.task1",
    "Range": "27-170",
    "Date": "2017-03-15T16:20:45Z",
    "NGrams": [
      "an exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody was",
      "was trying",
      "trying to",
      "to remove",
      "remove an",
      "an element",
      "element form",
      "form an",
      "an empty",
      "empty queue"
    ],
    "Location": "EmptyQueueException.java",
    "Content": " an exception thrown if somebody was trying to remove an element form an empty queue "
  },
  {
    "NameOfCommits": "50db042c9d541323c7ce64ce954bb494b68acb1a",
    "Signature": "void enqueue(T element, int priority)",
    "Namespace": "sem2.test1.task1",
    "Range": "133-336",
    "Date": "2017-01-21T08:25:55Z",
    "NGrams": [
      "Put an",
      "an code",
      "code element",
      "element with",
      "with code",
      "code priority",
      "priority into",
      "into the",
      "the queue",
      "queue param",
      "param element",
      "element value",
      "value to",
      "to be",
      "be put",
      "put into",
      "into the",
      "the queue",
      "queue param",
      "param priority",
      "priority its",
      "its priority"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Put an { @code element} with { @code priority} into the queue @param element value to be put into the queue @param priority its priority "
  },
  {
    "NameOfCommits": "3b189fd01ade48f0e033cfe85ddcf09bc00b5163",
    "Signature": "T dequeue() throws EmptyQueueException",
    "Namespace": "sem2.test1.task1",
    "Range": "342-580",
    "Date": "2017-01-21T08:25:55Z",
    "NGrams": [
      "Get an",
      "an element",
      "element with",
      "with maximum",
      "maximum priority",
      "priority from",
      "from the",
      "the queue",
      "queue and",
      "and remove",
      "remove it",
      "it throws",
      "throws EmptyQueueException",
      "EmptyQueueException if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty and",
      "and there",
      "there is",
      "is nothing",
      "nothing to",
      "to return",
      "return return",
      "return removed",
      "removed value"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Get an element with maximum priority from the queue and remove it @throws EmptyQueueException if the queue is empty and there is nothing to return @return removed value "
  },
  {
    "NameOfCommits": "cb2e19c49d2808a2c5775e6c864f9c7951b9e73b",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.test1.task1",
    "Range": "586-691",
    "Date": "2017-01-21T08:24:49Z",
    "NGrams": [
      "checks if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if the",
      "the queue",
      "queue is",
      "is empty"
    ],
    "Location": "PriorityQueue.java",
    "Content": " checks if the queue is empty @return true if the queue is empty "
  },
  {
    "NameOfCommits": "b088e875af1907f953cf9d1018d07a2b1b4eeade",
    "Signature": "public CannonBall(long startTime, double x0, double y0, double angle) ",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "703-1073",
    "Date": "2017-01-11T08:12:29Z",
    "NGrams": [
      "Create a",
      "a bullet",
      "bullet with",
      "with all",
      "all necessary",
      "necessary initial",
      "initial parameters",
      "parameters param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the ball",
      "ball is",
      "is being",
      "being fired"
    ],
    "Location": "CannonBall.java",
    "Content": "Create a bullet with all necessary initial parameters @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the ball is being fired "
  },
  {
    "NameOfCommits": "6dc6af1821dddedaceeeba389da04421513d6326",
    "Signature": "public abstract Explosion getExplosion(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "236-599",
    "Date": "2017-01-05T19:06:30Z",
    "NGrams": [
      "Get the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown",
      "blown in",
      "in the",
      "the point",
      "point x",
      "x y",
      "y param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion return",
      "return the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown"
    ],
    "Location": "TankBullet.java",
    "Content": "Get the explosion which would happen if the bullet was blown in the point (x, y) @param x x-coord of the point of the generated explosion @param y y-coord of the point of the generated explosion @return the explosion which would happen if the bullet was blown "
  },
  {
    "NameOfCommits": "6242a10311066319f253e3134c9eba86ea7d9edc",
    "Signature": "public abstract void draw(Graphics2D graphics)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "605-756",
    "Date": "2017-01-05T19:05:13Z",
    "NGrams": [
      "draw the",
      "the bullet",
      "bullet param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "TankBullet.java",
    "Content": "draw the bullet @param graphics the { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "1a4c5aa96e0b57469b049648fd469b45b4686748",
    "Signature": "public abstract void update(long time)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "762-900",
    "Date": "2017-01-05T19:05:13Z",
    "NGrams": [
      "Update the",
      "the bullet",
      "bullet position",
      "position param",
      "param time",
      "time current",
      "current system",
      "system time",
      "time in",
      "in millis"
    ],
    "Location": "TankBullet.java",
    "Content": "Update the bullet position @param time current system time in millis "
  },
  {
    "NameOfCommits": "3437cfba9c75fae610ded51dec8adf82cf0e89f8",
    "Signature": "public abstract double getX0()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "906-1021",
    "Date": "2017-01-03T09:51:04Z",
    "NGrams": [
      "get the",
      "the initial",
      "initial x",
      "x cooord",
      "cooord return",
      "return the",
      "the initial",
      "initial x",
      "x cooord"
    ],
    "Location": "TankBullet.java",
    "Content": "get the initial x-cooord @return the initial x-cooord "
  },
  {
    "NameOfCommits": "86d3eb3c9de815ac588d540af0cc544544af5f99",
    "Signature": "public abstract double getX()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1027-1167",
    "Date": "2017-01-03T09:51:04Z",
    "NGrams": [
      "get the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current x-coord of the bullet @return the current x-coord of the bullet "
  },
  {
    "NameOfCommits": "708f57108b72bc10671c95fb6d5a9532dddf89cf",
    "Signature": "public abstract double getY()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1173-1313",
    "Date": "2017-01-02T08:27:32Z",
    "NGrams": [
      "get the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current y-coord of the bullet @return the current y-coord of the bullet "
  },
  {
    "NameOfCommits": "502d366318fa95887428bbc249d7707bb25dc126",
    "Signature": "public abstract BulletPackage getPackage()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1319-1495",
    "Date": "2017-01-02T08:27:32Z",
    "NGrams": [
      "form a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet",
      "bullet return",
      "return a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "form a { @link BulletPackage} based on this bullet @return a { @link BulletPackage} based on this bullet "
  },
  {
    "NameOfCommits": "5f0ea5f5ac69e317659b0ae6c526ff7fd559332c",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "166-330",
    "Date": "2017-01-02T08:09:34Z",
    "NGrams": [
      "draw the",
      "the current",
      "current state",
      "state of",
      "of explosion",
      "explosion param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Explosion.java",
    "Content": "draw the current state of explosion @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "ad8f0df73126b2e9b29a13761289158d12bac4a6",
    "Signature": "public abstract boolean update(long currentTime)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "337-565",
    "Date": "2017-01-02T08:04:19Z",
    "NGrams": [
      "Update the",
      "the explosion",
      "explosion state",
      "state basically",
      "basically the",
      "the sound",
      "sound wave",
      "wave param",
      "param currentTime",
      "currentTime current",
      "current tyme",
      "tyme of",
      "of the",
      "the system",
      "system return",
      "return code",
      "code true",
      "true if",
      "if it",
      "it still",
      "still explodes"
    ],
    "Location": "Explosion.java",
    "Content": "Update the explosion state (basically the sound wave) @param currentTime current tyme of the system @return { @code true} if it still explodes "
  },
  {
    "NameOfCommits": "0ba6998ec388fb71542ca60b5de2768a59df1907",
    "Signature": "public abstract boolean inAffectedZone(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "571-835",
    "Date": "2017-01-02T08:04:19Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone",
      "zone param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone"
    ],
    "Location": "Explosion.java",
    "Content": "Check if the point is in the affected zone @param x x-coord of the point @param y y-coord of the point @return { @code true} if the point is in the affected zone "
  },
  {
    "NameOfCommits": "6e075eccb8f9bbc5c68f141e7480a00fee3521e1",
    "Signature": "public class NoExplosion extends Explosion ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "41-160",
    "Date": "2017-01-02T07:38:42Z",
    "NGrams": [
      "Explosion mock",
      "mock which",
      "which is",
      "is not",
      "not drawn",
      "drawn but",
      "but has",
      "has the",
      "the affection",
      "affection radius"
    ],
    "Location": "NoExplosion.java",
    "Content": "Explosion-mock which is not drawn, but has the affection radius "
  },
  {
    "NameOfCommits": "6fdbb1c65a9c86b50c927d2c5f837e30ef826ff4",
    "Signature": "public void draw(Graphics2D graphics, double angle, double x, double y) ",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "203-524",
    "Date": "2016-12-30T09:05:01Z",
    "NGrams": [
      "draw the",
      "the gun",
      "gun param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw into",
      "into param",
      "param angle",
      "angle the",
      "the angle",
      "angle for",
      "for gun",
      "gun to",
      "to be",
      "be placed",
      "placed param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun",
      "gun param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "draw the gun @param graphics the { @link Graphics2D} context to draw into @param angle the angle for gun to be placed @param x x-coord of the root of the gun @param y y-coord of the root of the gun "
  },
  {
    "NameOfCommits": "3624fe6179ba823d4221fda578b6e2c79f3f1d4c",
    "Signature": "protected abstract Shape getShape()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1149-1315",
    "Date": "2016-12-30T08:40:19Z",
    "NGrams": [
      "get the",
      "the basic",
      "basic unrotated",
      "unrotated shape",
      "shape of",
      "of the",
      "the gun",
      "gun return",
      "return link",
      "link Shape",
      "Shape entity",
      "entity which",
      "which id",
      "id the",
      "the shape",
      "shape of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "get the basic unrotated shape of the gun @return { @link Shape} entity which id the shape of the gun "
  },
  {
    "NameOfCommits": "be6303c3987f1cc1192d7bae288da636ee244cee",
    "Signature": "public abstract TankBullet getBullet(long startTime, double x0, double y0, double angle)",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1321-1704",
    "Date": "2016-12-30T08:40:19Z",
    "NGrams": [
      "Produce a",
      "a bullet",
      "bullet param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the bullet",
      "bullet is",
      "is being",
      "being fired",
      "fired return",
      "return the",
      "the new",
      "new bullet"
    ],
    "Location": "TankGun.java",
    "Content": "Produce a bullet @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the bullet is being fired @return the new bullet "
  },
  {
    "NameOfCommits": "499e6f6b82c996153644b1859a426eb9d9c64f60",
    "Signature": "public abstract TankGun getNextGun()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1710-1863",
    "Date": "2016-12-26T10:58:19Z",
    "NGrams": [
      "Get the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns",
      "guns return",
      "return the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns"
    ],
    "Location": "TankGun.java",
    "Content": "Get the next gun in the list af all guns @return the next gun in the list af all guns "
  },
  {
    "NameOfCommits": "ae95dae37f77e96cbf8521750fd36e8b12a7c73b",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1667-1803",
    "Date": "2016-12-26T10:52:25Z",
    "NGrams": [
      "draws the",
      "the landscape",
      "landscape param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "Landscape.java",
    "Content": " draws the landscape @param graphics { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "85c9b7f0c7f0afe599bec210beb632dbe9f148b5",
    "Signature": "public double getY(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1896-2086",
    "Date": "2016-12-26T10:52:25Z",
    "NGrams": [
      "get the",
      "the y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface",
      "surface param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate for",
      "for which",
      "which we",
      "we need",
      "need its",
      "its height",
      "height return",
      "return y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface"
    ],
    "Location": "Landscape.java",
    "Content": "get the y-coordinate on the surface @param x x-coordinate for which we need its height @return y-coordinate on the surface "
  },
  {
    "NameOfCommits": "5aedc1afdb4a8992ab8a24af7fc5f901a0f4d206",
    "Signature": "public double getAngle(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2542-2919",
    "Date": "2016-12-25T20:59:10Z",
    "NGrams": [
      "get the",
      "the angle",
      "angle of",
      "of the",
      "the surface",
      "surface where",
      "where x",
      "x coordinate",
      "coordinate is",
      "is code",
      "code x",
      "x code",
      "code param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate to",
      "to find",
      "find the",
      "the angle",
      "angle return",
      "return the",
      "the angle",
      "angle from",
      "from pi",
      "pi 2",
      "2 pi",
      "pi 2",
      "2 in",
      "in radians",
      "radians If",
      "If the",
      "the height",
      "height is",
      "is growing",
      "growing y",
      "y is",
      "is decreasing",
      "decreasing when",
      "when moving",
      "moving right",
      "right the",
      "the angle",
      "angle is",
      "is positive",
      "positive If",
      "If the",
      "the height",
      "height is",
      "is decreasing",
      "decreasing the",
      "the angle",
      "angle is",
      "is negative"
    ],
    "Location": "Landscape.java",
    "Content": "get the angle of the surface where x-coordinate is \u003ccode\u003ex\u003ccode\u003e @param x x-coordinate to find the angle @return the angle from [-pi2, pi2] in radians. If the heightis growing (y is decreasing) when moving right, the angle is positive.If the height is decreasing, the angle is negative. "
  },
  {
    "NameOfCommits": "56390558c83ae08e957e2dfc4548307b7ae2b05b",
    "Signature": "public boolean isInAir(double x, double y) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3209-3466",
    "Date": "2016-12-25T20:59:10Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground",
      "ground param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground"
    ],
    "Location": "Landscape.java",
    "Content": "Check if the point is over the ground @param x x-coord of the point to check @param y y-coord of the point to check @return { @code true} if the point is over the ground "
  },
  {
    "NameOfCommits": "8e6cfe22ae792b94f3b8faf2c89659b08a961084",
    "Signature": "public class BulletPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "321-523",
    "Date": "2016-12-25T20:52:00Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "BulletPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "57944e08387493db10f774086831961630a83b54",
    "Signature": "public class OpponentFinder ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "201-351",
    "Date": "2016-12-25T20:52:00Z",
    "NGrams": [
      "The class",
      "class responsible",
      "responsible for",
      "for connecting",
      "connecting to",
      "to the",
      "the opponent",
      "opponent It",
      "It starts",
      "starts the",
      "the game",
      "game when",
      "when the",
      "the connection",
      "connection is",
      "is established"
    ],
    "Location": "OpponentFinder.java",
    "Content": "The class responsible for connecting to the opponentIt starts the game when the connection is established "
  },
  {
    "NameOfCommits": "bcef156d2300a7e57bd91a98fc74f8a59ee1e6ae",
    "Signature": "public class Receiver implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "249-449",
    "Date": "2016-12-25T19:43:38Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It receives",
      "receives all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the opponent",
      "opponent and",
      "and synchronizes",
      "synchronizes the",
      "the scene",
      "scene according",
      "according to",
      "to it"
    ],
    "Location": "Receiver.java",
    "Content": "The class implementing the conversation to the opponent.It receives all the data from the opponent and synchronizes the scene according to it "
  },
  {
    "NameOfCommits": "fdbe124f4ba40accb455cce57399884c634df405",
    "Signature": "public Receiver(Tank opponent, TanksGame game, InputStream inputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "587-858",
    "Date": "2016-12-25T19:43:38Z",
    "NGrams": [
      "param opponent",
      "opponent the",
      "the tank",
      "tank to",
      "to be",
      "be updated",
      "updated according",
      "according to",
      "to the",
      "the input",
      "input data",
      "data param",
      "param game",
      "game the",
      "the game",
      "game to",
      "to be",
      "be updated",
      "updated param",
      "param inputStream",
      "inputStream the",
      "the link",
      "link InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data"
    ],
    "Location": "Receiver.java",
    "Content": " @param opponent the tank to be updated according to the input data @param game the game to be updated @param inputStream the { @link InputStream} to get the data "
  },
  {
    "NameOfCommits": "44f3f9c3d91cac5c4b3a6fe9b390d9a29fd2112f",
    "Signature": "public boolean isDisconnected() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1088-1262",
    "Date": "2016-12-25T19:41:31Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has stopped",
      "stopped working",
      "working return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has terminated"
    ],
    "Location": "Receiver.java",
    "Content": "Checks if the { @code Receiver} has stopped working @return { @code true} if the { @code Receiver} has terminated "
  },
  {
    "NameOfCommits": "7c954f1afde35009b21562eafef998c5c95833d1",
    "Signature": "public class Sender implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "265-437",
    "Date": "2016-12-25T19:41:31Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It gets",
      "gets all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the game",
      "game and",
      "and sends",
      "sends it",
      "it every",
      "every while"
    ],
    "Location": "Sender.java",
    "Content": "The class implementing the conversation to the opponent.It gets all the data from the game and sends it every while "
  },
  {
    "NameOfCommits": "03f269324f484af460c8e834e05fec6f9b57cb4f",
    "Signature": "public Sender(Tank tank, OutputStream outputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "542-750",
    "Date": "2016-12-25T19:36:59Z",
    "NGrams": [
      "param tank",
      "tank the",
      "the tank",
      "tank which",
      "which position",
      "position is",
      "is needed",
      "needed to",
      "to be",
      "be sent",
      "sent param",
      "param outputStream",
      "outputStream the",
      "the code",
      "code OutputStream",
      "OutputStream to",
      "to put",
      "put all",
      "all the",
      "the data",
      "data in"
    ],
    "Location": "Sender.java",
    "Content": " @param tank the tank which position is needed to be sent @param outputStream the { @code OutputStream} to put all the data in "
  },
  {
    "NameOfCommits": "de6fc9f87f5d8f46b4cec4fb6c8e7edacb8c6daa",
    "Signature": "public void sendBulletPackage(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "838-989",
    "Date": "2016-12-25T19:36:59Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent that",
      "that we",
      "we have",
      "have shot",
      "shot param",
      "param bullet",
      "bullet the",
      "the bullet",
      "bullet we",
      "we shot"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent that we have shot @param bullet the bullet we shot "
  },
  {
    "NameOfCommits": "63d70d10a5dcff599ee3e0726afd425647c7dc06",
    "Signature": "public void sendGameEnded() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1450-1588",
    "Date": "2016-12-25T09:15:27Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent we",
      "we have",
      "have lost",
      "lost the",
      "the game",
      "game Triples",
      "Triples the",
      "the notification",
      "notification to",
      "to be",
      "be sure"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent we have lost the game.Triples the notification to be sure "
  },
  {
    "NameOfCommits": "3ff91a96ff968c6ea2690f97f845676985d03520",
    "Signature": "public class TankPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "38-238",
    "Date": "2016-12-24T19:26:21Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "TankPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "e9c5ca929b731984803442b72b232ed5c69f5062",
    "Signature": "public boolean isConnected() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "952-1145",
    "Date": "2016-12-23T08:55:21Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server",
      "server return",
      "return true",
      "true if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server"
    ],
    "Location": "TanksClient.java",
    "Content": "Checks if the client has successfully connected to the server @return { @true} if the client has successfully connected to the server "
  },
  {
    "NameOfCommits": "8c5ac2a75b4ed34fb4cf97166378c90ba407b878",
    "Signature": "public String getErrorMessage() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1185-1338",
    "Date": "2016-12-23T08:45:12Z",
    "NGrams": [
      "What went",
      "went wrong",
      "wrong if",
      "if something",
      "something did",
      "did return",
      "return the",
      "the message",
      "message with",
      "with the",
      "the description",
      "description of",
      "of the",
      "the error"
    ],
    "Location": "TanksClient.java",
    "Content": "What went wrong (if something did)? @return the message with the description of the error "
  },
  {
    "NameOfCommits": "053d1e6ff82dc2b631ce6b53bdabeaab61260911",
    "Signature": "public InputStream getInput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1379-1534",
    "Date": "2016-12-23T08:45:12Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to send",
      "send some",
      "some data",
      "data to",
      "to the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to put",
      "put the",
      "the data",
      "data in"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to send some data to the server @return { @code InputStream} to put the data in "
  },
  {
    "NameOfCommits": "f1e5f0594f9993042c42376f616a98b346a9baab",
    "Signature": "public OutputStream getOutput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1568-1728",
    "Date": "2016-12-23T08:37:13Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to get",
      "get some",
      "some data",
      "data from",
      "from the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data",
      "data from"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to get some data from the server @return { @code InputStream} to get the data from "
  },
  {
    "NameOfCommits": "b2db3992345d88e1790acedc7ec5d01ea1676f2a",
    "Signature": "public class TanksServer implements Runnable ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "258-516",
    "Date": "2016-12-22T20:57:08Z",
    "NGrams": [
      "A simple",
      "simple data",
      "data passing",
      "passing server",
      "server for",
      "for two",
      "two clients",
      "clients It",
      "It does",
      "does all",
      "all the",
      "the initial",
      "initial conversation",
      "conversation with",
      "with clients",
      "clients When",
      "When it",
      "it establishes",
      "establishes a",
      "a connection",
      "connection with",
      "with two",
      "two clients",
      "clients it",
      "it just",
      "just passes",
      "passes all",
      "all the",
      "the data",
      "data from",
      "from one",
      "one to",
      "to another"
    ],
    "Location": "TanksServer.java",
    "Content": "A simple data-passing server for two clients.It does all the initial conversation with clients.When it establishes a connection with two clients it just passes all the data from one to another "
  },
  {
    "NameOfCommits": "c2fb0852f4f83a7c68c2add9495ecc6842ba21ec",
    "Signature": "public Tank(Landscape land, boolean isOpponent, TanksGame game, TankGun gun, int xPos) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1140-1406",
    "Date": "2016-12-22T20:50:00Z",
    "NGrams": [
      "Creates new",
      "new tank",
      "tank located",
      "located on",
      "on code",
      "code land",
      "land param",
      "param land",
      "land link",
      "link Landscape",
      "Landscape where",
      "where to",
      "to locate",
      "locate our",
      "our new",
      "new tank",
      "tank param",
      "param xPos",
      "xPos our",
      "our tank",
      "tank initial",
      "initial x",
      "x position"
    ],
    "Location": "Tank.java",
    "Content": "Creates new tank located on { @code land} @param land { @link Landscape}, where to locate our new tank @param xPos our tank initial x-position "
  },
  {
    "NameOfCommits": "c01ea7eb88e154eb16539cda8847d03bf8449968",
    "Signature": "public double getX() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1558-1680",
    "Date": "2016-12-22T20:46:04Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank",
      "tank return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the tank @return the x-coordinate of the tank "
  },
  {
    "NameOfCommits": "526ac6a178a7bd8639097c935c1e64900be4b302",
    "Signature": "public double getCenterX(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1713-2061",
    "Date": "2016-12-22T20:46:04Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the x-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "94a24ae96a2599bd7c9b2a8856f179de3cd88ad0",
    "Signature": "public double getCenterY(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2125-2473",
    "Date": "2016-12-22T17:17:31Z",
    "NGrams": [
      "Get the",
      "the y",
      "y coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the y",
      "y coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the y-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the y-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "5a45ee2b0f478fb8e55f06abcfdf995b275846dc",
    "Signature": "public void shoot() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2975-3076",
    "Date": "2016-12-22T17:17:31Z",
    "NGrams": [
      "Add a",
      "a bullet",
      "bullet to",
      "to the",
      "the game",
      "game based",
      "based on",
      "on the",
      "the current",
      "current tank",
      "tank state"
    ],
    "Location": "Tank.java",
    "Content": "Add a bullet to the game based on the current tank state "
  },
  {
    "NameOfCommits": "5814b3bfa627093c18e8117c7e3b20d7f3cf8798",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3542-3723",
    "Date": "2016-12-22T14:02:37Z",
    "NGrams": [
      "draw the",
      "the tank",
      "tank into",
      "into the",
      "the code",
      "code graphics",
      "graphics param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Tank.java",
    "Content": "draw the tank into the { @code graphics} @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "8a82364dfc54309853a29be36eb7717d2d847737",
    "Signature": "public synchronized void move(long ms) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "5591-5841",
    "Date": "2016-12-22T14:02:37Z",
    "NGrams": [
      "update all",
      "all necessary",
      "necessary parameters",
      "parameters to",
      "to move",
      "move the",
      "the tank",
      "tank according",
      "according to",
      "to how",
      "how much",
      "much time",
      "time has",
      "has passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation param",
      "param ms",
      "ms time",
      "time passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation in",
      "in milliseconds"
    ],
    "Location": "Tank.java",
    "Content": "update all necessary parameters to move the tank according tohow much time has passed since the last updation @param ms time passed since the last updation in milliseconds "
  },
  {
    "NameOfCommits": "8e407d7655231f8a96de305cb72ec3d13ebc170f",
    "Signature": "public synchronized TankPackage getPosition() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7193-7408",
    "Date": "2016-12-21T20:49:33Z",
    "NGrams": [
      "get the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank",
      "tank return",
      "return the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "get the { @link TankPackage} object with actual data about the tank @return the { @link TankPackage} object with actual data about the tank "
  },
  {
    "NameOfCommits": "6eb2be8db109c7cda6f546a4173f319bf2ab8f60",
    "Signature": "public synchronized void updatePosition(TankPackage tankPackage) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7616-7933",
    "Date": "2016-12-21T20:49:33Z",
    "NGrams": [
      "update position",
      "position based",
      "based on",
      "on the",
      "the code",
      "code tankPackage",
      "tankPackage while",
      "while our",
      "our tank",
      "tank is",
      "is updated",
      "updated based",
      "based on",
      "on key",
      "key presses",
      "presses the",
      "the opponent",
      "opponent one",
      "one is",
      "is updated",
      "updated by",
      "by calling",
      "calling this",
      "this method",
      "method param",
      "param tankPackage",
      "tankPackage information",
      "information about",
      "about the",
      "the new",
      "new position",
      "position of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "update position based on the { @code tankPackage}while our tank is updated based on key presses, the opponent one is updated by calling this method @param tankPackage information about the new position of the tank "
  },
  {
    "NameOfCommits": "108f93ed909c2541d7474a82983ca21cf0bc2057",
    "Signature": "public TanksGame(long startTime, boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1620-2092",
    "Date": "2016-12-20T21:37:42Z",
    "NGrams": [
      "Creates new",
      "new code",
      "code TankGame",
      "TankGame with",
      "with 2",
      "2 tanks",
      "tanks with",
      "with x",
      "x coords",
      "coords set",
      "set to",
      "to 100",
      "100 and",
      "and to",
      "to 500",
      "500 respectively",
      "respectively param",
      "param startTime",
      "startTime System",
      "System time",
      "time when",
      "when the",
      "the game",
      "game is",
      "is being",
      "being init",
      "init param",
      "param isSecondPlayer",
      "isSecondPlayer code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are the",
      "the tank",
      "tank with",
      "with x",
      "x coord",
      "coord set",
      "set to",
      "to 500",
      "500 param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksGame.java",
    "Content": "Creates new { @code TankGame} with 2 tanks with x-coords set to 100 and to 500 respectively @param startTime System time when the game is being init @param isSecondPlayer { @code true} if we are the tank with x-coord set to 500 @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "7357168009afb1b5cdc5c2f7ef2399c7c6df5785",
    "Signature": "public synchronized void addBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2944-3120",
    "Date": "2016-12-20T21:37:42Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered ours",
      "ours param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered ours @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "f87bac8bc5c2f2390fa6091c1920b7d2989a3372",
    "Signature": "public synchronized void addOpponentBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3256-3446",
    "Date": "2016-12-20T21:24:14Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered opponent\u0027s",
      "opponent\u0027s param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered opponent\u0027s @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "622acac04cea0190be6b9b936c897587b6632ea9",
    "Signature": "public synchronized void handleOpponentShoot(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3545-3882",
    "Date": "2016-12-20T21:24:14Z",
    "NGrams": [
      "A method",
      "method that",
      "that is",
      "is used",
      "used by",
      "by link",
      "link Receiver",
      "Receiver to",
      "to add",
      "add a",
      "a bullet",
      "bullet smartly",
      "smartly It",
      "It discards",
      "discards bad",
      "bad bullets",
      "bullets and",
      "and can",
      "can manually",
      "manually create",
      "create the",
      "the one",
      "one lost",
      "lost with",
      "with loosing",
      "loosing a",
      "a bit",
      "bit of",
      "of precision",
      "precision param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add",
      "add if",
      "if null",
      "null the",
      "the bullet",
      "bullet will",
      "will be",
      "be created",
      "created manually"
    ],
    "Location": "TanksGame.java",
    "Content": "A method that is used by { @link Receiver} to add a bullet smartlyIt discards bad bullets and can manually create the one lost with loosing a bit of precision @param bullet a bullet to add; if null, the bullet will be created manually "
  },
  {
    "NameOfCommits": "55e3c3754f97b28d27abf9ecacd7b7e7b4743936",
    "Signature": "public void handleGunChanged() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4396-4497",
    "Date": "2016-12-20T21:16:52Z",
    "NGrams": [
      "Used by",
      "by our",
      "our tank",
      "tank to",
      "to notify",
      "notify the",
      "the gun",
      "gun is",
      "is changed"
    ],
    "Location": "TanksGame.java",
    "Content": "Used by our tank to notify the gun is changed "
  },
  {
    "NameOfCommits": "35eb9d2f24112961cd6daebe62240a6202dd0d81",
    "Signature": "public KeyListener getKeyListener() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4542-4710",
    "Date": "2016-12-20T21:16:52Z",
    "NGrams": [
      "Return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses",
      "presses return",
      "return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses"
    ],
    "Location": "TanksGame.java",
    "Content": "Return the tank that will handle with key presses @return the tank that will handle with key presses "
  },
  {
    "NameOfCommits": "46ab6dc908d67deba7afc6d043fc6587b28a3931",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7591-7749",
    "Date": "2016-12-17T15:54:40Z",
    "NGrams": [
      "Draw the",
      "the whole",
      "whole scene",
      "scene param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "TanksGame.java",
    "Content": "Draw the whole scene @param graphics { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "72190ba4e584b1eddac15a1d3c028696dee8e4b7",
    "Signature": "public boolean cycle(long time) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "8109-8283",
    "Date": "2016-12-17T15:54:40Z",
    "NGrams": [
      "Update the",
      "the scene",
      "scene param",
      "param time",
      "time current",
      "current time",
      "time in",
      "in millis",
      "millis return",
      "return code",
      "code true",
      "true if",
      "if there",
      "there is",
      "is anything",
      "anything to",
      "to update"
    ],
    "Location": "TanksGame.java",
    "Content": "Update the scene @param time current time in millis @return { @code true} if there is anything to update "
  },
  {
    "NameOfCommits": "d55ed32c028bdebfc7e979fd59e9a5b6fc46965c",
    "Signature": "public Tank getWinnerTank() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "9114-9278",
    "Date": "2016-12-15T15:28:48Z",
    "NGrams": [
      "Get the",
      "the winner",
      "winner tank",
      "tank Do",
      "Do not",
      "not use",
      "use when",
      "when the",
      "the game",
      "game is",
      "is not",
      "not finished",
      "finished return",
      "return the",
      "the tank",
      "tank which",
      "which won",
      "won the",
      "the game"
    ],
    "Location": "TanksGame.java",
    "Content": "Get the winner tankDo not use when the game is not finished. @return the tank which won the game "
  },
  {
    "NameOfCommits": "42a2ad697960a326fc7853719ac86abd79336d46",
    "Signature": "public boolean isWaiting() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3162-3315",
    "Date": "2016-12-10T20:34:28Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent",
      "opponent return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are waiting for an opponent @return { @code true} if we are waiting for an opponent "
  },
  {
    "NameOfCommits": "ce44812664f96dc29bd72b801dc7ce6739e2c061",
    "Signature": "public boolean isInGame() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3375-3503",
    "Date": "2016-12-08T15:18:11Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are playing",
      "playing now",
      "now return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are playing",
      "playing now"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are playing now @return { @code true} if we are playing now "
  },
  {
    "NameOfCommits": "9f487f28713a73b49a68202be48246ebae073e52",
    "Signature": "public void startGame(boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3554-3935",
    "Date": "2016-12-08T15:18:11Z",
    "NGrams": [
      "Start a",
      "a new",
      "new game",
      "game Expects",
      "Expects that",
      "that the",
      "the connection",
      "connection to",
      "to our",
      "our opponent",
      "opponent has",
      "has already",
      "already been",
      "been established",
      "established param",
      "param isSecondPlayer",
      "isSecondPlayer are",
      "are we",
      "we the",
      "the right",
      "right player",
      "player on",
      "on start",
      "start param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksPanel.java",
    "Content": "Start a new gameExpects that the connection to our opponent has already been established @param isSecondPlayer are we the right player on start? @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "1c820199fc3155c2949aaebe50ae7872883ab9e9",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2018-05-25T12:47:40Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw2.task2",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw2.task2",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected \u003cT extends Comparable\u003cT\u003e\u003e void swap(T[] array, int i, int j) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "116-456",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Swaps two",
      "two elements",
      "elements in",
      "in the",
      "the array",
      "array param",
      "param array",
      "array an",
      "an array",
      "array where",
      "where swapping",
      "swapping is",
      "is done",
      "done param",
      "param i",
      "i index",
      "index of",
      "of the",
      "the first",
      "first element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param j",
      "j index",
      "index of",
      "of the",
      "the second",
      "second element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "BaseSorter.java",
    "Content": "Swaps two elements in the array @param array an array where swapping is done @param i index of the first element in the array @param j index of the second element in the array @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT extends Comparable\u003cT\u003e\u003e boolean isSorted(T[] array) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "549-868",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether an",
      "an array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order",
      "order param",
      "param array",
      "array an",
      "an array",
      "array which",
      "which is",
      "is being",
      "being checked",
      "checked param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array",
      "array return",
      "return code",
      "code true",
      "true if",
      "if code",
      "code array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order"
    ],
    "Location": "BaseSorter.java",
    "Content": "Checks whether an array is sorted in ascending order @param array an array which is being checked @param \u003cT\u003e type of elements in the array @return { @code true} if { @code array} is sorted in ascending order "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "\u003cT extends Comparable\u003cT\u003e\u003e void sort(T[] array)",
    "Namespace": "sem2.hw3.task1",
    "Range": "105-334",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Sorts code",
      "code array",
      "array in",
      "in ascending",
      "ascending order",
      "order using",
      "using link",
      "link Comparable",
      "Comparable compareTo",
      "compareTo param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "Sorter.java",
    "Content": "Sorts { @code array} in ascending order using { @link Comparable#compareTo} @param array an array to sort @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ConsoleSpiralOutputter extends DefaultSpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "25-165",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Table spiral",
      "spiral outputter",
      "outputter using",
      "using link",
      "link System",
      "System out",
      "out as",
      "as a",
      "a destination"
    ],
    "Location": "ConsoleSpiralOutputter.java",
    "Content": " Table spiral outputter using { @link System#out} as a destination "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract class DefaultSpiralOutputter implements SpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "54-267",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Default SpiralOutputter",
      "SpiralOutputter implementation",
      "implementation Can",
      "Can output",
      "output a",
      "a table",
      "table to",
      "to any",
      "any link",
      "link PrintStream",
      "PrintStream including",
      "including System",
      "System out",
      "out and",
      "and any",
      "any file"
    ],
    "Location": "DefaultSpiralOutputter.java",
    "Content": "Default SpiralOutputter implementation.Can output a table to any { @link PrintStream}including System.out and any file."
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public FileSpiralOutputter(String fileName) throws FileNotFoundException ",
    "Namespace": "sem2.hw3.task2",
    "Range": "208-511",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates outputter",
      "outputter associated",
      "associated with",
      "with file",
      "file named",
      "named code",
      "code fileName",
      "fileName param",
      "param fileName",
      "fileName name",
      "name of",
      "of the",
      "the file",
      "file to",
      "to output",
      "output the",
      "the table",
      "table in",
      "in throws",
      "throws FileNotFoundException",
      "FileNotFoundException if",
      "if no",
      "no file",
      "file named",
      "named code",
      "code fileName",
      "fileName was",
      "was found"
    ],
    "Location": "FileSpiralOutputter.java",
    "Content": "Creates outputter associated with file named { @code fileName} @param fileName name of the file to output the table in @throws FileNotFoundException if no file named { @code fileName} was found "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void outputSpirally(int[][] table)",
    "Namespace": "sem2.hw3.task2",
    "Range": "114-241",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Outputs code",
      "code table",
      "table spirally",
      "spirally param",
      "param table",
      "table a",
      "a table",
      "table to",
      "to output"
    ],
    "Location": "SpiralOutputter.java",
    "Content": "Outputs { @code table} spirally @param table a table to output "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-134",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used for",
      "for providing",
      "providing some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashTable"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used for providing some hash function for { @link HashTable}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T key)",
    "Namespace": "sem2.hw4.task2",
    "Range": "139-357",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code key",
      "key Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashTable",
      "HashTable hashCount",
      "hashCount param",
      "param key",
      "key the",
      "the value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of the",
      "the code",
      "code key"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code key}.Should return an integer from 0 to { @link HashTable#hashCount}. @param key the value for hashing @return hash of the { @code key} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int getBadHash() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "288-420",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated",
      "generated return",
      "return bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": "Returns the bad hash that was generated. @return bad hash that was generated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashTable\u003cK, V\u003e implements Iterable\u003cV\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "122-428",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Hash table",
      "table that",
      "that allows",
      "allows adding",
      "adding values",
      "values of",
      "of the",
      "the type",
      "type code",
      "code V",
      "V associated",
      "associated with",
      "with keys",
      "keys of",
      "of the",
      "the type",
      "type code",
      "code K",
      "K Hash",
      "Hash function",
      "function should",
      "should be",
      "be provided",
      "provided by",
      "by client",
      "client an",
      "an can",
      "can be",
      "be changed",
      "changed in",
      "in runtime",
      "runtime param",
      "param K",
      "K the",
      "the type",
      "type of",
      "of keys",
      "keys param",
      "param V",
      "V the",
      "the type",
      "type of",
      "of values"
    ],
    "Location": "HashTable.java",
    "Content": "Hash table that allows adding values of the type { @code V} associated with keys of the type { @code K}Hash function should be provided by client an can be changed in runtime. @param \u003cK\u003e the type of keys @param \u003cV\u003e the type of values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void add(K key, V value) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2128-2520",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds the",
      "the code",
      "code value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key to",
      "to the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key for",
      "for the",
      "the value",
      "value to",
      "to be",
      "be associated",
      "associated with",
      "with param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be added",
      "added throws",
      "throws KeyAlreadyExistsException",
      "KeyAlreadyExistsException if",
      "if the",
      "the code",
      "code key",
      "key already",
      "already exists",
      "exists in",
      "in the",
      "the table",
      "table throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Adds the { @code value} associated with the { @code key} to the set. @param key the key for the value to be associated with @param value the value to be added @throws KeyAlreadyExistsException if the { @code key} already exists in the table @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2884-3195",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes the",
      "the value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key from",
      "from the",
      "the set",
      "set Does",
      "Does nothing",
      "nothing in",
      "in case",
      "case of",
      "of not",
      "not founding",
      "founding this",
      "this key",
      "key in",
      "in the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key to",
      "to be",
      "be removed",
      "removed with",
      "with its",
      "its value",
      "value throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Removes the value associated with the { @code key} from the set.Does nothing in case of not founding this key in the set. @param key the key to be removed with its value @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean doesContain(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "3622-3912",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the set",
      "set contains",
      "contains a",
      "a value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key param",
      "param key",
      "key the",
      "the value",
      "value to",
      "to search",
      "search for",
      "for return",
      "return true",
      "true if",
      "if code",
      "code key",
      "key was",
      "was found",
      "found throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Checks if the set contains a value associated with the { @code key}. @param key the value to search for @return true if { @code key} was found @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void setHasher(Hasher\u003cK\u003e newHasher) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "4258-4501",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Change used",
      "used hash",
      "hash function",
      "function param",
      "param newHasher",
      "newHasher object",
      "object that",
      "that implements",
      "implements link",
      "link Hasher",
      "Hasher interface",
      "interface throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Change used hash function. @param newHasher object that implements { @link Hasher} interface @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int size() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5083-5186",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Size of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Size of the set. @return number of objects in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double loadFactor() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5219-5370",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Load factor",
      "factor of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects divided",
      "divided by",
      "by number",
      "number of",
      "of different",
      "different hash",
      "hash values"
    ],
    "Location": "HashTable.java",
    "Content": "Load factor of the set. @return number of objects divided by number of different hash values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int maxListLength() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5420-5591",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set",
      "set return",
      "return the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Returns the length of the maximum-sized list in the set. @return the length of the maximum-sized list in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class KeyAlreadyExistsException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-203",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody wants",
      "wants to",
      "to link",
      "link sem2",
      "sem2 hw4",
      "hw4 task2",
      "task2 HashTable",
      "HashTable add",
      "add an",
      "an existing",
      "existing key",
      "key to",
      "to a",
      "a table"
    ],
    "Location": "KeyAlreadyExistsException.java",
    "Content": " An exception thrown if somebody wants to { @link sem2.hw4.task2.HashTable#add} an existing key to a table. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "106-233",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "239-359",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void remove(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "365-539",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list If",
      "If the",
      "the value",
      "value was",
      "was not",
      "not found",
      "found does",
      "does nothing",
      "nothing param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed"
    ],
    "Location": "List.java",
    "Content": "Removes { @code value} from the list.If the value was not found, does nothing. @param value the value to be removed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean doesContain(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "545-737",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value",
      "value param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to look",
      "look for",
      "for return",
      "return true",
      "true if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value"
    ],
    "Location": "List.java",
    "Content": "Checks if the list contains { @code value}. @param value the value to look for @return true if the list contains { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task2",
    "Range": "790-882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "Get the size of the list. @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task2",
    "Range": "888-1004",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "Checks whether our list is empty. @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class SinglyLinkedList\u003cT\u003e implements List\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "94-303",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Singly linked",
      "linked list",
      "list implementation",
      "implementation Can",
      "Can be",
      "be iterated",
      "iterated through",
      "through using",
      "using foreach",
      "foreach iterator",
      "iterator implementation",
      "implementation supports",
      "supports link",
      "link java",
      "java util",
      "util Iterator",
      "Iterator remove"
    ],
    "Location": "SinglyLinkedList.java",
    "Content": " Singly-linked list implementation.Can be iterated through using foreach, iterator implementationsupports { @link java.util.Iterator#remove}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task1",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task1",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class UniqueList\u003cT\u003e extends SinglyLinkedList\u003cT\u003e ",
    "Namespace": "sem2.hw4.task1",
    "Range": "53-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A list",
      "list where",
      "where every",
      "every element",
      "element could",
      "could be",
      "be present",
      "present only",
      "only once"
    ],
    "Location": "UniqueList.java",
    "Content": " A list where every element could be present only once "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addFirst(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "396-527",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already have",
      "have code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already have { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addLast(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "652-786",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already contains",
      "contains code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already contains { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "910-1129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed",
      "removed throws",
      "throws NoSuchElementException",
      "NoSuchElementException if",
      "if the",
      "the list",
      "list does",
      "does not",
      "not contain",
      "contain code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": "Removes { @code value} from the list @param value the value to be removed @throws NoSuchElementException if the list does not contain { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Expression(String expressionString) throws BadExpressionException ",
    "Namespace": "sem2.hw6.task1",
    "Range": "2059-2740",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates an",
      "an ExpressionTree",
      "ExpressionTree by",
      "by a",
      "a specially",
      "specially formatted",
      "formatted string",
      "string code",
      "code expressionString",
      "expressionString should",
      "should be",
      "be formatted",
      "formatted as",
      "as follows",
      "follows br",
      "br Expr",
      "Expr is",
      "is a",
      "a positive",
      "positive integer",
      "integer number",
      "number or",
      "or Op",
      "Op Expr",
      "Expr Expr",
      "Expr br",
      "br where",
      "where Op",
      "Op is",
      "is an",
      "an operation",
      "operation one",
      "one of",
      "of br",
      "br So",
      "So the",
      "the correctly",
      "correctly formatted",
      "formatted string",
      "string is",
      "is Expr",
      "Expr br",
      "br Examples",
      "Examples of",
      "of good",
      "good strings",
      "strings ul",
      "ul li",
      "li 123",
      "123 li",
      "li li",
      "li 2",
      "2 2",
      "2 li",
      "li li",
      "li 4",
      "4 6",
      "6 12",
      "12 li",
      "li ul",
      "ul param",
      "param expressionString",
      "expressionString the",
      "the formatted",
      "formatted string",
      "string throws",
      "throws BadExpressionException",
      "BadExpressionException if",
      "if code",
      "code expressionString",
      "expressionString is",
      "is not",
      "not formatted",
      "formatted properly"
    ],
    "Location": "Expression.java",
    "Content": " Creates an ExpressionTree by a specially-formatted string.{ @code expressionString} should be formatted as follows:\u003cbr\u003eExpr is a positive integer number or (Op Expr Expr)\u003cbr\u003ewhere Op is an operation -- one of (+, -, , ).\u003cbr\u003eSo the correctly-formatted string is Expr.\u003cbr\u003e Examples of good strings:\u003cul\u003e \u003cli\u003e123\u003cli\u003e \u003cli\u003e(+ 2 2)\u003cli\u003e \u003cli\u003e(- ( 4 6) 12)\u003cli\u003e\u003cul\u003e @param expressionString the formatted string @throws BadExpressionException if { @code expressionString} is not formatted properly "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used to",
      "to provide",
      "provide some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashSet"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used to provide some hash function for { @link HashSet}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T value)",
    "Namespace": "sem2.hw6.task2",
    "Range": "134-353",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code value",
      "value Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashSet",
      "HashSet HASH",
      "HASH COUNT",
      "COUNT param",
      "param value",
      "value a",
      "a value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of code",
      "code value"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code value}.Should return an integer from 0 to { @link HashSet#HASH_COUNT}. @param value a value for hashing @return hash of { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashSet\u003cT\u003e implements Set\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "46-187",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The set",
      "set that",
      "that groups",
      "groups its",
      "its elements",
      "elements by",
      "by their",
      "their hashes",
      "hashes so",
      "so it",
      "it becomes",
      "becomes easier",
      "easier to",
      "to find",
      "find one",
      "one of",
      "of them"
    ],
    "Location": "HashSet.java",
    "Content": " The set that groups its elements by their hashes so it becomes easier to find one of them. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public enum TurnResult ",
    "Namespace": "sem2.hw7.task2",
    "Range": "140-246",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The enumeration",
      "enumeration of",
      "of thing",
      "thing that",
      "that could",
      "could happen",
      "happen after",
      "after a",
      "a turn",
      "turn was",
      "was performed"
    ],
    "Location": "TicTacToe.java",
    "Content": " The enumeration of thing that could happen after a turn was performed. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TicTacToe(int N) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1159-1279",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a game",
      "game with",
      "with field",
      "field side",
      "side size",
      "size code",
      "code N",
      "N param",
      "param N",
      "N field",
      "field side",
      "side size"
    ],
    "Location": "TicTacToe.java",
    "Content": " Start a game with field side size \u003d { @code N}. @param N field side size "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TurnResult makeTurn(int i, int j) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1492-1804",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Place next",
      "next cross",
      "cross or",
      "or zero",
      "zero to",
      "to the",
      "the code",
      "code i",
      "i code",
      "code j",
      "j cell",
      "cell param",
      "param i",
      "i the",
      "the row",
      "row where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero param",
      "param j",
      "j the",
      "the column",
      "column where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero return",
      "return An",
      "An link",
      "link TurnResult",
      "TurnResult entity",
      "entity see",
      "see TurnResult"
    ],
    "Location": "TicTacToe.java",
    "Content": " Place next cross or zero to the ({ @code i}, { @code j}) cell. @param i the row where to put the next cross or zero. @param j the column where to put the next cross or zero. @return An { @link TurnResult} entity. @see TurnResult "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ClassPrinter ",
    "Namespace": "sem2.hw7.task1",
    "Range": "54-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that can",
      "can output",
      "output some",
      "some RTTI",
      "RTTI Instead",
      "Instead of",
      "of standard",
      "standard testing",
      "testing which",
      "which is",
      "is inconvenient",
      "inconvenient here",
      "here one",
      "one can",
      "can pass",
      "pass different",
      "different classes",
      "classes into",
      "into print",
      "print statement",
      "statement in",
      "in main",
      "main Some",
      "Some classes",
      "classes to",
      "to check",
      "check are",
      "are declared",
      "declared below",
      "below standard",
      "standard library",
      "library could",
      "could also",
      "also be",
      "be used"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The class that can output some RTTI.Instead of standard testing, which is inconvenient here,one can pass different classes into print() statement in main().Some classes to check are declared below, standard library could also be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static void print(Class\u003c?\u003e clazz) ",
    "Namespace": "sem2.hw7.task1",
    "Range": "6219-6413",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The method",
      "method that",
      "that prints",
      "prints some",
      "some RTTI",
      "RTTI Works",
      "Works with",
      "with classes",
      "classes interfaces",
      "interfaces and",
      "and enums",
      "enums param",
      "param clazz",
      "clazz a",
      "a class",
      "class to",
      "to learn",
      "learn something",
      "something about"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The method that prints some RTTI.Works with classes, interfaces and enums. @param clazz a class to learn something about "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sorters\u003cT extends Comparable\u003cT\u003e\u003e extends RecursiveAction ",
    "Namespace": "sem2.hw8.task2",
    "Range": "141-300",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that provides",
      "provides parallel",
      "parallel and",
      "and non",
      "non parallel",
      "parallel quicksort",
      "quicksort implementations"
    ],
    "Location": "Sorters.java",
    "Content": "The class that provides parallel and non-parallel quicksort implementations. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void parallelSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "951-1211",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList using",
      "using multiple",
      "multiple threads",
      "threads param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} using multiple threads. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void singleThreadSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "1398-1662",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList without",
      "without multithreading",
      "multithreading param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} without multithreading. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class EmptyQueueException extends Exception ",
    "Namespace": "sem2.test1.task1",
    "Range": "27-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "an exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody was",
      "was trying",
      "trying to",
      "to remove",
      "remove an",
      "an element",
      "element form",
      "form an",
      "an empty",
      "empty queue"
    ],
    "Location": "EmptyQueueException.java",
    "Content": " an exception thrown if somebody was trying to remove an element form an empty queue "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void enqueue(T element, int priority)",
    "Namespace": "sem2.test1.task1",
    "Range": "133-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Put an",
      "an code",
      "code element",
      "element with",
      "with code",
      "code priority",
      "priority into",
      "into the",
      "the queue",
      "queue param",
      "param element",
      "element value",
      "value to",
      "to be",
      "be put",
      "put into",
      "into the",
      "the queue",
      "queue param",
      "param priority",
      "priority its",
      "its priority"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Put an { @code element} with { @code priority} into the queue @param element value to be put into the queue @param priority its priority "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "T dequeue() throws EmptyQueueException",
    "Namespace": "sem2.test1.task1",
    "Range": "342-580",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get an",
      "an element",
      "element with",
      "with maximum",
      "maximum priority",
      "priority from",
      "from the",
      "the queue",
      "queue and",
      "and remove",
      "remove it",
      "it throws",
      "throws EmptyQueueException",
      "EmptyQueueException if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty and",
      "and there",
      "there is",
      "is nothing",
      "nothing to",
      "to return",
      "return return",
      "return removed",
      "removed value"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Get an element with maximum priority from the queue and remove it @throws EmptyQueueException if the queue is empty and there is nothing to return @return removed value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.test1.task1",
    "Range": "586-691",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if the",
      "the queue",
      "queue is",
      "is empty"
    ],
    "Location": "PriorityQueue.java",
    "Content": " checks if the queue is empty @return true if the queue is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public CannonBall(long startTime, double x0, double y0, double angle) ",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "703-1073",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Create a",
      "a bullet",
      "bullet with",
      "with all",
      "all necessary",
      "necessary initial",
      "initial parameters",
      "parameters param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the ball",
      "ball is",
      "is being",
      "being fired"
    ],
    "Location": "CannonBall.java",
    "Content": "Create a bullet with all necessary initial parameters @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the ball is being fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract Explosion getExplosion(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "236-599",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown",
      "blown in",
      "in the",
      "the point",
      "point x",
      "x y",
      "y param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion return",
      "return the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown"
    ],
    "Location": "TankBullet.java",
    "Content": "Get the explosion which would happen if the bullet was blown in the point (x, y) @param x x-coord of the point of the generated explosion @param y y-coord of the point of the generated explosion @return the explosion which would happen if the bullet was blown "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void draw(Graphics2D graphics)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "605-756",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the bullet",
      "bullet param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "TankBullet.java",
    "Content": "draw the bullet @param graphics the { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void update(long time)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "762-900",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the bullet",
      "bullet position",
      "position param",
      "param time",
      "time current",
      "current system",
      "system time",
      "time in",
      "in millis"
    ],
    "Location": "TankBullet.java",
    "Content": "Update the bullet position @param time current system time in millis "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX0()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "906-1021",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the initial",
      "initial x",
      "x cooord",
      "cooord return",
      "return the",
      "the initial",
      "initial x",
      "x cooord"
    ],
    "Location": "TankBullet.java",
    "Content": "get the initial x-cooord @return the initial x-cooord "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1027-1167",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current x-coord of the bullet @return the current x-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getY()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1173-1313",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current y-coord of the bullet @return the current y-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract BulletPackage getPackage()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1319-1495",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "form a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet",
      "bullet return",
      "return a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "form a { @link BulletPackage} based on this bullet @return a { @link BulletPackage} based on this bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "166-330",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the current",
      "current state",
      "state of",
      "of explosion",
      "explosion param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Explosion.java",
    "Content": "draw the current state of explosion @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean update(long currentTime)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "337-565",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the explosion",
      "explosion state",
      "state basically",
      "basically the",
      "the sound",
      "sound wave",
      "wave param",
      "param currentTime",
      "currentTime current",
      "current tyme",
      "tyme of",
      "of the",
      "the system",
      "system return",
      "return code",
      "code true",
      "true if",
      "if it",
      "it still",
      "still explodes"
    ],
    "Location": "Explosion.java",
    "Content": "Update the explosion state (basically the sound wave) @param currentTime current tyme of the system @return { @code true} if it still explodes "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean inAffectedZone(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "571-835",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone",
      "zone param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone"
    ],
    "Location": "Explosion.java",
    "Content": "Check if the point is in the affected zone @param x x-coord of the point @param y y-coord of the point @return { @code true} if the point is in the affected zone "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class NoExplosion extends Explosion ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "41-160",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Explosion mock",
      "mock which",
      "which is",
      "is not",
      "not drawn",
      "drawn but",
      "but has",
      "has the",
      "the affection",
      "affection radius"
    ],
    "Location": "NoExplosion.java",
    "Content": "Explosion-mock which is not drawn, but has the affection radius "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics, double angle, double x, double y) ",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "203-524",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the gun",
      "gun param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw into",
      "into param",
      "param angle",
      "angle the",
      "the angle",
      "angle for",
      "for gun",
      "gun to",
      "to be",
      "be placed",
      "placed param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun",
      "gun param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "draw the gun @param graphics the { @link Graphics2D} context to draw into @param angle the angle for gun to be placed @param x x-coord of the root of the gun @param y y-coord of the root of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected abstract Shape getShape()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1149-1315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the basic",
      "basic unrotated",
      "unrotated shape",
      "shape of",
      "of the",
      "the gun",
      "gun return",
      "return link",
      "link Shape",
      "Shape entity",
      "entity which",
      "which id",
      "id the",
      "the shape",
      "shape of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "get the basic unrotated shape of the gun @return { @link Shape} entity which id the shape of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankBullet getBullet(long startTime, double x0, double y0, double angle)",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1321-1704",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Produce a",
      "a bullet",
      "bullet param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the bullet",
      "bullet is",
      "is being",
      "being fired",
      "fired return",
      "return the",
      "the new",
      "new bullet"
    ],
    "Location": "TankGun.java",
    "Content": "Produce a bullet @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the bullet is being fired @return the new bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankGun getNextGun()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1710-1863",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns",
      "guns return",
      "return the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns"
    ],
    "Location": "TankGun.java",
    "Content": "Get the next gun in the list af all guns @return the next gun in the list af all guns "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1667-1803",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draws the",
      "the landscape",
      "landscape param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "Landscape.java",
    "Content": " draws the landscape @param graphics { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getY(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1896-2086",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface",
      "surface param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate for",
      "for which",
      "which we",
      "we need",
      "need its",
      "its height",
      "height return",
      "return y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface"
    ],
    "Location": "Landscape.java",
    "Content": "get the y-coordinate on the surface @param x x-coordinate for which we need its height @return y-coordinate on the surface "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getAngle(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2542-2919",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the angle",
      "angle of",
      "of the",
      "the surface",
      "surface where",
      "where x",
      "x coordinate",
      "coordinate is",
      "is code",
      "code x",
      "x code",
      "code param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate to",
      "to find",
      "find the",
      "the angle",
      "angle return",
      "return the",
      "the angle",
      "angle from",
      "from pi",
      "pi 2",
      "2 pi",
      "pi 2",
      "2 in",
      "in radians",
      "radians If",
      "If the",
      "the height",
      "height is",
      "is growing",
      "growing y",
      "y is",
      "is decreasing",
      "decreasing when",
      "when moving",
      "moving right",
      "right the",
      "the angle",
      "angle is",
      "is positive",
      "positive If",
      "If the",
      "the height",
      "height is",
      "is decreasing",
      "decreasing the",
      "the angle",
      "angle is",
      "is negative"
    ],
    "Location": "Landscape.java",
    "Content": "get the angle of the surface where x-coordinate is \u003ccode\u003ex\u003ccode\u003e @param x x-coordinate to find the angle @return the angle from [-pi2, pi2] in radians. If the heightis growing (y is decreasing) when moving right, the angle is positive.If the height is decreasing, the angle is negative. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInAir(double x, double y) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3209-3466",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground",
      "ground param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground"
    ],
    "Location": "Landscape.java",
    "Content": "Check if the point is over the ground @param x x-coord of the point to check @param y y-coord of the point to check @return { @code true} if the point is over the ground "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class BulletPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "321-523",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "BulletPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class OpponentFinder ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "201-351",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class responsible",
      "responsible for",
      "for connecting",
      "connecting to",
      "to the",
      "the opponent",
      "opponent It",
      "It starts",
      "starts the",
      "the game",
      "game when",
      "when the",
      "the connection",
      "connection is",
      "is established"
    ],
    "Location": "OpponentFinder.java",
    "Content": "The class responsible for connecting to the opponentIt starts the game when the connection is established "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Receiver implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "249-449",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It receives",
      "receives all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the opponent",
      "opponent and",
      "and synchronizes",
      "synchronizes the",
      "the scene",
      "scene according",
      "according to",
      "to it"
    ],
    "Location": "Receiver.java",
    "Content": "The class implementing the conversation to the opponent.It receives all the data from the opponent and synchronizes the scene according to it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Receiver(Tank opponent, TanksGame game, InputStream inputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "587-858",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param opponent",
      "opponent the",
      "the tank",
      "tank to",
      "to be",
      "be updated",
      "updated according",
      "according to",
      "to the",
      "the input",
      "input data",
      "data param",
      "param game",
      "game the",
      "the game",
      "game to",
      "to be",
      "be updated",
      "updated param",
      "param inputStream",
      "inputStream the",
      "the link",
      "link InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data"
    ],
    "Location": "Receiver.java",
    "Content": " @param opponent the tank to be updated according to the input data @param game the game to be updated @param inputStream the { @link InputStream} to get the data "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isDisconnected() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1088-1262",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has stopped",
      "stopped working",
      "working return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has terminated"
    ],
    "Location": "Receiver.java",
    "Content": "Checks if the { @code Receiver} has stopped working @return { @code true} if the { @code Receiver} has terminated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sender implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "265-437",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It gets",
      "gets all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the game",
      "game and",
      "and sends",
      "sends it",
      "it every",
      "every while"
    ],
    "Location": "Sender.java",
    "Content": "The class implementing the conversation to the opponent.It gets all the data from the game and sends it every while "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Sender(Tank tank, OutputStream outputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "542-750",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param tank",
      "tank the",
      "the tank",
      "tank which",
      "which position",
      "position is",
      "is needed",
      "needed to",
      "to be",
      "be sent",
      "sent param",
      "param outputStream",
      "outputStream the",
      "the code",
      "code OutputStream",
      "OutputStream to",
      "to put",
      "put all",
      "all the",
      "the data",
      "data in"
    ],
    "Location": "Sender.java",
    "Content": " @param tank the tank which position is needed to be sent @param outputStream the { @code OutputStream} to put all the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendBulletPackage(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "838-989",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent that",
      "that we",
      "we have",
      "have shot",
      "shot param",
      "param bullet",
      "bullet the",
      "the bullet",
      "bullet we",
      "we shot"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent that we have shot @param bullet the bullet we shot "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendGameEnded() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1450-1588",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent we",
      "we have",
      "have lost",
      "lost the",
      "the game",
      "game Triples",
      "Triples the",
      "the notification",
      "notification to",
      "to be",
      "be sure"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent we have lost the game.Triples the notification to be sure "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TankPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "38-238",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "TankPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isConnected() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "952-1145",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server",
      "server return",
      "return true",
      "true if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server"
    ],
    "Location": "TanksClient.java",
    "Content": "Checks if the client has successfully connected to the server @return { @true} if the client has successfully connected to the server "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public String getErrorMessage() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1185-1338",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "What went",
      "went wrong",
      "wrong if",
      "if something",
      "something did",
      "did return",
      "return the",
      "the message",
      "message with",
      "with the",
      "the description",
      "description of",
      "of the",
      "the error"
    ],
    "Location": "TanksClient.java",
    "Content": "What went wrong (if something did)? @return the message with the description of the error "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public InputStream getInput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1379-1534",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to send",
      "send some",
      "some data",
      "data to",
      "to the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to put",
      "put the",
      "the data",
      "data in"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to send some data to the server @return { @code InputStream} to put the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public OutputStream getOutput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1568-1728",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to get",
      "get some",
      "some data",
      "data from",
      "from the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data",
      "data from"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to get some data from the server @return { @code InputStream} to get the data from "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TanksServer implements Runnable ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "258-516",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A simple",
      "simple data",
      "data passing",
      "passing server",
      "server for",
      "for two",
      "two clients",
      "clients It",
      "It does",
      "does all",
      "all the",
      "the initial",
      "initial conversation",
      "conversation with",
      "with clients",
      "clients When",
      "When it",
      "it establishes",
      "establishes a",
      "a connection",
      "connection with",
      "with two",
      "two clients",
      "clients it",
      "it just",
      "just passes",
      "passes all",
      "all the",
      "the data",
      "data from",
      "from one",
      "one to",
      "to another"
    ],
    "Location": "TanksServer.java",
    "Content": "A simple data-passing server for two clients.It does all the initial conversation with clients.When it establishes a connection with two clients it just passes all the data from one to another "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank(Landscape land, boolean isOpponent, TanksGame game, TankGun gun, int xPos) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1140-1406",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new tank",
      "tank located",
      "located on",
      "on code",
      "code land",
      "land param",
      "param land",
      "land link",
      "link Landscape",
      "Landscape where",
      "where to",
      "to locate",
      "locate our",
      "our new",
      "new tank",
      "tank param",
      "param xPos",
      "xPos our",
      "our tank",
      "tank initial",
      "initial x",
      "x position"
    ],
    "Location": "Tank.java",
    "Content": "Creates new tank located on { @code land} @param land { @link Landscape}, where to locate our new tank @param xPos our tank initial x-position "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getX() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1558-1680",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank",
      "tank return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the tank @return the x-coordinate of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterX(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1713-2061",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the x-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterY(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2125-2473",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the y",
      "y coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the y",
      "y coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the y-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the y-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void shoot() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2975-3076",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a bullet",
      "bullet to",
      "to the",
      "the game",
      "game based",
      "based on",
      "on the",
      "the current",
      "current tank",
      "tank state"
    ],
    "Location": "Tank.java",
    "Content": "Add a bullet to the game based on the current tank state "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3542-3723",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the tank",
      "tank into",
      "into the",
      "the code",
      "code graphics",
      "graphics param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Tank.java",
    "Content": "draw the tank into the { @code graphics} @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void move(long ms) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "5591-5841",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update all",
      "all necessary",
      "necessary parameters",
      "parameters to",
      "to move",
      "move the",
      "the tank",
      "tank according",
      "according to",
      "to how",
      "how much",
      "much time",
      "time has",
      "has passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation param",
      "param ms",
      "ms time",
      "time passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation in",
      "in milliseconds"
    ],
    "Location": "Tank.java",
    "Content": "update all necessary parameters to move the tank according tohow much time has passed since the last updation @param ms time passed since the last updation in milliseconds "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized TankPackage getPosition() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7193-7408",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank",
      "tank return",
      "return the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "get the { @link TankPackage} object with actual data about the tank @return the { @link TankPackage} object with actual data about the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void updatePosition(TankPackage tankPackage) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7616-7933",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update position",
      "position based",
      "based on",
      "on the",
      "the code",
      "code tankPackage",
      "tankPackage while",
      "while our",
      "our tank",
      "tank is",
      "is updated",
      "updated based",
      "based on",
      "on key",
      "key presses",
      "presses the",
      "the opponent",
      "opponent one",
      "one is",
      "is updated",
      "updated by",
      "by calling",
      "calling this",
      "this method",
      "method param",
      "param tankPackage",
      "tankPackage information",
      "information about",
      "about the",
      "the new",
      "new position",
      "position of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "update position based on the { @code tankPackage}while our tank is updated based on key presses, the opponent one is updated by calling this method @param tankPackage information about the new position of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TanksGame(long startTime, boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1620-2092",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new code",
      "code TankGame",
      "TankGame with",
      "with 2",
      "2 tanks",
      "tanks with",
      "with x",
      "x coords",
      "coords set",
      "set to",
      "to 100",
      "100 and",
      "and to",
      "to 500",
      "500 respectively",
      "respectively param",
      "param startTime",
      "startTime System",
      "System time",
      "time when",
      "when the",
      "the game",
      "game is",
      "is being",
      "being init",
      "init param",
      "param isSecondPlayer",
      "isSecondPlayer code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are the",
      "the tank",
      "tank with",
      "with x",
      "x coord",
      "coord set",
      "set to",
      "to 500",
      "500 param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksGame.java",
    "Content": "Creates new { @code TankGame} with 2 tanks with x-coords set to 100 and to 500 respectively @param startTime System time when the game is being init @param isSecondPlayer { @code true} if we are the tank with x-coord set to 500 @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2944-3120",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered ours",
      "ours param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered ours @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addOpponentBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3256-3446",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered opponent\u0027s",
      "opponent\u0027s param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered opponent\u0027s @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void handleOpponentShoot(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3545-3882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A method",
      "method that",
      "that is",
      "is used",
      "used by",
      "by link",
      "link Receiver",
      "Receiver to",
      "to add",
      "add a",
      "a bullet",
      "bullet smartly",
      "smartly It",
      "It discards",
      "discards bad",
      "bad bullets",
      "bullets and",
      "and can",
      "can manually",
      "manually create",
      "create the",
      "the one",
      "one lost",
      "lost with",
      "with loosing",
      "loosing a",
      "a bit",
      "bit of",
      "of precision",
      "precision param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add",
      "add if",
      "if null",
      "null the",
      "the bullet",
      "bullet will",
      "will be",
      "be created",
      "created manually"
    ],
    "Location": "TanksGame.java",
    "Content": "A method that is used by { @link Receiver} to add a bullet smartlyIt discards bad bullets and can manually create the one lost with loosing a bit of precision @param bullet a bullet to add; if null, the bullet will be created manually "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void handleGunChanged() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4396-4497",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Used by",
      "by our",
      "our tank",
      "tank to",
      "to notify",
      "notify the",
      "the gun",
      "gun is",
      "is changed"
    ],
    "Location": "TanksGame.java",
    "Content": "Used by our tank to notify the gun is changed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public KeyListener getKeyListener() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4542-4710",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses",
      "presses return",
      "return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses"
    ],
    "Location": "TanksGame.java",
    "Content": "Return the tank that will handle with key presses @return the tank that will handle with key presses "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7591-7749",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Draw the",
      "the whole",
      "whole scene",
      "scene param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "TanksGame.java",
    "Content": "Draw the whole scene @param graphics { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean cycle(long time) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "8109-8283",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the scene",
      "scene param",
      "param time",
      "time current",
      "current time",
      "time in",
      "in millis",
      "millis return",
      "return code",
      "code true",
      "true if",
      "if there",
      "there is",
      "is anything",
      "anything to",
      "to update"
    ],
    "Location": "TanksGame.java",
    "Content": "Update the scene @param time current time in millis @return { @code true} if there is anything to update "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank getWinnerTank() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "9114-9278",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the winner",
      "winner tank",
      "tank Do",
      "Do not",
      "not use",
      "use when",
      "when the",
      "the game",
      "game is",
      "is not",
      "not finished",
      "finished return",
      "return the",
      "the tank",
      "tank which",
      "which won",
      "won the",
      "the game"
    ],
    "Location": "TanksGame.java",
    "Content": "Get the winner tankDo not use when the game is not finished. @return the tank which won the game "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isWaiting() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3162-3315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent",
      "opponent return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are waiting for an opponent @return { @code true} if we are waiting for an opponent "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInGame() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3375-3503",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are playing",
      "playing now",
      "now return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are playing",
      "playing now"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are playing now @return { @code true} if we are playing now "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void startGame(boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3554-3935",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a new",
      "new game",
      "game Expects",
      "Expects that",
      "that the",
      "the connection",
      "connection to",
      "to our",
      "our opponent",
      "opponent has",
      "has already",
      "already been",
      "been established",
      "established param",
      "param isSecondPlayer",
      "isSecondPlayer are",
      "are we",
      "we the",
      "the right",
      "right player",
      "player on",
      "on start",
      "start param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksPanel.java",
    "Content": "Start a new gameExpects that the connection to our opponent has already been established @param isSecondPlayer are we the right player on start? @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "1c820199fc3155c2949aaebe50ae7872883ab9e9",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2018-05-25T12:47:40Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw2.task2",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw2.task2",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected \u003cT extends Comparable\u003cT\u003e\u003e void swap(T[] array, int i, int j) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "116-456",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Swaps two",
      "two elements",
      "elements in",
      "in the",
      "the array",
      "array param",
      "param array",
      "array an",
      "an array",
      "array where",
      "where swapping",
      "swapping is",
      "is done",
      "done param",
      "param i",
      "i index",
      "index of",
      "of the",
      "the first",
      "first element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param j",
      "j index",
      "index of",
      "of the",
      "the second",
      "second element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "BaseSorter.java",
    "Content": "Swaps two elements in the array @param array an array where swapping is done @param i index of the first element in the array @param j index of the second element in the array @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT extends Comparable\u003cT\u003e\u003e boolean isSorted(T[] array) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "549-868",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether an",
      "an array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order",
      "order param",
      "param array",
      "array an",
      "an array",
      "array which",
      "which is",
      "is being",
      "being checked",
      "checked param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array",
      "array return",
      "return code",
      "code true",
      "true if",
      "if code",
      "code array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order"
    ],
    "Location": "BaseSorter.java",
    "Content": "Checks whether an array is sorted in ascending order @param array an array which is being checked @param \u003cT\u003e type of elements in the array @return { @code true} if { @code array} is sorted in ascending order "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "\u003cT extends Comparable\u003cT\u003e\u003e void sort(T[] array)",
    "Namespace": "sem2.hw3.task1",
    "Range": "105-334",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Sorts code",
      "code array",
      "array in",
      "in ascending",
      "ascending order",
      "order using",
      "using link",
      "link Comparable",
      "Comparable compareTo",
      "compareTo param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "Sorter.java",
    "Content": "Sorts { @code array} in ascending order using { @link Comparable#compareTo} @param array an array to sort @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ConsoleSpiralOutputter extends DefaultSpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "25-165",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Table spiral",
      "spiral outputter",
      "outputter using",
      "using link",
      "link System",
      "System out",
      "out as",
      "as a",
      "a destination"
    ],
    "Location": "ConsoleSpiralOutputter.java",
    "Content": " Table spiral outputter using { @link System#out} as a destination "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract class DefaultSpiralOutputter implements SpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "54-267",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Default SpiralOutputter",
      "SpiralOutputter implementation",
      "implementation Can",
      "Can output",
      "output a",
      "a table",
      "table to",
      "to any",
      "any link",
      "link PrintStream",
      "PrintStream including",
      "including System",
      "System out",
      "out and",
      "and any",
      "any file"
    ],
    "Location": "DefaultSpiralOutputter.java",
    "Content": "Default SpiralOutputter implementation.Can output a table to any { @link PrintStream}including System.out and any file."
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public FileSpiralOutputter(String fileName) throws FileNotFoundException ",
    "Namespace": "sem2.hw3.task2",
    "Range": "208-511",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates outputter",
      "outputter associated",
      "associated with",
      "with file",
      "file named",
      "named code",
      "code fileName",
      "fileName param",
      "param fileName",
      "fileName name",
      "name of",
      "of the",
      "the file",
      "file to",
      "to output",
      "output the",
      "the table",
      "table in",
      "in throws",
      "throws FileNotFoundException",
      "FileNotFoundException if",
      "if no",
      "no file",
      "file named",
      "named code",
      "code fileName",
      "fileName was",
      "was found"
    ],
    "Location": "FileSpiralOutputter.java",
    "Content": "Creates outputter associated with file named { @code fileName} @param fileName name of the file to output the table in @throws FileNotFoundException if no file named { @code fileName} was found "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void outputSpirally(int[][] table)",
    "Namespace": "sem2.hw3.task2",
    "Range": "114-241",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Outputs code",
      "code table",
      "table spirally",
      "spirally param",
      "param table",
      "table a",
      "a table",
      "table to",
      "to output"
    ],
    "Location": "SpiralOutputter.java",
    "Content": "Outputs { @code table} spirally @param table a table to output "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-134",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used for",
      "for providing",
      "providing some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashTable"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used for providing some hash function for { @link HashTable}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T key)",
    "Namespace": "sem2.hw4.task2",
    "Range": "139-357",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code key",
      "key Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashTable",
      "HashTable hashCount",
      "hashCount param",
      "param key",
      "key the",
      "the value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of the",
      "the code",
      "code key"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code key}.Should return an integer from 0 to { @link HashTable#hashCount}. @param key the value for hashing @return hash of the { @code key} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int getBadHash() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "288-420",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated",
      "generated return",
      "return bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": "Returns the bad hash that was generated. @return bad hash that was generated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashTable\u003cK, V\u003e implements Iterable\u003cV\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "122-428",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Hash table",
      "table that",
      "that allows",
      "allows adding",
      "adding values",
      "values of",
      "of the",
      "the type",
      "type code",
      "code V",
      "V associated",
      "associated with",
      "with keys",
      "keys of",
      "of the",
      "the type",
      "type code",
      "code K",
      "K Hash",
      "Hash function",
      "function should",
      "should be",
      "be provided",
      "provided by",
      "by client",
      "client an",
      "an can",
      "can be",
      "be changed",
      "changed in",
      "in runtime",
      "runtime param",
      "param K",
      "K the",
      "the type",
      "type of",
      "of keys",
      "keys param",
      "param V",
      "V the",
      "the type",
      "type of",
      "of values"
    ],
    "Location": "HashTable.java",
    "Content": "Hash table that allows adding values of the type { @code V} associated with keys of the type { @code K}Hash function should be provided by client an can be changed in runtime. @param \u003cK\u003e the type of keys @param \u003cV\u003e the type of values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void add(K key, V value) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2128-2520",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds the",
      "the code",
      "code value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key to",
      "to the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key for",
      "for the",
      "the value",
      "value to",
      "to be",
      "be associated",
      "associated with",
      "with param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be added",
      "added throws",
      "throws KeyAlreadyExistsException",
      "KeyAlreadyExistsException if",
      "if the",
      "the code",
      "code key",
      "key already",
      "already exists",
      "exists in",
      "in the",
      "the table",
      "table throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Adds the { @code value} associated with the { @code key} to the set. @param key the key for the value to be associated with @param value the value to be added @throws KeyAlreadyExistsException if the { @code key} already exists in the table @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2884-3195",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes the",
      "the value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key from",
      "from the",
      "the set",
      "set Does",
      "Does nothing",
      "nothing in",
      "in case",
      "case of",
      "of not",
      "not founding",
      "founding this",
      "this key",
      "key in",
      "in the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key to",
      "to be",
      "be removed",
      "removed with",
      "with its",
      "its value",
      "value throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Removes the value associated with the { @code key} from the set.Does nothing in case of not founding this key in the set. @param key the key to be removed with its value @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean doesContain(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "3622-3912",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the set",
      "set contains",
      "contains a",
      "a value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key param",
      "param key",
      "key the",
      "the value",
      "value to",
      "to search",
      "search for",
      "for return",
      "return true",
      "true if",
      "if code",
      "code key",
      "key was",
      "was found",
      "found throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Checks if the set contains a value associated with the { @code key}. @param key the value to search for @return true if { @code key} was found @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void setHasher(Hasher\u003cK\u003e newHasher) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "4258-4501",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Change used",
      "used hash",
      "hash function",
      "function param",
      "param newHasher",
      "newHasher object",
      "object that",
      "that implements",
      "implements link",
      "link Hasher",
      "Hasher interface",
      "interface throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Change used hash function. @param newHasher object that implements { @link Hasher} interface @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int size() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5083-5186",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Size of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Size of the set. @return number of objects in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double loadFactor() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5219-5370",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Load factor",
      "factor of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects divided",
      "divided by",
      "by number",
      "number of",
      "of different",
      "different hash",
      "hash values"
    ],
    "Location": "HashTable.java",
    "Content": "Load factor of the set. @return number of objects divided by number of different hash values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int maxListLength() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5420-5591",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set",
      "set return",
      "return the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Returns the length of the maximum-sized list in the set. @return the length of the maximum-sized list in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class KeyAlreadyExistsException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-203",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody wants",
      "wants to",
      "to link",
      "link sem2",
      "sem2 hw4",
      "hw4 task2",
      "task2 HashTable",
      "HashTable add",
      "add an",
      "an existing",
      "existing key",
      "key to",
      "to a",
      "a table"
    ],
    "Location": "KeyAlreadyExistsException.java",
    "Content": " An exception thrown if somebody wants to { @link sem2.hw4.task2.HashTable#add} an existing key to a table. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "106-233",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "239-359",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void remove(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "365-539",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list If",
      "If the",
      "the value",
      "value was",
      "was not",
      "not found",
      "found does",
      "does nothing",
      "nothing param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed"
    ],
    "Location": "List.java",
    "Content": "Removes { @code value} from the list.If the value was not found, does nothing. @param value the value to be removed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean doesContain(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "545-737",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value",
      "value param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to look",
      "look for",
      "for return",
      "return true",
      "true if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value"
    ],
    "Location": "List.java",
    "Content": "Checks if the list contains { @code value}. @param value the value to look for @return true if the list contains { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task2",
    "Range": "790-882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "Get the size of the list. @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task2",
    "Range": "888-1004",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "Checks whether our list is empty. @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class SinglyLinkedList\u003cT\u003e implements List\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "94-303",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Singly linked",
      "linked list",
      "list implementation",
      "implementation Can",
      "Can be",
      "be iterated",
      "iterated through",
      "through using",
      "using foreach",
      "foreach iterator",
      "iterator implementation",
      "implementation supports",
      "supports link",
      "link java",
      "java util",
      "util Iterator",
      "Iterator remove"
    ],
    "Location": "SinglyLinkedList.java",
    "Content": " Singly-linked list implementation.Can be iterated through using foreach, iterator implementationsupports { @link java.util.Iterator#remove}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task1",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task1",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class UniqueList\u003cT\u003e extends SinglyLinkedList\u003cT\u003e ",
    "Namespace": "sem2.hw4.task1",
    "Range": "53-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A list",
      "list where",
      "where every",
      "every element",
      "element could",
      "could be",
      "be present",
      "present only",
      "only once"
    ],
    "Location": "UniqueList.java",
    "Content": " A list where every element could be present only once "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addFirst(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "396-527",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already have",
      "have code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already have { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addLast(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "652-786",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already contains",
      "contains code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already contains { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "910-1129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed",
      "removed throws",
      "throws NoSuchElementException",
      "NoSuchElementException if",
      "if the",
      "the list",
      "list does",
      "does not",
      "not contain",
      "contain code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": "Removes { @code value} from the list @param value the value to be removed @throws NoSuchElementException if the list does not contain { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Expression(String expressionString) throws BadExpressionException ",
    "Namespace": "sem2.hw6.task1",
    "Range": "2059-2740",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates an",
      "an ExpressionTree",
      "ExpressionTree by",
      "by a",
      "a specially",
      "specially formatted",
      "formatted string",
      "string code",
      "code expressionString",
      "expressionString should",
      "should be",
      "be formatted",
      "formatted as",
      "as follows",
      "follows br",
      "br Expr",
      "Expr is",
      "is a",
      "a positive",
      "positive integer",
      "integer number",
      "number or",
      "or Op",
      "Op Expr",
      "Expr Expr",
      "Expr br",
      "br where",
      "where Op",
      "Op is",
      "is an",
      "an operation",
      "operation one",
      "one of",
      "of br",
      "br So",
      "So the",
      "the correctly",
      "correctly formatted",
      "formatted string",
      "string is",
      "is Expr",
      "Expr br",
      "br Examples",
      "Examples of",
      "of good",
      "good strings",
      "strings ul",
      "ul li",
      "li 123",
      "123 li",
      "li li",
      "li 2",
      "2 2",
      "2 li",
      "li li",
      "li 4",
      "4 6",
      "6 12",
      "12 li",
      "li ul",
      "ul param",
      "param expressionString",
      "expressionString the",
      "the formatted",
      "formatted string",
      "string throws",
      "throws BadExpressionException",
      "BadExpressionException if",
      "if code",
      "code expressionString",
      "expressionString is",
      "is not",
      "not formatted",
      "formatted properly"
    ],
    "Location": "Expression.java",
    "Content": " Creates an ExpressionTree by a specially-formatted string.{ @code expressionString} should be formatted as follows:\u003cbr\u003eExpr is a positive integer number or (Op Expr Expr)\u003cbr\u003ewhere Op is an operation -- one of (+, -, , ).\u003cbr\u003eSo the correctly-formatted string is Expr.\u003cbr\u003e Examples of good strings:\u003cul\u003e \u003cli\u003e123\u003cli\u003e \u003cli\u003e(+ 2 2)\u003cli\u003e \u003cli\u003e(- ( 4 6) 12)\u003cli\u003e\u003cul\u003e @param expressionString the formatted string @throws BadExpressionException if { @code expressionString} is not formatted properly "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used to",
      "to provide",
      "provide some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashSet"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used to provide some hash function for { @link HashSet}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T value)",
    "Namespace": "sem2.hw6.task2",
    "Range": "134-353",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code value",
      "value Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashSet",
      "HashSet HASH",
      "HASH COUNT",
      "COUNT param",
      "param value",
      "value a",
      "a value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of code",
      "code value"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code value}.Should return an integer from 0 to { @link HashSet#HASH_COUNT}. @param value a value for hashing @return hash of { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashSet\u003cT\u003e implements Set\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "46-187",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The set",
      "set that",
      "that groups",
      "groups its",
      "its elements",
      "elements by",
      "by their",
      "their hashes",
      "hashes so",
      "so it",
      "it becomes",
      "becomes easier",
      "easier to",
      "to find",
      "find one",
      "one of",
      "of them"
    ],
    "Location": "HashSet.java",
    "Content": " The set that groups its elements by their hashes so it becomes easier to find one of them. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public enum TurnResult ",
    "Namespace": "sem2.hw7.task2",
    "Range": "140-246",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The enumeration",
      "enumeration of",
      "of thing",
      "thing that",
      "that could",
      "could happen",
      "happen after",
      "after a",
      "a turn",
      "turn was",
      "was performed"
    ],
    "Location": "TicTacToe.java",
    "Content": " The enumeration of thing that could happen after a turn was performed. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TicTacToe(int N) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1159-1279",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a game",
      "game with",
      "with field",
      "field side",
      "side size",
      "size code",
      "code N",
      "N param",
      "param N",
      "N field",
      "field side",
      "side size"
    ],
    "Location": "TicTacToe.java",
    "Content": " Start a game with field side size \u003d { @code N}. @param N field side size "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TurnResult makeTurn(int i, int j) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1492-1804",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Place next",
      "next cross",
      "cross or",
      "or zero",
      "zero to",
      "to the",
      "the code",
      "code i",
      "i code",
      "code j",
      "j cell",
      "cell param",
      "param i",
      "i the",
      "the row",
      "row where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero param",
      "param j",
      "j the",
      "the column",
      "column where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero return",
      "return An",
      "An link",
      "link TurnResult",
      "TurnResult entity",
      "entity see",
      "see TurnResult"
    ],
    "Location": "TicTacToe.java",
    "Content": " Place next cross or zero to the ({ @code i}, { @code j}) cell. @param i the row where to put the next cross or zero. @param j the column where to put the next cross or zero. @return An { @link TurnResult} entity. @see TurnResult "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ClassPrinter ",
    "Namespace": "sem2.hw7.task1",
    "Range": "54-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that can",
      "can output",
      "output some",
      "some RTTI",
      "RTTI Instead",
      "Instead of",
      "of standard",
      "standard testing",
      "testing which",
      "which is",
      "is inconvenient",
      "inconvenient here",
      "here one",
      "one can",
      "can pass",
      "pass different",
      "different classes",
      "classes into",
      "into print",
      "print statement",
      "statement in",
      "in main",
      "main Some",
      "Some classes",
      "classes to",
      "to check",
      "check are",
      "are declared",
      "declared below",
      "below standard",
      "standard library",
      "library could",
      "could also",
      "also be",
      "be used"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The class that can output some RTTI.Instead of standard testing, which is inconvenient here,one can pass different classes into print() statement in main().Some classes to check are declared below, standard library could also be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static void print(Class\u003c?\u003e clazz) ",
    "Namespace": "sem2.hw7.task1",
    "Range": "6219-6413",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The method",
      "method that",
      "that prints",
      "prints some",
      "some RTTI",
      "RTTI Works",
      "Works with",
      "with classes",
      "classes interfaces",
      "interfaces and",
      "and enums",
      "enums param",
      "param clazz",
      "clazz a",
      "a class",
      "class to",
      "to learn",
      "learn something",
      "something about"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The method that prints some RTTI.Works with classes, interfaces and enums. @param clazz a class to learn something about "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sorters\u003cT extends Comparable\u003cT\u003e\u003e extends RecursiveAction ",
    "Namespace": "sem2.hw8.task2",
    "Range": "141-300",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that provides",
      "provides parallel",
      "parallel and",
      "and non",
      "non parallel",
      "parallel quicksort",
      "quicksort implementations"
    ],
    "Location": "Sorters.java",
    "Content": "The class that provides parallel and non-parallel quicksort implementations. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void parallelSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "951-1211",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList using",
      "using multiple",
      "multiple threads",
      "threads param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} using multiple threads. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void singleThreadSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "1398-1662",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList without",
      "without multithreading",
      "multithreading param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} without multithreading. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class EmptyQueueException extends Exception ",
    "Namespace": "sem2.test1.task1",
    "Range": "27-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "an exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody was",
      "was trying",
      "trying to",
      "to remove",
      "remove an",
      "an element",
      "element form",
      "form an",
      "an empty",
      "empty queue"
    ],
    "Location": "EmptyQueueException.java",
    "Content": " an exception thrown if somebody was trying to remove an element form an empty queue "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void enqueue(T element, int priority)",
    "Namespace": "sem2.test1.task1",
    "Range": "133-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Put an",
      "an code",
      "code element",
      "element with",
      "with code",
      "code priority",
      "priority into",
      "into the",
      "the queue",
      "queue param",
      "param element",
      "element value",
      "value to",
      "to be",
      "be put",
      "put into",
      "into the",
      "the queue",
      "queue param",
      "param priority",
      "priority its",
      "its priority"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Put an { @code element} with { @code priority} into the queue @param element value to be put into the queue @param priority its priority "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "T dequeue() throws EmptyQueueException",
    "Namespace": "sem2.test1.task1",
    "Range": "342-580",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get an",
      "an element",
      "element with",
      "with maximum",
      "maximum priority",
      "priority from",
      "from the",
      "the queue",
      "queue and",
      "and remove",
      "remove it",
      "it throws",
      "throws EmptyQueueException",
      "EmptyQueueException if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty and",
      "and there",
      "there is",
      "is nothing",
      "nothing to",
      "to return",
      "return return",
      "return removed",
      "removed value"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Get an element with maximum priority from the queue and remove it @throws EmptyQueueException if the queue is empty and there is nothing to return @return removed value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.test1.task1",
    "Range": "586-691",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if the",
      "the queue",
      "queue is",
      "is empty"
    ],
    "Location": "PriorityQueue.java",
    "Content": " checks if the queue is empty @return true if the queue is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public CannonBall(long startTime, double x0, double y0, double angle) ",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "703-1073",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Create a",
      "a bullet",
      "bullet with",
      "with all",
      "all necessary",
      "necessary initial",
      "initial parameters",
      "parameters param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the ball",
      "ball is",
      "is being",
      "being fired"
    ],
    "Location": "CannonBall.java",
    "Content": "Create a bullet with all necessary initial parameters @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the ball is being fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract Explosion getExplosion(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "236-599",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown",
      "blown in",
      "in the",
      "the point",
      "point x",
      "x y",
      "y param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion return",
      "return the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown"
    ],
    "Location": "TankBullet.java",
    "Content": "Get the explosion which would happen if the bullet was blown in the point (x, y) @param x x-coord of the point of the generated explosion @param y y-coord of the point of the generated explosion @return the explosion which would happen if the bullet was blown "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void draw(Graphics2D graphics)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "605-756",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the bullet",
      "bullet param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "TankBullet.java",
    "Content": "draw the bullet @param graphics the { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void update(long time)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "762-900",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the bullet",
      "bullet position",
      "position param",
      "param time",
      "time current",
      "current system",
      "system time",
      "time in",
      "in millis"
    ],
    "Location": "TankBullet.java",
    "Content": "Update the bullet position @param time current system time in millis "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX0()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "906-1021",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the initial",
      "initial x",
      "x cooord",
      "cooord return",
      "return the",
      "the initial",
      "initial x",
      "x cooord"
    ],
    "Location": "TankBullet.java",
    "Content": "get the initial x-cooord @return the initial x-cooord "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1027-1167",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current x-coord of the bullet @return the current x-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getY()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1173-1313",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current y-coord of the bullet @return the current y-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract BulletPackage getPackage()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1319-1495",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "form a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet",
      "bullet return",
      "return a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "form a { @link BulletPackage} based on this bullet @return a { @link BulletPackage} based on this bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "166-330",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the current",
      "current state",
      "state of",
      "of explosion",
      "explosion param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Explosion.java",
    "Content": "draw the current state of explosion @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean update(long currentTime)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "337-565",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the explosion",
      "explosion state",
      "state basically",
      "basically the",
      "the sound",
      "sound wave",
      "wave param",
      "param currentTime",
      "currentTime current",
      "current tyme",
      "tyme of",
      "of the",
      "the system",
      "system return",
      "return code",
      "code true",
      "true if",
      "if it",
      "it still",
      "still explodes"
    ],
    "Location": "Explosion.java",
    "Content": "Update the explosion state (basically the sound wave) @param currentTime current tyme of the system @return { @code true} if it still explodes "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean inAffectedZone(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "571-835",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone",
      "zone param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone"
    ],
    "Location": "Explosion.java",
    "Content": "Check if the point is in the affected zone @param x x-coord of the point @param y y-coord of the point @return { @code true} if the point is in the affected zone "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class NoExplosion extends Explosion ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "41-160",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Explosion mock",
      "mock which",
      "which is",
      "is not",
      "not drawn",
      "drawn but",
      "but has",
      "has the",
      "the affection",
      "affection radius"
    ],
    "Location": "NoExplosion.java",
    "Content": "Explosion-mock which is not drawn, but has the affection radius "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics, double angle, double x, double y) ",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "203-524",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the gun",
      "gun param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw into",
      "into param",
      "param angle",
      "angle the",
      "the angle",
      "angle for",
      "for gun",
      "gun to",
      "to be",
      "be placed",
      "placed param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun",
      "gun param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "draw the gun @param graphics the { @link Graphics2D} context to draw into @param angle the angle for gun to be placed @param x x-coord of the root of the gun @param y y-coord of the root of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected abstract Shape getShape()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1149-1315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the basic",
      "basic unrotated",
      "unrotated shape",
      "shape of",
      "of the",
      "the gun",
      "gun return",
      "return link",
      "link Shape",
      "Shape entity",
      "entity which",
      "which id",
      "id the",
      "the shape",
      "shape of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "get the basic unrotated shape of the gun @return { @link Shape} entity which id the shape of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankBullet getBullet(long startTime, double x0, double y0, double angle)",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1321-1704",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Produce a",
      "a bullet",
      "bullet param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the bullet",
      "bullet is",
      "is being",
      "being fired",
      "fired return",
      "return the",
      "the new",
      "new bullet"
    ],
    "Location": "TankGun.java",
    "Content": "Produce a bullet @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the bullet is being fired @return the new bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankGun getNextGun()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1710-1863",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns",
      "guns return",
      "return the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns"
    ],
    "Location": "TankGun.java",
    "Content": "Get the next gun in the list af all guns @return the next gun in the list af all guns "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1667-1803",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draws the",
      "the landscape",
      "landscape param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "Landscape.java",
    "Content": " draws the landscape @param graphics { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getY(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1896-2086",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface",
      "surface param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate for",
      "for which",
      "which we",
      "we need",
      "need its",
      "its height",
      "height return",
      "return y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface"
    ],
    "Location": "Landscape.java",
    "Content": "get the y-coordinate on the surface @param x x-coordinate for which we need its height @return y-coordinate on the surface "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getAngle(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2542-2919",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the angle",
      "angle of",
      "of the",
      "the surface",
      "surface where",
      "where x",
      "x coordinate",
      "coordinate is",
      "is code",
      "code x",
      "x code",
      "code param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate to",
      "to find",
      "find the",
      "the angle",
      "angle return",
      "return the",
      "the angle",
      "angle from",
      "from pi",
      "pi 2",
      "2 pi",
      "pi 2",
      "2 in",
      "in radians",
      "radians If",
      "If the",
      "the height",
      "height is",
      "is growing",
      "growing y",
      "y is",
      "is decreasing",
      "decreasing when",
      "when moving",
      "moving right",
      "right the",
      "the angle",
      "angle is",
      "is positive",
      "positive If",
      "If the",
      "the height",
      "height is",
      "is decreasing",
      "decreasing the",
      "the angle",
      "angle is",
      "is negative"
    ],
    "Location": "Landscape.java",
    "Content": "get the angle of the surface where x-coordinate is \u003ccode\u003ex\u003ccode\u003e @param x x-coordinate to find the angle @return the angle from [-pi2, pi2] in radians. If the heightis growing (y is decreasing) when moving right, the angle is positive.If the height is decreasing, the angle is negative. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInAir(double x, double y) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3209-3466",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground",
      "ground param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground"
    ],
    "Location": "Landscape.java",
    "Content": "Check if the point is over the ground @param x x-coord of the point to check @param y y-coord of the point to check @return { @code true} if the point is over the ground "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class BulletPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "321-523",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "BulletPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class OpponentFinder ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "201-351",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class responsible",
      "responsible for",
      "for connecting",
      "connecting to",
      "to the",
      "the opponent",
      "opponent It",
      "It starts",
      "starts the",
      "the game",
      "game when",
      "when the",
      "the connection",
      "connection is",
      "is established"
    ],
    "Location": "OpponentFinder.java",
    "Content": "The class responsible for connecting to the opponentIt starts the game when the connection is established "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Receiver implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "249-449",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It receives",
      "receives all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the opponent",
      "opponent and",
      "and synchronizes",
      "synchronizes the",
      "the scene",
      "scene according",
      "according to",
      "to it"
    ],
    "Location": "Receiver.java",
    "Content": "The class implementing the conversation to the opponent.It receives all the data from the opponent and synchronizes the scene according to it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Receiver(Tank opponent, TanksGame game, InputStream inputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "587-858",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param opponent",
      "opponent the",
      "the tank",
      "tank to",
      "to be",
      "be updated",
      "updated according",
      "according to",
      "to the",
      "the input",
      "input data",
      "data param",
      "param game",
      "game the",
      "the game",
      "game to",
      "to be",
      "be updated",
      "updated param",
      "param inputStream",
      "inputStream the",
      "the link",
      "link InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data"
    ],
    "Location": "Receiver.java",
    "Content": " @param opponent the tank to be updated according to the input data @param game the game to be updated @param inputStream the { @link InputStream} to get the data "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isDisconnected() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1088-1262",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has stopped",
      "stopped working",
      "working return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has terminated"
    ],
    "Location": "Receiver.java",
    "Content": "Checks if the { @code Receiver} has stopped working @return { @code true} if the { @code Receiver} has terminated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sender implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "265-437",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It gets",
      "gets all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the game",
      "game and",
      "and sends",
      "sends it",
      "it every",
      "every while"
    ],
    "Location": "Sender.java",
    "Content": "The class implementing the conversation to the opponent.It gets all the data from the game and sends it every while "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Sender(Tank tank, OutputStream outputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "542-750",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param tank",
      "tank the",
      "the tank",
      "tank which",
      "which position",
      "position is",
      "is needed",
      "needed to",
      "to be",
      "be sent",
      "sent param",
      "param outputStream",
      "outputStream the",
      "the code",
      "code OutputStream",
      "OutputStream to",
      "to put",
      "put all",
      "all the",
      "the data",
      "data in"
    ],
    "Location": "Sender.java",
    "Content": " @param tank the tank which position is needed to be sent @param outputStream the { @code OutputStream} to put all the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendBulletPackage(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "838-989",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent that",
      "that we",
      "we have",
      "have shot",
      "shot param",
      "param bullet",
      "bullet the",
      "the bullet",
      "bullet we",
      "we shot"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent that we have shot @param bullet the bullet we shot "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendGameEnded() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1450-1588",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent we",
      "we have",
      "have lost",
      "lost the",
      "the game",
      "game Triples",
      "Triples the",
      "the notification",
      "notification to",
      "to be",
      "be sure"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent we have lost the game.Triples the notification to be sure "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TankPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "38-238",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "TankPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isConnected() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "952-1145",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server",
      "server return",
      "return true",
      "true if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server"
    ],
    "Location": "TanksClient.java",
    "Content": "Checks if the client has successfully connected to the server @return { @true} if the client has successfully connected to the server "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public String getErrorMessage() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1185-1338",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "What went",
      "went wrong",
      "wrong if",
      "if something",
      "something did",
      "did return",
      "return the",
      "the message",
      "message with",
      "with the",
      "the description",
      "description of",
      "of the",
      "the error"
    ],
    "Location": "TanksClient.java",
    "Content": "What went wrong (if something did)? @return the message with the description of the error "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public InputStream getInput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1379-1534",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to send",
      "send some",
      "some data",
      "data to",
      "to the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to put",
      "put the",
      "the data",
      "data in"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to send some data to the server @return { @code InputStream} to put the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public OutputStream getOutput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1568-1728",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to get",
      "get some",
      "some data",
      "data from",
      "from the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data",
      "data from"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to get some data from the server @return { @code InputStream} to get the data from "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TanksServer implements Runnable ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "258-516",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A simple",
      "simple data",
      "data passing",
      "passing server",
      "server for",
      "for two",
      "two clients",
      "clients It",
      "It does",
      "does all",
      "all the",
      "the initial",
      "initial conversation",
      "conversation with",
      "with clients",
      "clients When",
      "When it",
      "it establishes",
      "establishes a",
      "a connection",
      "connection with",
      "with two",
      "two clients",
      "clients it",
      "it just",
      "just passes",
      "passes all",
      "all the",
      "the data",
      "data from",
      "from one",
      "one to",
      "to another"
    ],
    "Location": "TanksServer.java",
    "Content": "A simple data-passing server for two clients.It does all the initial conversation with clients.When it establishes a connection with two clients it just passes all the data from one to another "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank(Landscape land, boolean isOpponent, TanksGame game, TankGun gun, int xPos) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1140-1406",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new tank",
      "tank located",
      "located on",
      "on code",
      "code land",
      "land param",
      "param land",
      "land link",
      "link Landscape",
      "Landscape where",
      "where to",
      "to locate",
      "locate our",
      "our new",
      "new tank",
      "tank param",
      "param xPos",
      "xPos our",
      "our tank",
      "tank initial",
      "initial x",
      "x position"
    ],
    "Location": "Tank.java",
    "Content": "Creates new tank located on { @code land} @param land { @link Landscape}, where to locate our new tank @param xPos our tank initial x-position "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getX() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1558-1680",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank",
      "tank return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the tank @return the x-coordinate of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterX(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1713-2061",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the x-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterY(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2125-2473",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the y",
      "y coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the y",
      "y coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the y-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the y-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void shoot() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2975-3076",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a bullet",
      "bullet to",
      "to the",
      "the game",
      "game based",
      "based on",
      "on the",
      "the current",
      "current tank",
      "tank state"
    ],
    "Location": "Tank.java",
    "Content": "Add a bullet to the game based on the current tank state "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3542-3723",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the tank",
      "tank into",
      "into the",
      "the code",
      "code graphics",
      "graphics param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Tank.java",
    "Content": "draw the tank into the { @code graphics} @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void move(long ms) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "5591-5841",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update all",
      "all necessary",
      "necessary parameters",
      "parameters to",
      "to move",
      "move the",
      "the tank",
      "tank according",
      "according to",
      "to how",
      "how much",
      "much time",
      "time has",
      "has passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation param",
      "param ms",
      "ms time",
      "time passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation in",
      "in milliseconds"
    ],
    "Location": "Tank.java",
    "Content": "update all necessary parameters to move the tank according tohow much time has passed since the last updation @param ms time passed since the last updation in milliseconds "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized TankPackage getPosition() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7193-7408",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank",
      "tank return",
      "return the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "get the { @link TankPackage} object with actual data about the tank @return the { @link TankPackage} object with actual data about the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void updatePosition(TankPackage tankPackage) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7616-7933",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update position",
      "position based",
      "based on",
      "on the",
      "the code",
      "code tankPackage",
      "tankPackage while",
      "while our",
      "our tank",
      "tank is",
      "is updated",
      "updated based",
      "based on",
      "on key",
      "key presses",
      "presses the",
      "the opponent",
      "opponent one",
      "one is",
      "is updated",
      "updated by",
      "by calling",
      "calling this",
      "this method",
      "method param",
      "param tankPackage",
      "tankPackage information",
      "information about",
      "about the",
      "the new",
      "new position",
      "position of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "update position based on the { @code tankPackage}while our tank is updated based on key presses, the opponent one is updated by calling this method @param tankPackage information about the new position of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TanksGame(long startTime, boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1620-2092",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new code",
      "code TankGame",
      "TankGame with",
      "with 2",
      "2 tanks",
      "tanks with",
      "with x",
      "x coords",
      "coords set",
      "set to",
      "to 100",
      "100 and",
      "and to",
      "to 500",
      "500 respectively",
      "respectively param",
      "param startTime",
      "startTime System",
      "System time",
      "time when",
      "when the",
      "the game",
      "game is",
      "is being",
      "being init",
      "init param",
      "param isSecondPlayer",
      "isSecondPlayer code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are the",
      "the tank",
      "tank with",
      "with x",
      "x coord",
      "coord set",
      "set to",
      "to 500",
      "500 param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksGame.java",
    "Content": "Creates new { @code TankGame} with 2 tanks with x-coords set to 100 and to 500 respectively @param startTime System time when the game is being init @param isSecondPlayer { @code true} if we are the tank with x-coord set to 500 @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2944-3120",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered ours",
      "ours param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered ours @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addOpponentBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3256-3446",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered opponent\u0027s",
      "opponent\u0027s param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered opponent\u0027s @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void handleOpponentShoot(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3545-3882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A method",
      "method that",
      "that is",
      "is used",
      "used by",
      "by link",
      "link Receiver",
      "Receiver to",
      "to add",
      "add a",
      "a bullet",
      "bullet smartly",
      "smartly It",
      "It discards",
      "discards bad",
      "bad bullets",
      "bullets and",
      "and can",
      "can manually",
      "manually create",
      "create the",
      "the one",
      "one lost",
      "lost with",
      "with loosing",
      "loosing a",
      "a bit",
      "bit of",
      "of precision",
      "precision param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add",
      "add if",
      "if null",
      "null the",
      "the bullet",
      "bullet will",
      "will be",
      "be created",
      "created manually"
    ],
    "Location": "TanksGame.java",
    "Content": "A method that is used by { @link Receiver} to add a bullet smartlyIt discards bad bullets and can manually create the one lost with loosing a bit of precision @param bullet a bullet to add; if null, the bullet will be created manually "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void handleGunChanged() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4396-4497",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Used by",
      "by our",
      "our tank",
      "tank to",
      "to notify",
      "notify the",
      "the gun",
      "gun is",
      "is changed"
    ],
    "Location": "TanksGame.java",
    "Content": "Used by our tank to notify the gun is changed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public KeyListener getKeyListener() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4542-4710",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses",
      "presses return",
      "return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses"
    ],
    "Location": "TanksGame.java",
    "Content": "Return the tank that will handle with key presses @return the tank that will handle with key presses "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7591-7749",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Draw the",
      "the whole",
      "whole scene",
      "scene param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "TanksGame.java",
    "Content": "Draw the whole scene @param graphics { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean cycle(long time) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "8109-8283",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the scene",
      "scene param",
      "param time",
      "time current",
      "current time",
      "time in",
      "in millis",
      "millis return",
      "return code",
      "code true",
      "true if",
      "if there",
      "there is",
      "is anything",
      "anything to",
      "to update"
    ],
    "Location": "TanksGame.java",
    "Content": "Update the scene @param time current time in millis @return { @code true} if there is anything to update "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank getWinnerTank() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "9114-9278",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the winner",
      "winner tank",
      "tank Do",
      "Do not",
      "not use",
      "use when",
      "when the",
      "the game",
      "game is",
      "is not",
      "not finished",
      "finished return",
      "return the",
      "the tank",
      "tank which",
      "which won",
      "won the",
      "the game"
    ],
    "Location": "TanksGame.java",
    "Content": "Get the winner tankDo not use when the game is not finished. @return the tank which won the game "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isWaiting() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3162-3315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent",
      "opponent return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are waiting for an opponent @return { @code true} if we are waiting for an opponent "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInGame() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3375-3503",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are playing",
      "playing now",
      "now return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are playing",
      "playing now"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are playing now @return { @code true} if we are playing now "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void startGame(boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3554-3935",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a new",
      "new game",
      "game Expects",
      "Expects that",
      "that the",
      "the connection",
      "connection to",
      "to our",
      "our opponent",
      "opponent has",
      "has already",
      "already been",
      "been established",
      "established param",
      "param isSecondPlayer",
      "isSecondPlayer are",
      "are we",
      "we the",
      "the right",
      "right player",
      "player on",
      "on start",
      "start param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksPanel.java",
    "Content": "Start a new gameExpects that the connection to our opponent has already been established @param isSecondPlayer are we the right player on start? @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "1c820199fc3155c2949aaebe50ae7872883ab9e9",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2018-05-25T12:47:40Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw2.task2",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw2.task2",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected \u003cT extends Comparable\u003cT\u003e\u003e void swap(T[] array, int i, int j) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "116-456",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Swaps two",
      "two elements",
      "elements in",
      "in the",
      "the array",
      "array param",
      "param array",
      "array an",
      "an array",
      "array where",
      "where swapping",
      "swapping is",
      "is done",
      "done param",
      "param i",
      "i index",
      "index of",
      "of the",
      "the first",
      "first element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param j",
      "j index",
      "index of",
      "of the",
      "the second",
      "second element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "BaseSorter.java",
    "Content": "Swaps two elements in the array @param array an array where swapping is done @param i index of the first element in the array @param j index of the second element in the array @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT extends Comparable\u003cT\u003e\u003e boolean isSorted(T[] array) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "549-868",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether an",
      "an array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order",
      "order param",
      "param array",
      "array an",
      "an array",
      "array which",
      "which is",
      "is being",
      "being checked",
      "checked param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array",
      "array return",
      "return code",
      "code true",
      "true if",
      "if code",
      "code array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order"
    ],
    "Location": "BaseSorter.java",
    "Content": "Checks whether an array is sorted in ascending order @param array an array which is being checked @param \u003cT\u003e type of elements in the array @return { @code true} if { @code array} is sorted in ascending order "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "\u003cT extends Comparable\u003cT\u003e\u003e void sort(T[] array)",
    "Namespace": "sem2.hw3.task1",
    "Range": "105-334",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Sorts code",
      "code array",
      "array in",
      "in ascending",
      "ascending order",
      "order using",
      "using link",
      "link Comparable",
      "Comparable compareTo",
      "compareTo param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "Sorter.java",
    "Content": "Sorts { @code array} in ascending order using { @link Comparable#compareTo} @param array an array to sort @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ConsoleSpiralOutputter extends DefaultSpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "25-165",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Table spiral",
      "spiral outputter",
      "outputter using",
      "using link",
      "link System",
      "System out",
      "out as",
      "as a",
      "a destination"
    ],
    "Location": "ConsoleSpiralOutputter.java",
    "Content": " Table spiral outputter using { @link System#out} as a destination "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract class DefaultSpiralOutputter implements SpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "54-267",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Default SpiralOutputter",
      "SpiralOutputter implementation",
      "implementation Can",
      "Can output",
      "output a",
      "a table",
      "table to",
      "to any",
      "any link",
      "link PrintStream",
      "PrintStream including",
      "including System",
      "System out",
      "out and",
      "and any",
      "any file"
    ],
    "Location": "DefaultSpiralOutputter.java",
    "Content": "Default SpiralOutputter implementation.Can output a table to any { @link PrintStream}including System.out and any file."
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public FileSpiralOutputter(String fileName) throws FileNotFoundException ",
    "Namespace": "sem2.hw3.task2",
    "Range": "208-511",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates outputter",
      "outputter associated",
      "associated with",
      "with file",
      "file named",
      "named code",
      "code fileName",
      "fileName param",
      "param fileName",
      "fileName name",
      "name of",
      "of the",
      "the file",
      "file to",
      "to output",
      "output the",
      "the table",
      "table in",
      "in throws",
      "throws FileNotFoundException",
      "FileNotFoundException if",
      "if no",
      "no file",
      "file named",
      "named code",
      "code fileName",
      "fileName was",
      "was found"
    ],
    "Location": "FileSpiralOutputter.java",
    "Content": "Creates outputter associated with file named { @code fileName} @param fileName name of the file to output the table in @throws FileNotFoundException if no file named { @code fileName} was found "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void outputSpirally(int[][] table)",
    "Namespace": "sem2.hw3.task2",
    "Range": "114-241",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Outputs code",
      "code table",
      "table spirally",
      "spirally param",
      "param table",
      "table a",
      "a table",
      "table to",
      "to output"
    ],
    "Location": "SpiralOutputter.java",
    "Content": "Outputs { @code table} spirally @param table a table to output "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-134",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used for",
      "for providing",
      "providing some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashTable"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used for providing some hash function for { @link HashTable}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T key)",
    "Namespace": "sem2.hw4.task2",
    "Range": "139-357",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code key",
      "key Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashTable",
      "HashTable hashCount",
      "hashCount param",
      "param key",
      "key the",
      "the value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of the",
      "the code",
      "code key"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code key}.Should return an integer from 0 to { @link HashTable#hashCount}. @param key the value for hashing @return hash of the { @code key} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int getBadHash() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "288-420",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated",
      "generated return",
      "return bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": "Returns the bad hash that was generated. @return bad hash that was generated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashTable\u003cK, V\u003e implements Iterable\u003cV\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "122-428",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Hash table",
      "table that",
      "that allows",
      "allows adding",
      "adding values",
      "values of",
      "of the",
      "the type",
      "type code",
      "code V",
      "V associated",
      "associated with",
      "with keys",
      "keys of",
      "of the",
      "the type",
      "type code",
      "code K",
      "K Hash",
      "Hash function",
      "function should",
      "should be",
      "be provided",
      "provided by",
      "by client",
      "client an",
      "an can",
      "can be",
      "be changed",
      "changed in",
      "in runtime",
      "runtime param",
      "param K",
      "K the",
      "the type",
      "type of",
      "of keys",
      "keys param",
      "param V",
      "V the",
      "the type",
      "type of",
      "of values"
    ],
    "Location": "HashTable.java",
    "Content": "Hash table that allows adding values of the type { @code V} associated with keys of the type { @code K}Hash function should be provided by client an can be changed in runtime. @param \u003cK\u003e the type of keys @param \u003cV\u003e the type of values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void add(K key, V value) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2128-2520",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds the",
      "the code",
      "code value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key to",
      "to the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key for",
      "for the",
      "the value",
      "value to",
      "to be",
      "be associated",
      "associated with",
      "with param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be added",
      "added throws",
      "throws KeyAlreadyExistsException",
      "KeyAlreadyExistsException if",
      "if the",
      "the code",
      "code key",
      "key already",
      "already exists",
      "exists in",
      "in the",
      "the table",
      "table throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Adds the { @code value} associated with the { @code key} to the set. @param key the key for the value to be associated with @param value the value to be added @throws KeyAlreadyExistsException if the { @code key} already exists in the table @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2884-3195",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes the",
      "the value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key from",
      "from the",
      "the set",
      "set Does",
      "Does nothing",
      "nothing in",
      "in case",
      "case of",
      "of not",
      "not founding",
      "founding this",
      "this key",
      "key in",
      "in the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key to",
      "to be",
      "be removed",
      "removed with",
      "with its",
      "its value",
      "value throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Removes the value associated with the { @code key} from the set.Does nothing in case of not founding this key in the set. @param key the key to be removed with its value @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean doesContain(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "3622-3912",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the set",
      "set contains",
      "contains a",
      "a value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key param",
      "param key",
      "key the",
      "the value",
      "value to",
      "to search",
      "search for",
      "for return",
      "return true",
      "true if",
      "if code",
      "code key",
      "key was",
      "was found",
      "found throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Checks if the set contains a value associated with the { @code key}. @param key the value to search for @return true if { @code key} was found @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void setHasher(Hasher\u003cK\u003e newHasher) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "4258-4501",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Change used",
      "used hash",
      "hash function",
      "function param",
      "param newHasher",
      "newHasher object",
      "object that",
      "that implements",
      "implements link",
      "link Hasher",
      "Hasher interface",
      "interface throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Change used hash function. @param newHasher object that implements { @link Hasher} interface @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int size() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5083-5186",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Size of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Size of the set. @return number of objects in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double loadFactor() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5219-5370",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Load factor",
      "factor of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects divided",
      "divided by",
      "by number",
      "number of",
      "of different",
      "different hash",
      "hash values"
    ],
    "Location": "HashTable.java",
    "Content": "Load factor of the set. @return number of objects divided by number of different hash values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int maxListLength() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5420-5591",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set",
      "set return",
      "return the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Returns the length of the maximum-sized list in the set. @return the length of the maximum-sized list in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class KeyAlreadyExistsException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-203",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody wants",
      "wants to",
      "to link",
      "link sem2",
      "sem2 hw4",
      "hw4 task2",
      "task2 HashTable",
      "HashTable add",
      "add an",
      "an existing",
      "existing key",
      "key to",
      "to a",
      "a table"
    ],
    "Location": "KeyAlreadyExistsException.java",
    "Content": " An exception thrown if somebody wants to { @link sem2.hw4.task2.HashTable#add} an existing key to a table. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "106-233",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "239-359",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void remove(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "365-539",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list If",
      "If the",
      "the value",
      "value was",
      "was not",
      "not found",
      "found does",
      "does nothing",
      "nothing param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed"
    ],
    "Location": "List.java",
    "Content": "Removes { @code value} from the list.If the value was not found, does nothing. @param value the value to be removed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean doesContain(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "545-737",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value",
      "value param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to look",
      "look for",
      "for return",
      "return true",
      "true if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value"
    ],
    "Location": "List.java",
    "Content": "Checks if the list contains { @code value}. @param value the value to look for @return true if the list contains { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task2",
    "Range": "790-882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "Get the size of the list. @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task2",
    "Range": "888-1004",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "Checks whether our list is empty. @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class SinglyLinkedList\u003cT\u003e implements List\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "94-303",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Singly linked",
      "linked list",
      "list implementation",
      "implementation Can",
      "Can be",
      "be iterated",
      "iterated through",
      "through using",
      "using foreach",
      "foreach iterator",
      "iterator implementation",
      "implementation supports",
      "supports link",
      "link java",
      "java util",
      "util Iterator",
      "Iterator remove"
    ],
    "Location": "SinglyLinkedList.java",
    "Content": " Singly-linked list implementation.Can be iterated through using foreach, iterator implementationsupports { @link java.util.Iterator#remove}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task1",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task1",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class UniqueList\u003cT\u003e extends SinglyLinkedList\u003cT\u003e ",
    "Namespace": "sem2.hw4.task1",
    "Range": "53-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A list",
      "list where",
      "where every",
      "every element",
      "element could",
      "could be",
      "be present",
      "present only",
      "only once"
    ],
    "Location": "UniqueList.java",
    "Content": " A list where every element could be present only once "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addFirst(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "396-527",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already have",
      "have code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already have { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addLast(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "652-786",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already contains",
      "contains code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already contains { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "910-1129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed",
      "removed throws",
      "throws NoSuchElementException",
      "NoSuchElementException if",
      "if the",
      "the list",
      "list does",
      "does not",
      "not contain",
      "contain code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": "Removes { @code value} from the list @param value the value to be removed @throws NoSuchElementException if the list does not contain { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Expression(String expressionString) throws BadExpressionException ",
    "Namespace": "sem2.hw6.task1",
    "Range": "2059-2740",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates an",
      "an ExpressionTree",
      "ExpressionTree by",
      "by a",
      "a specially",
      "specially formatted",
      "formatted string",
      "string code",
      "code expressionString",
      "expressionString should",
      "should be",
      "be formatted",
      "formatted as",
      "as follows",
      "follows br",
      "br Expr",
      "Expr is",
      "is a",
      "a positive",
      "positive integer",
      "integer number",
      "number or",
      "or Op",
      "Op Expr",
      "Expr Expr",
      "Expr br",
      "br where",
      "where Op",
      "Op is",
      "is an",
      "an operation",
      "operation one",
      "one of",
      "of br",
      "br So",
      "So the",
      "the correctly",
      "correctly formatted",
      "formatted string",
      "string is",
      "is Expr",
      "Expr br",
      "br Examples",
      "Examples of",
      "of good",
      "good strings",
      "strings ul",
      "ul li",
      "li 123",
      "123 li",
      "li li",
      "li 2",
      "2 2",
      "2 li",
      "li li",
      "li 4",
      "4 6",
      "6 12",
      "12 li",
      "li ul",
      "ul param",
      "param expressionString",
      "expressionString the",
      "the formatted",
      "formatted string",
      "string throws",
      "throws BadExpressionException",
      "BadExpressionException if",
      "if code",
      "code expressionString",
      "expressionString is",
      "is not",
      "not formatted",
      "formatted properly"
    ],
    "Location": "Expression.java",
    "Content": " Creates an ExpressionTree by a specially-formatted string.{ @code expressionString} should be formatted as follows:\u003cbr\u003eExpr is a positive integer number or (Op Expr Expr)\u003cbr\u003ewhere Op is an operation -- one of (+, -, , ).\u003cbr\u003eSo the correctly-formatted string is Expr.\u003cbr\u003e Examples of good strings:\u003cul\u003e \u003cli\u003e123\u003cli\u003e \u003cli\u003e(+ 2 2)\u003cli\u003e \u003cli\u003e(- ( 4 6) 12)\u003cli\u003e\u003cul\u003e @param expressionString the formatted string @throws BadExpressionException if { @code expressionString} is not formatted properly "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used to",
      "to provide",
      "provide some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashSet"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used to provide some hash function for { @link HashSet}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T value)",
    "Namespace": "sem2.hw6.task2",
    "Range": "134-353",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code value",
      "value Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashSet",
      "HashSet HASH",
      "HASH COUNT",
      "COUNT param",
      "param value",
      "value a",
      "a value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of code",
      "code value"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code value}.Should return an integer from 0 to { @link HashSet#HASH_COUNT}. @param value a value for hashing @return hash of { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashSet\u003cT\u003e implements Set\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "46-187",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The set",
      "set that",
      "that groups",
      "groups its",
      "its elements",
      "elements by",
      "by their",
      "their hashes",
      "hashes so",
      "so it",
      "it becomes",
      "becomes easier",
      "easier to",
      "to find",
      "find one",
      "one of",
      "of them"
    ],
    "Location": "HashSet.java",
    "Content": " The set that groups its elements by their hashes so it becomes easier to find one of them. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public enum TurnResult ",
    "Namespace": "sem2.hw7.task2",
    "Range": "140-246",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The enumeration",
      "enumeration of",
      "of thing",
      "thing that",
      "that could",
      "could happen",
      "happen after",
      "after a",
      "a turn",
      "turn was",
      "was performed"
    ],
    "Location": "TicTacToe.java",
    "Content": " The enumeration of thing that could happen after a turn was performed. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TicTacToe(int N) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1159-1279",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a game",
      "game with",
      "with field",
      "field side",
      "side size",
      "size code",
      "code N",
      "N param",
      "param N",
      "N field",
      "field side",
      "side size"
    ],
    "Location": "TicTacToe.java",
    "Content": " Start a game with field side size \u003d { @code N}. @param N field side size "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TurnResult makeTurn(int i, int j) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1492-1804",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Place next",
      "next cross",
      "cross or",
      "or zero",
      "zero to",
      "to the",
      "the code",
      "code i",
      "i code",
      "code j",
      "j cell",
      "cell param",
      "param i",
      "i the",
      "the row",
      "row where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero param",
      "param j",
      "j the",
      "the column",
      "column where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero return",
      "return An",
      "An link",
      "link TurnResult",
      "TurnResult entity",
      "entity see",
      "see TurnResult"
    ],
    "Location": "TicTacToe.java",
    "Content": " Place next cross or zero to the ({ @code i}, { @code j}) cell. @param i the row where to put the next cross or zero. @param j the column where to put the next cross or zero. @return An { @link TurnResult} entity. @see TurnResult "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ClassPrinter ",
    "Namespace": "sem2.hw7.task1",
    "Range": "54-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that can",
      "can output",
      "output some",
      "some RTTI",
      "RTTI Instead",
      "Instead of",
      "of standard",
      "standard testing",
      "testing which",
      "which is",
      "is inconvenient",
      "inconvenient here",
      "here one",
      "one can",
      "can pass",
      "pass different",
      "different classes",
      "classes into",
      "into print",
      "print statement",
      "statement in",
      "in main",
      "main Some",
      "Some classes",
      "classes to",
      "to check",
      "check are",
      "are declared",
      "declared below",
      "below standard",
      "standard library",
      "library could",
      "could also",
      "also be",
      "be used"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The class that can output some RTTI.Instead of standard testing, which is inconvenient here,one can pass different classes into print() statement in main().Some classes to check are declared below, standard library could also be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static void print(Class\u003c?\u003e clazz) ",
    "Namespace": "sem2.hw7.task1",
    "Range": "6219-6413",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The method",
      "method that",
      "that prints",
      "prints some",
      "some RTTI",
      "RTTI Works",
      "Works with",
      "with classes",
      "classes interfaces",
      "interfaces and",
      "and enums",
      "enums param",
      "param clazz",
      "clazz a",
      "a class",
      "class to",
      "to learn",
      "learn something",
      "something about"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The method that prints some RTTI.Works with classes, interfaces and enums. @param clazz a class to learn something about "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sorters\u003cT extends Comparable\u003cT\u003e\u003e extends RecursiveAction ",
    "Namespace": "sem2.hw8.task2",
    "Range": "141-300",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that provides",
      "provides parallel",
      "parallel and",
      "and non",
      "non parallel",
      "parallel quicksort",
      "quicksort implementations"
    ],
    "Location": "Sorters.java",
    "Content": "The class that provides parallel and non-parallel quicksort implementations. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void parallelSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "951-1211",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList using",
      "using multiple",
      "multiple threads",
      "threads param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} using multiple threads. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void singleThreadSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "1398-1662",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList without",
      "without multithreading",
      "multithreading param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} without multithreading. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class EmptyQueueException extends Exception ",
    "Namespace": "sem2.test1.task1",
    "Range": "27-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "an exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody was",
      "was trying",
      "trying to",
      "to remove",
      "remove an",
      "an element",
      "element form",
      "form an",
      "an empty",
      "empty queue"
    ],
    "Location": "EmptyQueueException.java",
    "Content": " an exception thrown if somebody was trying to remove an element form an empty queue "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void enqueue(T element, int priority)",
    "Namespace": "sem2.test1.task1",
    "Range": "133-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Put an",
      "an code",
      "code element",
      "element with",
      "with code",
      "code priority",
      "priority into",
      "into the",
      "the queue",
      "queue param",
      "param element",
      "element value",
      "value to",
      "to be",
      "be put",
      "put into",
      "into the",
      "the queue",
      "queue param",
      "param priority",
      "priority its",
      "its priority"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Put an { @code element} with { @code priority} into the queue @param element value to be put into the queue @param priority its priority "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "T dequeue() throws EmptyQueueException",
    "Namespace": "sem2.test1.task1",
    "Range": "342-580",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get an",
      "an element",
      "element with",
      "with maximum",
      "maximum priority",
      "priority from",
      "from the",
      "the queue",
      "queue and",
      "and remove",
      "remove it",
      "it throws",
      "throws EmptyQueueException",
      "EmptyQueueException if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty and",
      "and there",
      "there is",
      "is nothing",
      "nothing to",
      "to return",
      "return return",
      "return removed",
      "removed value"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Get an element with maximum priority from the queue and remove it @throws EmptyQueueException if the queue is empty and there is nothing to return @return removed value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.test1.task1",
    "Range": "586-691",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if the",
      "the queue",
      "queue is",
      "is empty"
    ],
    "Location": "PriorityQueue.java",
    "Content": " checks if the queue is empty @return true if the queue is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public CannonBall(long startTime, double x0, double y0, double angle) ",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "703-1073",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Create a",
      "a bullet",
      "bullet with",
      "with all",
      "all necessary",
      "necessary initial",
      "initial parameters",
      "parameters param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the ball",
      "ball is",
      "is being",
      "being fired"
    ],
    "Location": "CannonBall.java",
    "Content": "Create a bullet with all necessary initial parameters @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the ball is being fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract Explosion getExplosion(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "236-599",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown",
      "blown in",
      "in the",
      "the point",
      "point x",
      "x y",
      "y param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion return",
      "return the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown"
    ],
    "Location": "TankBullet.java",
    "Content": "Get the explosion which would happen if the bullet was blown in the point (x, y) @param x x-coord of the point of the generated explosion @param y y-coord of the point of the generated explosion @return the explosion which would happen if the bullet was blown "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void draw(Graphics2D graphics)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "605-756",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the bullet",
      "bullet param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "TankBullet.java",
    "Content": "draw the bullet @param graphics the { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void update(long time)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "762-900",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the bullet",
      "bullet position",
      "position param",
      "param time",
      "time current",
      "current system",
      "system time",
      "time in",
      "in millis"
    ],
    "Location": "TankBullet.java",
    "Content": "Update the bullet position @param time current system time in millis "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX0()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "906-1021",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the initial",
      "initial x",
      "x cooord",
      "cooord return",
      "return the",
      "the initial",
      "initial x",
      "x cooord"
    ],
    "Location": "TankBullet.java",
    "Content": "get the initial x-cooord @return the initial x-cooord "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1027-1167",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current x-coord of the bullet @return the current x-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getY()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1173-1313",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current y-coord of the bullet @return the current y-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract BulletPackage getPackage()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1319-1495",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "form a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet",
      "bullet return",
      "return a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "form a { @link BulletPackage} based on this bullet @return a { @link BulletPackage} based on this bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "166-330",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the current",
      "current state",
      "state of",
      "of explosion",
      "explosion param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Explosion.java",
    "Content": "draw the current state of explosion @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean update(long currentTime)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "337-565",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the explosion",
      "explosion state",
      "state basically",
      "basically the",
      "the sound",
      "sound wave",
      "wave param",
      "param currentTime",
      "currentTime current",
      "current tyme",
      "tyme of",
      "of the",
      "the system",
      "system return",
      "return code",
      "code true",
      "true if",
      "if it",
      "it still",
      "still explodes"
    ],
    "Location": "Explosion.java",
    "Content": "Update the explosion state (basically the sound wave) @param currentTime current tyme of the system @return { @code true} if it still explodes "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean inAffectedZone(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "571-835",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone",
      "zone param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone"
    ],
    "Location": "Explosion.java",
    "Content": "Check if the point is in the affected zone @param x x-coord of the point @param y y-coord of the point @return { @code true} if the point is in the affected zone "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class NoExplosion extends Explosion ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "41-160",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Explosion mock",
      "mock which",
      "which is",
      "is not",
      "not drawn",
      "drawn but",
      "but has",
      "has the",
      "the affection",
      "affection radius"
    ],
    "Location": "NoExplosion.java",
    "Content": "Explosion-mock which is not drawn, but has the affection radius "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics, double angle, double x, double y) ",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "203-524",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the gun",
      "gun param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw into",
      "into param",
      "param angle",
      "angle the",
      "the angle",
      "angle for",
      "for gun",
      "gun to",
      "to be",
      "be placed",
      "placed param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun",
      "gun param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "draw the gun @param graphics the { @link Graphics2D} context to draw into @param angle the angle for gun to be placed @param x x-coord of the root of the gun @param y y-coord of the root of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected abstract Shape getShape()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1149-1315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the basic",
      "basic unrotated",
      "unrotated shape",
      "shape of",
      "of the",
      "the gun",
      "gun return",
      "return link",
      "link Shape",
      "Shape entity",
      "entity which",
      "which id",
      "id the",
      "the shape",
      "shape of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "get the basic unrotated shape of the gun @return { @link Shape} entity which id the shape of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankBullet getBullet(long startTime, double x0, double y0, double angle)",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1321-1704",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Produce a",
      "a bullet",
      "bullet param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the bullet",
      "bullet is",
      "is being",
      "being fired",
      "fired return",
      "return the",
      "the new",
      "new bullet"
    ],
    "Location": "TankGun.java",
    "Content": "Produce a bullet @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the bullet is being fired @return the new bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankGun getNextGun()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1710-1863",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns",
      "guns return",
      "return the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns"
    ],
    "Location": "TankGun.java",
    "Content": "Get the next gun in the list af all guns @return the next gun in the list af all guns "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1667-1803",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draws the",
      "the landscape",
      "landscape param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "Landscape.java",
    "Content": " draws the landscape @param graphics { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getY(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1896-2086",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface",
      "surface param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate for",
      "for which",
      "which we",
      "we need",
      "need its",
      "its height",
      "height return",
      "return y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface"
    ],
    "Location": "Landscape.java",
    "Content": "get the y-coordinate on the surface @param x x-coordinate for which we need its height @return y-coordinate on the surface "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getAngle(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2542-2919",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the angle",
      "angle of",
      "of the",
      "the surface",
      "surface where",
      "where x",
      "x coordinate",
      "coordinate is",
      "is code",
      "code x",
      "x code",
      "code param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate to",
      "to find",
      "find the",
      "the angle",
      "angle return",
      "return the",
      "the angle",
      "angle from",
      "from pi",
      "pi 2",
      "2 pi",
      "pi 2",
      "2 in",
      "in radians",
      "radians If",
      "If the",
      "the height",
      "height is",
      "is growing",
      "growing y",
      "y is",
      "is decreasing",
      "decreasing when",
      "when moving",
      "moving right",
      "right the",
      "the angle",
      "angle is",
      "is positive",
      "positive If",
      "If the",
      "the height",
      "height is",
      "is decreasing",
      "decreasing the",
      "the angle",
      "angle is",
      "is negative"
    ],
    "Location": "Landscape.java",
    "Content": "get the angle of the surface where x-coordinate is \u003ccode\u003ex\u003ccode\u003e @param x x-coordinate to find the angle @return the angle from [-pi2, pi2] in radians. If the heightis growing (y is decreasing) when moving right, the angle is positive.If the height is decreasing, the angle is negative. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInAir(double x, double y) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3209-3466",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground",
      "ground param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground"
    ],
    "Location": "Landscape.java",
    "Content": "Check if the point is over the ground @param x x-coord of the point to check @param y y-coord of the point to check @return { @code true} if the point is over the ground "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class BulletPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "321-523",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "BulletPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class OpponentFinder ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "201-351",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class responsible",
      "responsible for",
      "for connecting",
      "connecting to",
      "to the",
      "the opponent",
      "opponent It",
      "It starts",
      "starts the",
      "the game",
      "game when",
      "when the",
      "the connection",
      "connection is",
      "is established"
    ],
    "Location": "OpponentFinder.java",
    "Content": "The class responsible for connecting to the opponentIt starts the game when the connection is established "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Receiver implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "249-449",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It receives",
      "receives all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the opponent",
      "opponent and",
      "and synchronizes",
      "synchronizes the",
      "the scene",
      "scene according",
      "according to",
      "to it"
    ],
    "Location": "Receiver.java",
    "Content": "The class implementing the conversation to the opponent.It receives all the data from the opponent and synchronizes the scene according to it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Receiver(Tank opponent, TanksGame game, InputStream inputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "587-858",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param opponent",
      "opponent the",
      "the tank",
      "tank to",
      "to be",
      "be updated",
      "updated according",
      "according to",
      "to the",
      "the input",
      "input data",
      "data param",
      "param game",
      "game the",
      "the game",
      "game to",
      "to be",
      "be updated",
      "updated param",
      "param inputStream",
      "inputStream the",
      "the link",
      "link InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data"
    ],
    "Location": "Receiver.java",
    "Content": " @param opponent the tank to be updated according to the input data @param game the game to be updated @param inputStream the { @link InputStream} to get the data "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isDisconnected() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1088-1262",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has stopped",
      "stopped working",
      "working return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has terminated"
    ],
    "Location": "Receiver.java",
    "Content": "Checks if the { @code Receiver} has stopped working @return { @code true} if the { @code Receiver} has terminated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sender implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "265-437",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It gets",
      "gets all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the game",
      "game and",
      "and sends",
      "sends it",
      "it every",
      "every while"
    ],
    "Location": "Sender.java",
    "Content": "The class implementing the conversation to the opponent.It gets all the data from the game and sends it every while "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Sender(Tank tank, OutputStream outputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "542-750",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param tank",
      "tank the",
      "the tank",
      "tank which",
      "which position",
      "position is",
      "is needed",
      "needed to",
      "to be",
      "be sent",
      "sent param",
      "param outputStream",
      "outputStream the",
      "the code",
      "code OutputStream",
      "OutputStream to",
      "to put",
      "put all",
      "all the",
      "the data",
      "data in"
    ],
    "Location": "Sender.java",
    "Content": " @param tank the tank which position is needed to be sent @param outputStream the { @code OutputStream} to put all the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendBulletPackage(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "838-989",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent that",
      "that we",
      "we have",
      "have shot",
      "shot param",
      "param bullet",
      "bullet the",
      "the bullet",
      "bullet we",
      "we shot"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent that we have shot @param bullet the bullet we shot "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendGameEnded() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1450-1588",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent we",
      "we have",
      "have lost",
      "lost the",
      "the game",
      "game Triples",
      "Triples the",
      "the notification",
      "notification to",
      "to be",
      "be sure"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent we have lost the game.Triples the notification to be sure "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TankPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "38-238",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "TankPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isConnected() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "952-1145",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server",
      "server return",
      "return true",
      "true if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server"
    ],
    "Location": "TanksClient.java",
    "Content": "Checks if the client has successfully connected to the server @return { @true} if the client has successfully connected to the server "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public String getErrorMessage() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1185-1338",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "What went",
      "went wrong",
      "wrong if",
      "if something",
      "something did",
      "did return",
      "return the",
      "the message",
      "message with",
      "with the",
      "the description",
      "description of",
      "of the",
      "the error"
    ],
    "Location": "TanksClient.java",
    "Content": "What went wrong (if something did)? @return the message with the description of the error "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public InputStream getInput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1379-1534",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to send",
      "send some",
      "some data",
      "data to",
      "to the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to put",
      "put the",
      "the data",
      "data in"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to send some data to the server @return { @code InputStream} to put the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public OutputStream getOutput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1568-1728",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to get",
      "get some",
      "some data",
      "data from",
      "from the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data",
      "data from"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to get some data from the server @return { @code InputStream} to get the data from "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TanksServer implements Runnable ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "258-516",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A simple",
      "simple data",
      "data passing",
      "passing server",
      "server for",
      "for two",
      "two clients",
      "clients It",
      "It does",
      "does all",
      "all the",
      "the initial",
      "initial conversation",
      "conversation with",
      "with clients",
      "clients When",
      "When it",
      "it establishes",
      "establishes a",
      "a connection",
      "connection with",
      "with two",
      "two clients",
      "clients it",
      "it just",
      "just passes",
      "passes all",
      "all the",
      "the data",
      "data from",
      "from one",
      "one to",
      "to another"
    ],
    "Location": "TanksServer.java",
    "Content": "A simple data-passing server for two clients.It does all the initial conversation with clients.When it establishes a connection with two clients it just passes all the data from one to another "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank(Landscape land, boolean isOpponent, TanksGame game, TankGun gun, int xPos) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1140-1406",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new tank",
      "tank located",
      "located on",
      "on code",
      "code land",
      "land param",
      "param land",
      "land link",
      "link Landscape",
      "Landscape where",
      "where to",
      "to locate",
      "locate our",
      "our new",
      "new tank",
      "tank param",
      "param xPos",
      "xPos our",
      "our tank",
      "tank initial",
      "initial x",
      "x position"
    ],
    "Location": "Tank.java",
    "Content": "Creates new tank located on { @code land} @param land { @link Landscape}, where to locate our new tank @param xPos our tank initial x-position "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getX() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1558-1680",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank",
      "tank return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the tank @return the x-coordinate of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterX(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1713-2061",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the x-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterY(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2125-2473",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the y",
      "y coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the y",
      "y coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the y-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the y-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void shoot() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2975-3076",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a bullet",
      "bullet to",
      "to the",
      "the game",
      "game based",
      "based on",
      "on the",
      "the current",
      "current tank",
      "tank state"
    ],
    "Location": "Tank.java",
    "Content": "Add a bullet to the game based on the current tank state "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3542-3723",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the tank",
      "tank into",
      "into the",
      "the code",
      "code graphics",
      "graphics param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Tank.java",
    "Content": "draw the tank into the { @code graphics} @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void move(long ms) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "5591-5841",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update all",
      "all necessary",
      "necessary parameters",
      "parameters to",
      "to move",
      "move the",
      "the tank",
      "tank according",
      "according to",
      "to how",
      "how much",
      "much time",
      "time has",
      "has passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation param",
      "param ms",
      "ms time",
      "time passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation in",
      "in milliseconds"
    ],
    "Location": "Tank.java",
    "Content": "update all necessary parameters to move the tank according tohow much time has passed since the last updation @param ms time passed since the last updation in milliseconds "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized TankPackage getPosition() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7193-7408",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank",
      "tank return",
      "return the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "get the { @link TankPackage} object with actual data about the tank @return the { @link TankPackage} object with actual data about the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void updatePosition(TankPackage tankPackage) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7616-7933",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update position",
      "position based",
      "based on",
      "on the",
      "the code",
      "code tankPackage",
      "tankPackage while",
      "while our",
      "our tank",
      "tank is",
      "is updated",
      "updated based",
      "based on",
      "on key",
      "key presses",
      "presses the",
      "the opponent",
      "opponent one",
      "one is",
      "is updated",
      "updated by",
      "by calling",
      "calling this",
      "this method",
      "method param",
      "param tankPackage",
      "tankPackage information",
      "information about",
      "about the",
      "the new",
      "new position",
      "position of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "update position based on the { @code tankPackage}while our tank is updated based on key presses, the opponent one is updated by calling this method @param tankPackage information about the new position of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TanksGame(long startTime, boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1620-2092",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new code",
      "code TankGame",
      "TankGame with",
      "with 2",
      "2 tanks",
      "tanks with",
      "with x",
      "x coords",
      "coords set",
      "set to",
      "to 100",
      "100 and",
      "and to",
      "to 500",
      "500 respectively",
      "respectively param",
      "param startTime",
      "startTime System",
      "System time",
      "time when",
      "when the",
      "the game",
      "game is",
      "is being",
      "being init",
      "init param",
      "param isSecondPlayer",
      "isSecondPlayer code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are the",
      "the tank",
      "tank with",
      "with x",
      "x coord",
      "coord set",
      "set to",
      "to 500",
      "500 param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksGame.java",
    "Content": "Creates new { @code TankGame} with 2 tanks with x-coords set to 100 and to 500 respectively @param startTime System time when the game is being init @param isSecondPlayer { @code true} if we are the tank with x-coord set to 500 @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2944-3120",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered ours",
      "ours param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered ours @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addOpponentBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3256-3446",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered opponent\u0027s",
      "opponent\u0027s param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered opponent\u0027s @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void handleOpponentShoot(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3545-3882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A method",
      "method that",
      "that is",
      "is used",
      "used by",
      "by link",
      "link Receiver",
      "Receiver to",
      "to add",
      "add a",
      "a bullet",
      "bullet smartly",
      "smartly It",
      "It discards",
      "discards bad",
      "bad bullets",
      "bullets and",
      "and can",
      "can manually",
      "manually create",
      "create the",
      "the one",
      "one lost",
      "lost with",
      "with loosing",
      "loosing a",
      "a bit",
      "bit of",
      "of precision",
      "precision param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add",
      "add if",
      "if null",
      "null the",
      "the bullet",
      "bullet will",
      "will be",
      "be created",
      "created manually"
    ],
    "Location": "TanksGame.java",
    "Content": "A method that is used by { @link Receiver} to add a bullet smartlyIt discards bad bullets and can manually create the one lost with loosing a bit of precision @param bullet a bullet to add; if null, the bullet will be created manually "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void handleGunChanged() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4396-4497",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Used by",
      "by our",
      "our tank",
      "tank to",
      "to notify",
      "notify the",
      "the gun",
      "gun is",
      "is changed"
    ],
    "Location": "TanksGame.java",
    "Content": "Used by our tank to notify the gun is changed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public KeyListener getKeyListener() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4542-4710",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses",
      "presses return",
      "return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses"
    ],
    "Location": "TanksGame.java",
    "Content": "Return the tank that will handle with key presses @return the tank that will handle with key presses "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7591-7749",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Draw the",
      "the whole",
      "whole scene",
      "scene param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "TanksGame.java",
    "Content": "Draw the whole scene @param graphics { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean cycle(long time) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "8109-8283",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the scene",
      "scene param",
      "param time",
      "time current",
      "current time",
      "time in",
      "in millis",
      "millis return",
      "return code",
      "code true",
      "true if",
      "if there",
      "there is",
      "is anything",
      "anything to",
      "to update"
    ],
    "Location": "TanksGame.java",
    "Content": "Update the scene @param time current time in millis @return { @code true} if there is anything to update "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank getWinnerTank() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "9114-9278",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the winner",
      "winner tank",
      "tank Do",
      "Do not",
      "not use",
      "use when",
      "when the",
      "the game",
      "game is",
      "is not",
      "not finished",
      "finished return",
      "return the",
      "the tank",
      "tank which",
      "which won",
      "won the",
      "the game"
    ],
    "Location": "TanksGame.java",
    "Content": "Get the winner tankDo not use when the game is not finished. @return the tank which won the game "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isWaiting() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3162-3315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent",
      "opponent return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are waiting for an opponent @return { @code true} if we are waiting for an opponent "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInGame() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3375-3503",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are playing",
      "playing now",
      "now return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are playing",
      "playing now"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are playing now @return { @code true} if we are playing now "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void startGame(boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3554-3935",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a new",
      "new game",
      "game Expects",
      "Expects that",
      "that the",
      "the connection",
      "connection to",
      "to our",
      "our opponent",
      "opponent has",
      "has already",
      "already been",
      "been established",
      "established param",
      "param isSecondPlayer",
      "isSecondPlayer are",
      "are we",
      "we the",
      "the right",
      "right player",
      "player on",
      "on start",
      "start param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksPanel.java",
    "Content": "Start a new gameExpects that the connection to our opponent has already been established @param isSecondPlayer are we the right player on start? @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "1c820199fc3155c2949aaebe50ae7872883ab9e9",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2018-05-25T12:47:40Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw2.task2",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw2.task2",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected \u003cT extends Comparable\u003cT\u003e\u003e void swap(T[] array, int i, int j) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "116-456",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Swaps two",
      "two elements",
      "elements in",
      "in the",
      "the array",
      "array param",
      "param array",
      "array an",
      "an array",
      "array where",
      "where swapping",
      "swapping is",
      "is done",
      "done param",
      "param i",
      "i index",
      "index of",
      "of the",
      "the first",
      "first element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param j",
      "j index",
      "index of",
      "of the",
      "the second",
      "second element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "BaseSorter.java",
    "Content": "Swaps two elements in the array @param array an array where swapping is done @param i index of the first element in the array @param j index of the second element in the array @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT extends Comparable\u003cT\u003e\u003e boolean isSorted(T[] array) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "549-868",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether an",
      "an array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order",
      "order param",
      "param array",
      "array an",
      "an array",
      "array which",
      "which is",
      "is being",
      "being checked",
      "checked param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array",
      "array return",
      "return code",
      "code true",
      "true if",
      "if code",
      "code array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order"
    ],
    "Location": "BaseSorter.java",
    "Content": "Checks whether an array is sorted in ascending order @param array an array which is being checked @param \u003cT\u003e type of elements in the array @return { @code true} if { @code array} is sorted in ascending order "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "\u003cT extends Comparable\u003cT\u003e\u003e void sort(T[] array)",
    "Namespace": "sem2.hw3.task1",
    "Range": "105-334",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Sorts code",
      "code array",
      "array in",
      "in ascending",
      "ascending order",
      "order using",
      "using link",
      "link Comparable",
      "Comparable compareTo",
      "compareTo param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "Sorter.java",
    "Content": "Sorts { @code array} in ascending order using { @link Comparable#compareTo} @param array an array to sort @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ConsoleSpiralOutputter extends DefaultSpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "25-165",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Table spiral",
      "spiral outputter",
      "outputter using",
      "using link",
      "link System",
      "System out",
      "out as",
      "as a",
      "a destination"
    ],
    "Location": "ConsoleSpiralOutputter.java",
    "Content": " Table spiral outputter using { @link System#out} as a destination "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract class DefaultSpiralOutputter implements SpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "54-267",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Default SpiralOutputter",
      "SpiralOutputter implementation",
      "implementation Can",
      "Can output",
      "output a",
      "a table",
      "table to",
      "to any",
      "any link",
      "link PrintStream",
      "PrintStream including",
      "including System",
      "System out",
      "out and",
      "and any",
      "any file"
    ],
    "Location": "DefaultSpiralOutputter.java",
    "Content": "Default SpiralOutputter implementation.Can output a table to any { @link PrintStream}including System.out and any file."
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public FileSpiralOutputter(String fileName) throws FileNotFoundException ",
    "Namespace": "sem2.hw3.task2",
    "Range": "208-511",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates outputter",
      "outputter associated",
      "associated with",
      "with file",
      "file named",
      "named code",
      "code fileName",
      "fileName param",
      "param fileName",
      "fileName name",
      "name of",
      "of the",
      "the file",
      "file to",
      "to output",
      "output the",
      "the table",
      "table in",
      "in throws",
      "throws FileNotFoundException",
      "FileNotFoundException if",
      "if no",
      "no file",
      "file named",
      "named code",
      "code fileName",
      "fileName was",
      "was found"
    ],
    "Location": "FileSpiralOutputter.java",
    "Content": "Creates outputter associated with file named { @code fileName} @param fileName name of the file to output the table in @throws FileNotFoundException if no file named { @code fileName} was found "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void outputSpirally(int[][] table)",
    "Namespace": "sem2.hw3.task2",
    "Range": "114-241",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Outputs code",
      "code table",
      "table spirally",
      "spirally param",
      "param table",
      "table a",
      "a table",
      "table to",
      "to output"
    ],
    "Location": "SpiralOutputter.java",
    "Content": "Outputs { @code table} spirally @param table a table to output "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-134",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used for",
      "for providing",
      "providing some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashTable"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used for providing some hash function for { @link HashTable}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T key)",
    "Namespace": "sem2.hw4.task2",
    "Range": "139-357",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code key",
      "key Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashTable",
      "HashTable hashCount",
      "hashCount param",
      "param key",
      "key the",
      "the value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of the",
      "the code",
      "code key"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code key}.Should return an integer from 0 to { @link HashTable#hashCount}. @param key the value for hashing @return hash of the { @code key} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int getBadHash() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "288-420",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated",
      "generated return",
      "return bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": "Returns the bad hash that was generated. @return bad hash that was generated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashTable\u003cK, V\u003e implements Iterable\u003cV\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "122-428",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Hash table",
      "table that",
      "that allows",
      "allows adding",
      "adding values",
      "values of",
      "of the",
      "the type",
      "type code",
      "code V",
      "V associated",
      "associated with",
      "with keys",
      "keys of",
      "of the",
      "the type",
      "type code",
      "code K",
      "K Hash",
      "Hash function",
      "function should",
      "should be",
      "be provided",
      "provided by",
      "by client",
      "client an",
      "an can",
      "can be",
      "be changed",
      "changed in",
      "in runtime",
      "runtime param",
      "param K",
      "K the",
      "the type",
      "type of",
      "of keys",
      "keys param",
      "param V",
      "V the",
      "the type",
      "type of",
      "of values"
    ],
    "Location": "HashTable.java",
    "Content": "Hash table that allows adding values of the type { @code V} associated with keys of the type { @code K}Hash function should be provided by client an can be changed in runtime. @param \u003cK\u003e the type of keys @param \u003cV\u003e the type of values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void add(K key, V value) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2128-2520",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds the",
      "the code",
      "code value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key to",
      "to the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key for",
      "for the",
      "the value",
      "value to",
      "to be",
      "be associated",
      "associated with",
      "with param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be added",
      "added throws",
      "throws KeyAlreadyExistsException",
      "KeyAlreadyExistsException if",
      "if the",
      "the code",
      "code key",
      "key already",
      "already exists",
      "exists in",
      "in the",
      "the table",
      "table throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Adds the { @code value} associated with the { @code key} to the set. @param key the key for the value to be associated with @param value the value to be added @throws KeyAlreadyExistsException if the { @code key} already exists in the table @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2884-3195",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes the",
      "the value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key from",
      "from the",
      "the set",
      "set Does",
      "Does nothing",
      "nothing in",
      "in case",
      "case of",
      "of not",
      "not founding",
      "founding this",
      "this key",
      "key in",
      "in the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key to",
      "to be",
      "be removed",
      "removed with",
      "with its",
      "its value",
      "value throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Removes the value associated with the { @code key} from the set.Does nothing in case of not founding this key in the set. @param key the key to be removed with its value @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean doesContain(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "3622-3912",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the set",
      "set contains",
      "contains a",
      "a value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key param",
      "param key",
      "key the",
      "the value",
      "value to",
      "to search",
      "search for",
      "for return",
      "return true",
      "true if",
      "if code",
      "code key",
      "key was",
      "was found",
      "found throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Checks if the set contains a value associated with the { @code key}. @param key the value to search for @return true if { @code key} was found @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void setHasher(Hasher\u003cK\u003e newHasher) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "4258-4501",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Change used",
      "used hash",
      "hash function",
      "function param",
      "param newHasher",
      "newHasher object",
      "object that",
      "that implements",
      "implements link",
      "link Hasher",
      "Hasher interface",
      "interface throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Change used hash function. @param newHasher object that implements { @link Hasher} interface @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int size() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5083-5186",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Size of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Size of the set. @return number of objects in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double loadFactor() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5219-5370",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Load factor",
      "factor of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects divided",
      "divided by",
      "by number",
      "number of",
      "of different",
      "different hash",
      "hash values"
    ],
    "Location": "HashTable.java",
    "Content": "Load factor of the set. @return number of objects divided by number of different hash values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int maxListLength() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5420-5591",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set",
      "set return",
      "return the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Returns the length of the maximum-sized list in the set. @return the length of the maximum-sized list in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class KeyAlreadyExistsException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-203",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody wants",
      "wants to",
      "to link",
      "link sem2",
      "sem2 hw4",
      "hw4 task2",
      "task2 HashTable",
      "HashTable add",
      "add an",
      "an existing",
      "existing key",
      "key to",
      "to a",
      "a table"
    ],
    "Location": "KeyAlreadyExistsException.java",
    "Content": " An exception thrown if somebody wants to { @link sem2.hw4.task2.HashTable#add} an existing key to a table. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "106-233",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "239-359",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void remove(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "365-539",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list If",
      "If the",
      "the value",
      "value was",
      "was not",
      "not found",
      "found does",
      "does nothing",
      "nothing param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed"
    ],
    "Location": "List.java",
    "Content": "Removes { @code value} from the list.If the value was not found, does nothing. @param value the value to be removed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean doesContain(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "545-737",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value",
      "value param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to look",
      "look for",
      "for return",
      "return true",
      "true if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value"
    ],
    "Location": "List.java",
    "Content": "Checks if the list contains { @code value}. @param value the value to look for @return true if the list contains { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task2",
    "Range": "790-882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "Get the size of the list. @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task2",
    "Range": "888-1004",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "Checks whether our list is empty. @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class SinglyLinkedList\u003cT\u003e implements List\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "94-303",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Singly linked",
      "linked list",
      "list implementation",
      "implementation Can",
      "Can be",
      "be iterated",
      "iterated through",
      "through using",
      "using foreach",
      "foreach iterator",
      "iterator implementation",
      "implementation supports",
      "supports link",
      "link java",
      "java util",
      "util Iterator",
      "Iterator remove"
    ],
    "Location": "SinglyLinkedList.java",
    "Content": " Singly-linked list implementation.Can be iterated through using foreach, iterator implementationsupports { @link java.util.Iterator#remove}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task1",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task1",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class UniqueList\u003cT\u003e extends SinglyLinkedList\u003cT\u003e ",
    "Namespace": "sem2.hw4.task1",
    "Range": "53-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A list",
      "list where",
      "where every",
      "every element",
      "element could",
      "could be",
      "be present",
      "present only",
      "only once"
    ],
    "Location": "UniqueList.java",
    "Content": " A list where every element could be present only once "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addFirst(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "396-527",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already have",
      "have code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already have { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addLast(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "652-786",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already contains",
      "contains code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already contains { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "910-1129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed",
      "removed throws",
      "throws NoSuchElementException",
      "NoSuchElementException if",
      "if the",
      "the list",
      "list does",
      "does not",
      "not contain",
      "contain code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": "Removes { @code value} from the list @param value the value to be removed @throws NoSuchElementException if the list does not contain { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Expression(String expressionString) throws BadExpressionException ",
    "Namespace": "sem2.hw6.task1",
    "Range": "2059-2740",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates an",
      "an ExpressionTree",
      "ExpressionTree by",
      "by a",
      "a specially",
      "specially formatted",
      "formatted string",
      "string code",
      "code expressionString",
      "expressionString should",
      "should be",
      "be formatted",
      "formatted as",
      "as follows",
      "follows br",
      "br Expr",
      "Expr is",
      "is a",
      "a positive",
      "positive integer",
      "integer number",
      "number or",
      "or Op",
      "Op Expr",
      "Expr Expr",
      "Expr br",
      "br where",
      "where Op",
      "Op is",
      "is an",
      "an operation",
      "operation one",
      "one of",
      "of br",
      "br So",
      "So the",
      "the correctly",
      "correctly formatted",
      "formatted string",
      "string is",
      "is Expr",
      "Expr br",
      "br Examples",
      "Examples of",
      "of good",
      "good strings",
      "strings ul",
      "ul li",
      "li 123",
      "123 li",
      "li li",
      "li 2",
      "2 2",
      "2 li",
      "li li",
      "li 4",
      "4 6",
      "6 12",
      "12 li",
      "li ul",
      "ul param",
      "param expressionString",
      "expressionString the",
      "the formatted",
      "formatted string",
      "string throws",
      "throws BadExpressionException",
      "BadExpressionException if",
      "if code",
      "code expressionString",
      "expressionString is",
      "is not",
      "not formatted",
      "formatted properly"
    ],
    "Location": "Expression.java",
    "Content": " Creates an ExpressionTree by a specially-formatted string.{ @code expressionString} should be formatted as follows:\u003cbr\u003eExpr is a positive integer number or (Op Expr Expr)\u003cbr\u003ewhere Op is an operation -- one of (+, -, , ).\u003cbr\u003eSo the correctly-formatted string is Expr.\u003cbr\u003e Examples of good strings:\u003cul\u003e \u003cli\u003e123\u003cli\u003e \u003cli\u003e(+ 2 2)\u003cli\u003e \u003cli\u003e(- ( 4 6) 12)\u003cli\u003e\u003cul\u003e @param expressionString the formatted string @throws BadExpressionException if { @code expressionString} is not formatted properly "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used to",
      "to provide",
      "provide some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashSet"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used to provide some hash function for { @link HashSet}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T value)",
    "Namespace": "sem2.hw6.task2",
    "Range": "134-353",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code value",
      "value Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashSet",
      "HashSet HASH",
      "HASH COUNT",
      "COUNT param",
      "param value",
      "value a",
      "a value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of code",
      "code value"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code value}.Should return an integer from 0 to { @link HashSet#HASH_COUNT}. @param value a value for hashing @return hash of { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashSet\u003cT\u003e implements Set\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "46-187",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The set",
      "set that",
      "that groups",
      "groups its",
      "its elements",
      "elements by",
      "by their",
      "their hashes",
      "hashes so",
      "so it",
      "it becomes",
      "becomes easier",
      "easier to",
      "to find",
      "find one",
      "one of",
      "of them"
    ],
    "Location": "HashSet.java",
    "Content": " The set that groups its elements by their hashes so it becomes easier to find one of them. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public enum TurnResult ",
    "Namespace": "sem2.hw7.task2",
    "Range": "140-246",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The enumeration",
      "enumeration of",
      "of thing",
      "thing that",
      "that could",
      "could happen",
      "happen after",
      "after a",
      "a turn",
      "turn was",
      "was performed"
    ],
    "Location": "TicTacToe.java",
    "Content": " The enumeration of thing that could happen after a turn was performed. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TicTacToe(int N) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1159-1279",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a game",
      "game with",
      "with field",
      "field side",
      "side size",
      "size code",
      "code N",
      "N param",
      "param N",
      "N field",
      "field side",
      "side size"
    ],
    "Location": "TicTacToe.java",
    "Content": " Start a game with field side size \u003d { @code N}. @param N field side size "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TurnResult makeTurn(int i, int j) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1492-1804",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Place next",
      "next cross",
      "cross or",
      "or zero",
      "zero to",
      "to the",
      "the code",
      "code i",
      "i code",
      "code j",
      "j cell",
      "cell param",
      "param i",
      "i the",
      "the row",
      "row where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero param",
      "param j",
      "j the",
      "the column",
      "column where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero return",
      "return An",
      "An link",
      "link TurnResult",
      "TurnResult entity",
      "entity see",
      "see TurnResult"
    ],
    "Location": "TicTacToe.java",
    "Content": " Place next cross or zero to the ({ @code i}, { @code j}) cell. @param i the row where to put the next cross or zero. @param j the column where to put the next cross or zero. @return An { @link TurnResult} entity. @see TurnResult "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ClassPrinter ",
    "Namespace": "sem2.hw7.task1",
    "Range": "54-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that can",
      "can output",
      "output some",
      "some RTTI",
      "RTTI Instead",
      "Instead of",
      "of standard",
      "standard testing",
      "testing which",
      "which is",
      "is inconvenient",
      "inconvenient here",
      "here one",
      "one can",
      "can pass",
      "pass different",
      "different classes",
      "classes into",
      "into print",
      "print statement",
      "statement in",
      "in main",
      "main Some",
      "Some classes",
      "classes to",
      "to check",
      "check are",
      "are declared",
      "declared below",
      "below standard",
      "standard library",
      "library could",
      "could also",
      "also be",
      "be used"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The class that can output some RTTI.Instead of standard testing, which is inconvenient here,one can pass different classes into print() statement in main().Some classes to check are declared below, standard library could also be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static void print(Class\u003c?\u003e clazz) ",
    "Namespace": "sem2.hw7.task1",
    "Range": "6219-6413",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The method",
      "method that",
      "that prints",
      "prints some",
      "some RTTI",
      "RTTI Works",
      "Works with",
      "with classes",
      "classes interfaces",
      "interfaces and",
      "and enums",
      "enums param",
      "param clazz",
      "clazz a",
      "a class",
      "class to",
      "to learn",
      "learn something",
      "something about"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The method that prints some RTTI.Works with classes, interfaces and enums. @param clazz a class to learn something about "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sorters\u003cT extends Comparable\u003cT\u003e\u003e extends RecursiveAction ",
    "Namespace": "sem2.hw8.task2",
    "Range": "141-300",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that provides",
      "provides parallel",
      "parallel and",
      "and non",
      "non parallel",
      "parallel quicksort",
      "quicksort implementations"
    ],
    "Location": "Sorters.java",
    "Content": "The class that provides parallel and non-parallel quicksort implementations. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void parallelSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "951-1211",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList using",
      "using multiple",
      "multiple threads",
      "threads param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} using multiple threads. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void singleThreadSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "1398-1662",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList without",
      "without multithreading",
      "multithreading param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} without multithreading. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class EmptyQueueException extends Exception ",
    "Namespace": "sem2.test1.task1",
    "Range": "27-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "an exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody was",
      "was trying",
      "trying to",
      "to remove",
      "remove an",
      "an element",
      "element form",
      "form an",
      "an empty",
      "empty queue"
    ],
    "Location": "EmptyQueueException.java",
    "Content": " an exception thrown if somebody was trying to remove an element form an empty queue "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void enqueue(T element, int priority)",
    "Namespace": "sem2.test1.task1",
    "Range": "133-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Put an",
      "an code",
      "code element",
      "element with",
      "with code",
      "code priority",
      "priority into",
      "into the",
      "the queue",
      "queue param",
      "param element",
      "element value",
      "value to",
      "to be",
      "be put",
      "put into",
      "into the",
      "the queue",
      "queue param",
      "param priority",
      "priority its",
      "its priority"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Put an { @code element} with { @code priority} into the queue @param element value to be put into the queue @param priority its priority "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "T dequeue() throws EmptyQueueException",
    "Namespace": "sem2.test1.task1",
    "Range": "342-580",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get an",
      "an element",
      "element with",
      "with maximum",
      "maximum priority",
      "priority from",
      "from the",
      "the queue",
      "queue and",
      "and remove",
      "remove it",
      "it throws",
      "throws EmptyQueueException",
      "EmptyQueueException if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty and",
      "and there",
      "there is",
      "is nothing",
      "nothing to",
      "to return",
      "return return",
      "return removed",
      "removed value"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Get an element with maximum priority from the queue and remove it @throws EmptyQueueException if the queue is empty and there is nothing to return @return removed value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.test1.task1",
    "Range": "586-691",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if the",
      "the queue",
      "queue is",
      "is empty"
    ],
    "Location": "PriorityQueue.java",
    "Content": " checks if the queue is empty @return true if the queue is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public CannonBall(long startTime, double x0, double y0, double angle) ",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "703-1073",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Create a",
      "a bullet",
      "bullet with",
      "with all",
      "all necessary",
      "necessary initial",
      "initial parameters",
      "parameters param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the ball",
      "ball is",
      "is being",
      "being fired"
    ],
    "Location": "CannonBall.java",
    "Content": "Create a bullet with all necessary initial parameters @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the ball is being fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract Explosion getExplosion(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "236-599",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown",
      "blown in",
      "in the",
      "the point",
      "point x",
      "x y",
      "y param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion return",
      "return the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown"
    ],
    "Location": "TankBullet.java",
    "Content": "Get the explosion which would happen if the bullet was blown in the point (x, y) @param x x-coord of the point of the generated explosion @param y y-coord of the point of the generated explosion @return the explosion which would happen if the bullet was blown "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void draw(Graphics2D graphics)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "605-756",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the bullet",
      "bullet param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "TankBullet.java",
    "Content": "draw the bullet @param graphics the { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void update(long time)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "762-900",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the bullet",
      "bullet position",
      "position param",
      "param time",
      "time current",
      "current system",
      "system time",
      "time in",
      "in millis"
    ],
    "Location": "TankBullet.java",
    "Content": "Update the bullet position @param time current system time in millis "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX0()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "906-1021",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the initial",
      "initial x",
      "x cooord",
      "cooord return",
      "return the",
      "the initial",
      "initial x",
      "x cooord"
    ],
    "Location": "TankBullet.java",
    "Content": "get the initial x-cooord @return the initial x-cooord "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1027-1167",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current x-coord of the bullet @return the current x-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getY()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1173-1313",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current y-coord of the bullet @return the current y-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract BulletPackage getPackage()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1319-1495",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "form a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet",
      "bullet return",
      "return a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "form a { @link BulletPackage} based on this bullet @return a { @link BulletPackage} based on this bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "166-330",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the current",
      "current state",
      "state of",
      "of explosion",
      "explosion param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Explosion.java",
    "Content": "draw the current state of explosion @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean update(long currentTime)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "337-565",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the explosion",
      "explosion state",
      "state basically",
      "basically the",
      "the sound",
      "sound wave",
      "wave param",
      "param currentTime",
      "currentTime current",
      "current tyme",
      "tyme of",
      "of the",
      "the system",
      "system return",
      "return code",
      "code true",
      "true if",
      "if it",
      "it still",
      "still explodes"
    ],
    "Location": "Explosion.java",
    "Content": "Update the explosion state (basically the sound wave) @param currentTime current tyme of the system @return { @code true} if it still explodes "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean inAffectedZone(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "571-835",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone",
      "zone param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone"
    ],
    "Location": "Explosion.java",
    "Content": "Check if the point is in the affected zone @param x x-coord of the point @param y y-coord of the point @return { @code true} if the point is in the affected zone "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class NoExplosion extends Explosion ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "41-160",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Explosion mock",
      "mock which",
      "which is",
      "is not",
      "not drawn",
      "drawn but",
      "but has",
      "has the",
      "the affection",
      "affection radius"
    ],
    "Location": "NoExplosion.java",
    "Content": "Explosion-mock which is not drawn, but has the affection radius "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics, double angle, double x, double y) ",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "203-524",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the gun",
      "gun param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw into",
      "into param",
      "param angle",
      "angle the",
      "the angle",
      "angle for",
      "for gun",
      "gun to",
      "to be",
      "be placed",
      "placed param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun",
      "gun param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "draw the gun @param graphics the { @link Graphics2D} context to draw into @param angle the angle for gun to be placed @param x x-coord of the root of the gun @param y y-coord of the root of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected abstract Shape getShape()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1149-1315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the basic",
      "basic unrotated",
      "unrotated shape",
      "shape of",
      "of the",
      "the gun",
      "gun return",
      "return link",
      "link Shape",
      "Shape entity",
      "entity which",
      "which id",
      "id the",
      "the shape",
      "shape of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "get the basic unrotated shape of the gun @return { @link Shape} entity which id the shape of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankBullet getBullet(long startTime, double x0, double y0, double angle)",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1321-1704",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Produce a",
      "a bullet",
      "bullet param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the bullet",
      "bullet is",
      "is being",
      "being fired",
      "fired return",
      "return the",
      "the new",
      "new bullet"
    ],
    "Location": "TankGun.java",
    "Content": "Produce a bullet @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the bullet is being fired @return the new bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankGun getNextGun()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1710-1863",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns",
      "guns return",
      "return the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns"
    ],
    "Location": "TankGun.java",
    "Content": "Get the next gun in the list af all guns @return the next gun in the list af all guns "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1667-1803",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draws the",
      "the landscape",
      "landscape param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "Landscape.java",
    "Content": " draws the landscape @param graphics { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getY(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1896-2086",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface",
      "surface param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate for",
      "for which",
      "which we",
      "we need",
      "need its",
      "its height",
      "height return",
      "return y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface"
    ],
    "Location": "Landscape.java",
    "Content": "get the y-coordinate on the surface @param x x-coordinate for which we need its height @return y-coordinate on the surface "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getAngle(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2542-2919",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the angle",
      "angle of",
      "of the",
      "the surface",
      "surface where",
      "where x",
      "x coordinate",
      "coordinate is",
      "is code",
      "code x",
      "x code",
      "code param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate to",
      "to find",
      "find the",
      "the angle",
      "angle return",
      "return the",
      "the angle",
      "angle from",
      "from pi",
      "pi 2",
      "2 pi",
      "pi 2",
      "2 in",
      "in radians",
      "radians If",
      "If the",
      "the height",
      "height is",
      "is growing",
      "growing y",
      "y is",
      "is decreasing",
      "decreasing when",
      "when moving",
      "moving right",
      "right the",
      "the angle",
      "angle is",
      "is positive",
      "positive If",
      "If the",
      "the height",
      "height is",
      "is decreasing",
      "decreasing the",
      "the angle",
      "angle is",
      "is negative"
    ],
    "Location": "Landscape.java",
    "Content": "get the angle of the surface where x-coordinate is \u003ccode\u003ex\u003ccode\u003e @param x x-coordinate to find the angle @return the angle from [-pi2, pi2] in radians. If the heightis growing (y is decreasing) when moving right, the angle is positive.If the height is decreasing, the angle is negative. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInAir(double x, double y) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3209-3466",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground",
      "ground param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground"
    ],
    "Location": "Landscape.java",
    "Content": "Check if the point is over the ground @param x x-coord of the point to check @param y y-coord of the point to check @return { @code true} if the point is over the ground "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class BulletPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "321-523",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "BulletPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class OpponentFinder ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "201-351",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class responsible",
      "responsible for",
      "for connecting",
      "connecting to",
      "to the",
      "the opponent",
      "opponent It",
      "It starts",
      "starts the",
      "the game",
      "game when",
      "when the",
      "the connection",
      "connection is",
      "is established"
    ],
    "Location": "OpponentFinder.java",
    "Content": "The class responsible for connecting to the opponentIt starts the game when the connection is established "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Receiver implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "249-449",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It receives",
      "receives all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the opponent",
      "opponent and",
      "and synchronizes",
      "synchronizes the",
      "the scene",
      "scene according",
      "according to",
      "to it"
    ],
    "Location": "Receiver.java",
    "Content": "The class implementing the conversation to the opponent.It receives all the data from the opponent and synchronizes the scene according to it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Receiver(Tank opponent, TanksGame game, InputStream inputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "587-858",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param opponent",
      "opponent the",
      "the tank",
      "tank to",
      "to be",
      "be updated",
      "updated according",
      "according to",
      "to the",
      "the input",
      "input data",
      "data param",
      "param game",
      "game the",
      "the game",
      "game to",
      "to be",
      "be updated",
      "updated param",
      "param inputStream",
      "inputStream the",
      "the link",
      "link InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data"
    ],
    "Location": "Receiver.java",
    "Content": " @param opponent the tank to be updated according to the input data @param game the game to be updated @param inputStream the { @link InputStream} to get the data "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isDisconnected() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1088-1262",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has stopped",
      "stopped working",
      "working return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has terminated"
    ],
    "Location": "Receiver.java",
    "Content": "Checks if the { @code Receiver} has stopped working @return { @code true} if the { @code Receiver} has terminated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sender implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "265-437",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It gets",
      "gets all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the game",
      "game and",
      "and sends",
      "sends it",
      "it every",
      "every while"
    ],
    "Location": "Sender.java",
    "Content": "The class implementing the conversation to the opponent.It gets all the data from the game and sends it every while "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Sender(Tank tank, OutputStream outputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "542-750",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param tank",
      "tank the",
      "the tank",
      "tank which",
      "which position",
      "position is",
      "is needed",
      "needed to",
      "to be",
      "be sent",
      "sent param",
      "param outputStream",
      "outputStream the",
      "the code",
      "code OutputStream",
      "OutputStream to",
      "to put",
      "put all",
      "all the",
      "the data",
      "data in"
    ],
    "Location": "Sender.java",
    "Content": " @param tank the tank which position is needed to be sent @param outputStream the { @code OutputStream} to put all the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendBulletPackage(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "838-989",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent that",
      "that we",
      "we have",
      "have shot",
      "shot param",
      "param bullet",
      "bullet the",
      "the bullet",
      "bullet we",
      "we shot"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent that we have shot @param bullet the bullet we shot "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendGameEnded() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1450-1588",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent we",
      "we have",
      "have lost",
      "lost the",
      "the game",
      "game Triples",
      "Triples the",
      "the notification",
      "notification to",
      "to be",
      "be sure"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent we have lost the game.Triples the notification to be sure "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TankPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "38-238",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "TankPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isConnected() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "952-1145",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server",
      "server return",
      "return true",
      "true if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server"
    ],
    "Location": "TanksClient.java",
    "Content": "Checks if the client has successfully connected to the server @return { @true} if the client has successfully connected to the server "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public String getErrorMessage() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1185-1338",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "What went",
      "went wrong",
      "wrong if",
      "if something",
      "something did",
      "did return",
      "return the",
      "the message",
      "message with",
      "with the",
      "the description",
      "description of",
      "of the",
      "the error"
    ],
    "Location": "TanksClient.java",
    "Content": "What went wrong (if something did)? @return the message with the description of the error "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public InputStream getInput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1379-1534",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to send",
      "send some",
      "some data",
      "data to",
      "to the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to put",
      "put the",
      "the data",
      "data in"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to send some data to the server @return { @code InputStream} to put the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public OutputStream getOutput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1568-1728",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to get",
      "get some",
      "some data",
      "data from",
      "from the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data",
      "data from"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to get some data from the server @return { @code InputStream} to get the data from "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TanksServer implements Runnable ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "258-516",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A simple",
      "simple data",
      "data passing",
      "passing server",
      "server for",
      "for two",
      "two clients",
      "clients It",
      "It does",
      "does all",
      "all the",
      "the initial",
      "initial conversation",
      "conversation with",
      "with clients",
      "clients When",
      "When it",
      "it establishes",
      "establishes a",
      "a connection",
      "connection with",
      "with two",
      "two clients",
      "clients it",
      "it just",
      "just passes",
      "passes all",
      "all the",
      "the data",
      "data from",
      "from one",
      "one to",
      "to another"
    ],
    "Location": "TanksServer.java",
    "Content": "A simple data-passing server for two clients.It does all the initial conversation with clients.When it establishes a connection with two clients it just passes all the data from one to another "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank(Landscape land, boolean isOpponent, TanksGame game, TankGun gun, int xPos) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1140-1406",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new tank",
      "tank located",
      "located on",
      "on code",
      "code land",
      "land param",
      "param land",
      "land link",
      "link Landscape",
      "Landscape where",
      "where to",
      "to locate",
      "locate our",
      "our new",
      "new tank",
      "tank param",
      "param xPos",
      "xPos our",
      "our tank",
      "tank initial",
      "initial x",
      "x position"
    ],
    "Location": "Tank.java",
    "Content": "Creates new tank located on { @code land} @param land { @link Landscape}, where to locate our new tank @param xPos our tank initial x-position "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getX() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1558-1680",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank",
      "tank return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the tank @return the x-coordinate of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterX(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1713-2061",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the x-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterY(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2125-2473",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the y",
      "y coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the y",
      "y coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the y-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the y-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void shoot() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2975-3076",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a bullet",
      "bullet to",
      "to the",
      "the game",
      "game based",
      "based on",
      "on the",
      "the current",
      "current tank",
      "tank state"
    ],
    "Location": "Tank.java",
    "Content": "Add a bullet to the game based on the current tank state "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3542-3723",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the tank",
      "tank into",
      "into the",
      "the code",
      "code graphics",
      "graphics param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Tank.java",
    "Content": "draw the tank into the { @code graphics} @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void move(long ms) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "5591-5841",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update all",
      "all necessary",
      "necessary parameters",
      "parameters to",
      "to move",
      "move the",
      "the tank",
      "tank according",
      "according to",
      "to how",
      "how much",
      "much time",
      "time has",
      "has passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation param",
      "param ms",
      "ms time",
      "time passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation in",
      "in milliseconds"
    ],
    "Location": "Tank.java",
    "Content": "update all necessary parameters to move the tank according tohow much time has passed since the last updation @param ms time passed since the last updation in milliseconds "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized TankPackage getPosition() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7193-7408",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank",
      "tank return",
      "return the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "get the { @link TankPackage} object with actual data about the tank @return the { @link TankPackage} object with actual data about the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void updatePosition(TankPackage tankPackage) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7616-7933",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update position",
      "position based",
      "based on",
      "on the",
      "the code",
      "code tankPackage",
      "tankPackage while",
      "while our",
      "our tank",
      "tank is",
      "is updated",
      "updated based",
      "based on",
      "on key",
      "key presses",
      "presses the",
      "the opponent",
      "opponent one",
      "one is",
      "is updated",
      "updated by",
      "by calling",
      "calling this",
      "this method",
      "method param",
      "param tankPackage",
      "tankPackage information",
      "information about",
      "about the",
      "the new",
      "new position",
      "position of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "update position based on the { @code tankPackage}while our tank is updated based on key presses, the opponent one is updated by calling this method @param tankPackage information about the new position of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TanksGame(long startTime, boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1620-2092",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new code",
      "code TankGame",
      "TankGame with",
      "with 2",
      "2 tanks",
      "tanks with",
      "with x",
      "x coords",
      "coords set",
      "set to",
      "to 100",
      "100 and",
      "and to",
      "to 500",
      "500 respectively",
      "respectively param",
      "param startTime",
      "startTime System",
      "System time",
      "time when",
      "when the",
      "the game",
      "game is",
      "is being",
      "being init",
      "init param",
      "param isSecondPlayer",
      "isSecondPlayer code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are the",
      "the tank",
      "tank with",
      "with x",
      "x coord",
      "coord set",
      "set to",
      "to 500",
      "500 param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksGame.java",
    "Content": "Creates new { @code TankGame} with 2 tanks with x-coords set to 100 and to 500 respectively @param startTime System time when the game is being init @param isSecondPlayer { @code true} if we are the tank with x-coord set to 500 @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2944-3120",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered ours",
      "ours param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered ours @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addOpponentBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3256-3446",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered opponent\u0027s",
      "opponent\u0027s param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered opponent\u0027s @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void handleOpponentShoot(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3545-3882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A method",
      "method that",
      "that is",
      "is used",
      "used by",
      "by link",
      "link Receiver",
      "Receiver to",
      "to add",
      "add a",
      "a bullet",
      "bullet smartly",
      "smartly It",
      "It discards",
      "discards bad",
      "bad bullets",
      "bullets and",
      "and can",
      "can manually",
      "manually create",
      "create the",
      "the one",
      "one lost",
      "lost with",
      "with loosing",
      "loosing a",
      "a bit",
      "bit of",
      "of precision",
      "precision param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add",
      "add if",
      "if null",
      "null the",
      "the bullet",
      "bullet will",
      "will be",
      "be created",
      "created manually"
    ],
    "Location": "TanksGame.java",
    "Content": "A method that is used by { @link Receiver} to add a bullet smartlyIt discards bad bullets and can manually create the one lost with loosing a bit of precision @param bullet a bullet to add; if null, the bullet will be created manually "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void handleGunChanged() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4396-4497",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Used by",
      "by our",
      "our tank",
      "tank to",
      "to notify",
      "notify the",
      "the gun",
      "gun is",
      "is changed"
    ],
    "Location": "TanksGame.java",
    "Content": "Used by our tank to notify the gun is changed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public KeyListener getKeyListener() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4542-4710",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses",
      "presses return",
      "return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses"
    ],
    "Location": "TanksGame.java",
    "Content": "Return the tank that will handle with key presses @return the tank that will handle with key presses "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7591-7749",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Draw the",
      "the whole",
      "whole scene",
      "scene param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "TanksGame.java",
    "Content": "Draw the whole scene @param graphics { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean cycle(long time) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "8109-8283",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the scene",
      "scene param",
      "param time",
      "time current",
      "current time",
      "time in",
      "in millis",
      "millis return",
      "return code",
      "code true",
      "true if",
      "if there",
      "there is",
      "is anything",
      "anything to",
      "to update"
    ],
    "Location": "TanksGame.java",
    "Content": "Update the scene @param time current time in millis @return { @code true} if there is anything to update "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank getWinnerTank() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "9114-9278",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the winner",
      "winner tank",
      "tank Do",
      "Do not",
      "not use",
      "use when",
      "when the",
      "the game",
      "game is",
      "is not",
      "not finished",
      "finished return",
      "return the",
      "the tank",
      "tank which",
      "which won",
      "won the",
      "the game"
    ],
    "Location": "TanksGame.java",
    "Content": "Get the winner tankDo not use when the game is not finished. @return the tank which won the game "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isWaiting() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3162-3315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent",
      "opponent return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are waiting for an opponent @return { @code true} if we are waiting for an opponent "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInGame() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3375-3503",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are playing",
      "playing now",
      "now return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are playing",
      "playing now"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are playing now @return { @code true} if we are playing now "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void startGame(boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3554-3935",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a new",
      "new game",
      "game Expects",
      "Expects that",
      "that the",
      "the connection",
      "connection to",
      "to our",
      "our opponent",
      "opponent has",
      "has already",
      "already been",
      "been established",
      "established param",
      "param isSecondPlayer",
      "isSecondPlayer are",
      "are we",
      "we the",
      "the right",
      "right player",
      "player on",
      "on start",
      "start param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksPanel.java",
    "Content": "Start a new gameExpects that the connection to our opponent has already been established @param isSecondPlayer are we the right player on start? @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "1c820199fc3155c2949aaebe50ae7872883ab9e9",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2018-05-25T12:47:40Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw2.task2",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw2.task2",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected \u003cT extends Comparable\u003cT\u003e\u003e void swap(T[] array, int i, int j) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "116-456",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Swaps two",
      "two elements",
      "elements in",
      "in the",
      "the array",
      "array param",
      "param array",
      "array an",
      "an array",
      "array where",
      "where swapping",
      "swapping is",
      "is done",
      "done param",
      "param i",
      "i index",
      "index of",
      "of the",
      "the first",
      "first element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param j",
      "j index",
      "index of",
      "of the",
      "the second",
      "second element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "BaseSorter.java",
    "Content": "Swaps two elements in the array @param array an array where swapping is done @param i index of the first element in the array @param j index of the second element in the array @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT extends Comparable\u003cT\u003e\u003e boolean isSorted(T[] array) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "549-868",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether an",
      "an array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order",
      "order param",
      "param array",
      "array an",
      "an array",
      "array which",
      "which is",
      "is being",
      "being checked",
      "checked param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array",
      "array return",
      "return code",
      "code true",
      "true if",
      "if code",
      "code array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order"
    ],
    "Location": "BaseSorter.java",
    "Content": "Checks whether an array is sorted in ascending order @param array an array which is being checked @param \u003cT\u003e type of elements in the array @return { @code true} if { @code array} is sorted in ascending order "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "\u003cT extends Comparable\u003cT\u003e\u003e void sort(T[] array)",
    "Namespace": "sem2.hw3.task1",
    "Range": "105-334",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Sorts code",
      "code array",
      "array in",
      "in ascending",
      "ascending order",
      "order using",
      "using link",
      "link Comparable",
      "Comparable compareTo",
      "compareTo param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "Sorter.java",
    "Content": "Sorts { @code array} in ascending order using { @link Comparable#compareTo} @param array an array to sort @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ConsoleSpiralOutputter extends DefaultSpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "25-165",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Table spiral",
      "spiral outputter",
      "outputter using",
      "using link",
      "link System",
      "System out",
      "out as",
      "as a",
      "a destination"
    ],
    "Location": "ConsoleSpiralOutputter.java",
    "Content": " Table spiral outputter using { @link System#out} as a destination "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract class DefaultSpiralOutputter implements SpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "54-267",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Default SpiralOutputter",
      "SpiralOutputter implementation",
      "implementation Can",
      "Can output",
      "output a",
      "a table",
      "table to",
      "to any",
      "any link",
      "link PrintStream",
      "PrintStream including",
      "including System",
      "System out",
      "out and",
      "and any",
      "any file"
    ],
    "Location": "DefaultSpiralOutputter.java",
    "Content": "Default SpiralOutputter implementation.Can output a table to any { @link PrintStream}including System.out and any file."
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public FileSpiralOutputter(String fileName) throws FileNotFoundException ",
    "Namespace": "sem2.hw3.task2",
    "Range": "208-511",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates outputter",
      "outputter associated",
      "associated with",
      "with file",
      "file named",
      "named code",
      "code fileName",
      "fileName param",
      "param fileName",
      "fileName name",
      "name of",
      "of the",
      "the file",
      "file to",
      "to output",
      "output the",
      "the table",
      "table in",
      "in throws",
      "throws FileNotFoundException",
      "FileNotFoundException if",
      "if no",
      "no file",
      "file named",
      "named code",
      "code fileName",
      "fileName was",
      "was found"
    ],
    "Location": "FileSpiralOutputter.java",
    "Content": "Creates outputter associated with file named { @code fileName} @param fileName name of the file to output the table in @throws FileNotFoundException if no file named { @code fileName} was found "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void outputSpirally(int[][] table)",
    "Namespace": "sem2.hw3.task2",
    "Range": "114-241",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Outputs code",
      "code table",
      "table spirally",
      "spirally param",
      "param table",
      "table a",
      "a table",
      "table to",
      "to output"
    ],
    "Location": "SpiralOutputter.java",
    "Content": "Outputs { @code table} spirally @param table a table to output "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-134",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used for",
      "for providing",
      "providing some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashTable"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used for providing some hash function for { @link HashTable}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T key)",
    "Namespace": "sem2.hw4.task2",
    "Range": "139-357",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code key",
      "key Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashTable",
      "HashTable hashCount",
      "hashCount param",
      "param key",
      "key the",
      "the value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of the",
      "the code",
      "code key"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code key}.Should return an integer from 0 to { @link HashTable#hashCount}. @param key the value for hashing @return hash of the { @code key} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int getBadHash() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "288-420",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated",
      "generated return",
      "return bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": "Returns the bad hash that was generated. @return bad hash that was generated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashTable\u003cK, V\u003e implements Iterable\u003cV\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "122-428",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Hash table",
      "table that",
      "that allows",
      "allows adding",
      "adding values",
      "values of",
      "of the",
      "the type",
      "type code",
      "code V",
      "V associated",
      "associated with",
      "with keys",
      "keys of",
      "of the",
      "the type",
      "type code",
      "code K",
      "K Hash",
      "Hash function",
      "function should",
      "should be",
      "be provided",
      "provided by",
      "by client",
      "client an",
      "an can",
      "can be",
      "be changed",
      "changed in",
      "in runtime",
      "runtime param",
      "param K",
      "K the",
      "the type",
      "type of",
      "of keys",
      "keys param",
      "param V",
      "V the",
      "the type",
      "type of",
      "of values"
    ],
    "Location": "HashTable.java",
    "Content": "Hash table that allows adding values of the type { @code V} associated with keys of the type { @code K}Hash function should be provided by client an can be changed in runtime. @param \u003cK\u003e the type of keys @param \u003cV\u003e the type of values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void add(K key, V value) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2128-2520",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds the",
      "the code",
      "code value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key to",
      "to the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key for",
      "for the",
      "the value",
      "value to",
      "to be",
      "be associated",
      "associated with",
      "with param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be added",
      "added throws",
      "throws KeyAlreadyExistsException",
      "KeyAlreadyExistsException if",
      "if the",
      "the code",
      "code key",
      "key already",
      "already exists",
      "exists in",
      "in the",
      "the table",
      "table throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Adds the { @code value} associated with the { @code key} to the set. @param key the key for the value to be associated with @param value the value to be added @throws KeyAlreadyExistsException if the { @code key} already exists in the table @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2884-3195",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes the",
      "the value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key from",
      "from the",
      "the set",
      "set Does",
      "Does nothing",
      "nothing in",
      "in case",
      "case of",
      "of not",
      "not founding",
      "founding this",
      "this key",
      "key in",
      "in the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key to",
      "to be",
      "be removed",
      "removed with",
      "with its",
      "its value",
      "value throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Removes the value associated with the { @code key} from the set.Does nothing in case of not founding this key in the set. @param key the key to be removed with its value @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean doesContain(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "3622-3912",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the set",
      "set contains",
      "contains a",
      "a value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key param",
      "param key",
      "key the",
      "the value",
      "value to",
      "to search",
      "search for",
      "for return",
      "return true",
      "true if",
      "if code",
      "code key",
      "key was",
      "was found",
      "found throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Checks if the set contains a value associated with the { @code key}. @param key the value to search for @return true if { @code key} was found @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void setHasher(Hasher\u003cK\u003e newHasher) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "4258-4501",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Change used",
      "used hash",
      "hash function",
      "function param",
      "param newHasher",
      "newHasher object",
      "object that",
      "that implements",
      "implements link",
      "link Hasher",
      "Hasher interface",
      "interface throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Change used hash function. @param newHasher object that implements { @link Hasher} interface @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int size() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5083-5186",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Size of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Size of the set. @return number of objects in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double loadFactor() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5219-5370",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Load factor",
      "factor of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects divided",
      "divided by",
      "by number",
      "number of",
      "of different",
      "different hash",
      "hash values"
    ],
    "Location": "HashTable.java",
    "Content": "Load factor of the set. @return number of objects divided by number of different hash values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int maxListLength() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5420-5591",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set",
      "set return",
      "return the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Returns the length of the maximum-sized list in the set. @return the length of the maximum-sized list in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class KeyAlreadyExistsException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-203",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody wants",
      "wants to",
      "to link",
      "link sem2",
      "sem2 hw4",
      "hw4 task2",
      "task2 HashTable",
      "HashTable add",
      "add an",
      "an existing",
      "existing key",
      "key to",
      "to a",
      "a table"
    ],
    "Location": "KeyAlreadyExistsException.java",
    "Content": " An exception thrown if somebody wants to { @link sem2.hw4.task2.HashTable#add} an existing key to a table. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "106-233",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "239-359",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void remove(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "365-539",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list If",
      "If the",
      "the value",
      "value was",
      "was not",
      "not found",
      "found does",
      "does nothing",
      "nothing param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed"
    ],
    "Location": "List.java",
    "Content": "Removes { @code value} from the list.If the value was not found, does nothing. @param value the value to be removed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean doesContain(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "545-737",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value",
      "value param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to look",
      "look for",
      "for return",
      "return true",
      "true if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value"
    ],
    "Location": "List.java",
    "Content": "Checks if the list contains { @code value}. @param value the value to look for @return true if the list contains { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task2",
    "Range": "790-882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "Get the size of the list. @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task2",
    "Range": "888-1004",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "Checks whether our list is empty. @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class SinglyLinkedList\u003cT\u003e implements List\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "94-303",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Singly linked",
      "linked list",
      "list implementation",
      "implementation Can",
      "Can be",
      "be iterated",
      "iterated through",
      "through using",
      "using foreach",
      "foreach iterator",
      "iterator implementation",
      "implementation supports",
      "supports link",
      "link java",
      "java util",
      "util Iterator",
      "Iterator remove"
    ],
    "Location": "SinglyLinkedList.java",
    "Content": " Singly-linked list implementation.Can be iterated through using foreach, iterator implementationsupports { @link java.util.Iterator#remove}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task1",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task1",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class UniqueList\u003cT\u003e extends SinglyLinkedList\u003cT\u003e ",
    "Namespace": "sem2.hw4.task1",
    "Range": "53-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A list",
      "list where",
      "where every",
      "every element",
      "element could",
      "could be",
      "be present",
      "present only",
      "only once"
    ],
    "Location": "UniqueList.java",
    "Content": " A list where every element could be present only once "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addFirst(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "396-527",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already have",
      "have code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already have { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addLast(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "652-786",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already contains",
      "contains code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already contains { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "910-1129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed",
      "removed throws",
      "throws NoSuchElementException",
      "NoSuchElementException if",
      "if the",
      "the list",
      "list does",
      "does not",
      "not contain",
      "contain code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": "Removes { @code value} from the list @param value the value to be removed @throws NoSuchElementException if the list does not contain { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Expression(String expressionString) throws BadExpressionException ",
    "Namespace": "sem2.hw6.task1",
    "Range": "2059-2740",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates an",
      "an ExpressionTree",
      "ExpressionTree by",
      "by a",
      "a specially",
      "specially formatted",
      "formatted string",
      "string code",
      "code expressionString",
      "expressionString should",
      "should be",
      "be formatted",
      "formatted as",
      "as follows",
      "follows br",
      "br Expr",
      "Expr is",
      "is a",
      "a positive",
      "positive integer",
      "integer number",
      "number or",
      "or Op",
      "Op Expr",
      "Expr Expr",
      "Expr br",
      "br where",
      "where Op",
      "Op is",
      "is an",
      "an operation",
      "operation one",
      "one of",
      "of br",
      "br So",
      "So the",
      "the correctly",
      "correctly formatted",
      "formatted string",
      "string is",
      "is Expr",
      "Expr br",
      "br Examples",
      "Examples of",
      "of good",
      "good strings",
      "strings ul",
      "ul li",
      "li 123",
      "123 li",
      "li li",
      "li 2",
      "2 2",
      "2 li",
      "li li",
      "li 4",
      "4 6",
      "6 12",
      "12 li",
      "li ul",
      "ul param",
      "param expressionString",
      "expressionString the",
      "the formatted",
      "formatted string",
      "string throws",
      "throws BadExpressionException",
      "BadExpressionException if",
      "if code",
      "code expressionString",
      "expressionString is",
      "is not",
      "not formatted",
      "formatted properly"
    ],
    "Location": "Expression.java",
    "Content": " Creates an ExpressionTree by a specially-formatted string.{ @code expressionString} should be formatted as follows:\u003cbr\u003eExpr is a positive integer number or (Op Expr Expr)\u003cbr\u003ewhere Op is an operation -- one of (+, -, , ).\u003cbr\u003eSo the correctly-formatted string is Expr.\u003cbr\u003e Examples of good strings:\u003cul\u003e \u003cli\u003e123\u003cli\u003e \u003cli\u003e(+ 2 2)\u003cli\u003e \u003cli\u003e(- ( 4 6) 12)\u003cli\u003e\u003cul\u003e @param expressionString the formatted string @throws BadExpressionException if { @code expressionString} is not formatted properly "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used to",
      "to provide",
      "provide some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashSet"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used to provide some hash function for { @link HashSet}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T value)",
    "Namespace": "sem2.hw6.task2",
    "Range": "134-353",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code value",
      "value Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashSet",
      "HashSet HASH",
      "HASH COUNT",
      "COUNT param",
      "param value",
      "value a",
      "a value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of code",
      "code value"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code value}.Should return an integer from 0 to { @link HashSet#HASH_COUNT}. @param value a value for hashing @return hash of { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashSet\u003cT\u003e implements Set\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "46-187",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The set",
      "set that",
      "that groups",
      "groups its",
      "its elements",
      "elements by",
      "by their",
      "their hashes",
      "hashes so",
      "so it",
      "it becomes",
      "becomes easier",
      "easier to",
      "to find",
      "find one",
      "one of",
      "of them"
    ],
    "Location": "HashSet.java",
    "Content": " The set that groups its elements by their hashes so it becomes easier to find one of them. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public enum TurnResult ",
    "Namespace": "sem2.hw7.task2",
    "Range": "140-246",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The enumeration",
      "enumeration of",
      "of thing",
      "thing that",
      "that could",
      "could happen",
      "happen after",
      "after a",
      "a turn",
      "turn was",
      "was performed"
    ],
    "Location": "TicTacToe.java",
    "Content": " The enumeration of thing that could happen after a turn was performed. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TicTacToe(int N) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1159-1279",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a game",
      "game with",
      "with field",
      "field side",
      "side size",
      "size code",
      "code N",
      "N param",
      "param N",
      "N field",
      "field side",
      "side size"
    ],
    "Location": "TicTacToe.java",
    "Content": " Start a game with field side size \u003d { @code N}. @param N field side size "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TurnResult makeTurn(int i, int j) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1492-1804",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Place next",
      "next cross",
      "cross or",
      "or zero",
      "zero to",
      "to the",
      "the code",
      "code i",
      "i code",
      "code j",
      "j cell",
      "cell param",
      "param i",
      "i the",
      "the row",
      "row where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero param",
      "param j",
      "j the",
      "the column",
      "column where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero return",
      "return An",
      "An link",
      "link TurnResult",
      "TurnResult entity",
      "entity see",
      "see TurnResult"
    ],
    "Location": "TicTacToe.java",
    "Content": " Place next cross or zero to the ({ @code i}, { @code j}) cell. @param i the row where to put the next cross or zero. @param j the column where to put the next cross or zero. @return An { @link TurnResult} entity. @see TurnResult "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ClassPrinter ",
    "Namespace": "sem2.hw7.task1",
    "Range": "54-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that can",
      "can output",
      "output some",
      "some RTTI",
      "RTTI Instead",
      "Instead of",
      "of standard",
      "standard testing",
      "testing which",
      "which is",
      "is inconvenient",
      "inconvenient here",
      "here one",
      "one can",
      "can pass",
      "pass different",
      "different classes",
      "classes into",
      "into print",
      "print statement",
      "statement in",
      "in main",
      "main Some",
      "Some classes",
      "classes to",
      "to check",
      "check are",
      "are declared",
      "declared below",
      "below standard",
      "standard library",
      "library could",
      "could also",
      "also be",
      "be used"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The class that can output some RTTI.Instead of standard testing, which is inconvenient here,one can pass different classes into print() statement in main().Some classes to check are declared below, standard library could also be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static void print(Class\u003c?\u003e clazz) ",
    "Namespace": "sem2.hw7.task1",
    "Range": "6219-6413",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The method",
      "method that",
      "that prints",
      "prints some",
      "some RTTI",
      "RTTI Works",
      "Works with",
      "with classes",
      "classes interfaces",
      "interfaces and",
      "and enums",
      "enums param",
      "param clazz",
      "clazz a",
      "a class",
      "class to",
      "to learn",
      "learn something",
      "something about"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The method that prints some RTTI.Works with classes, interfaces and enums. @param clazz a class to learn something about "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sorters\u003cT extends Comparable\u003cT\u003e\u003e extends RecursiveAction ",
    "Namespace": "sem2.hw8.task2",
    "Range": "141-300",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that provides",
      "provides parallel",
      "parallel and",
      "and non",
      "non parallel",
      "parallel quicksort",
      "quicksort implementations"
    ],
    "Location": "Sorters.java",
    "Content": "The class that provides parallel and non-parallel quicksort implementations. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void parallelSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "951-1211",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList using",
      "using multiple",
      "multiple threads",
      "threads param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} using multiple threads. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void singleThreadSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "1398-1662",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList without",
      "without multithreading",
      "multithreading param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} without multithreading. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class EmptyQueueException extends Exception ",
    "Namespace": "sem2.test1.task1",
    "Range": "27-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "an exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody was",
      "was trying",
      "trying to",
      "to remove",
      "remove an",
      "an element",
      "element form",
      "form an",
      "an empty",
      "empty queue"
    ],
    "Location": "EmptyQueueException.java",
    "Content": " an exception thrown if somebody was trying to remove an element form an empty queue "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void enqueue(T element, int priority)",
    "Namespace": "sem2.test1.task1",
    "Range": "133-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Put an",
      "an code",
      "code element",
      "element with",
      "with code",
      "code priority",
      "priority into",
      "into the",
      "the queue",
      "queue param",
      "param element",
      "element value",
      "value to",
      "to be",
      "be put",
      "put into",
      "into the",
      "the queue",
      "queue param",
      "param priority",
      "priority its",
      "its priority"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Put an { @code element} with { @code priority} into the queue @param element value to be put into the queue @param priority its priority "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "T dequeue() throws EmptyQueueException",
    "Namespace": "sem2.test1.task1",
    "Range": "342-580",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get an",
      "an element",
      "element with",
      "with maximum",
      "maximum priority",
      "priority from",
      "from the",
      "the queue",
      "queue and",
      "and remove",
      "remove it",
      "it throws",
      "throws EmptyQueueException",
      "EmptyQueueException if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty and",
      "and there",
      "there is",
      "is nothing",
      "nothing to",
      "to return",
      "return return",
      "return removed",
      "removed value"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Get an element with maximum priority from the queue and remove it @throws EmptyQueueException if the queue is empty and there is nothing to return @return removed value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.test1.task1",
    "Range": "586-691",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if the",
      "the queue",
      "queue is",
      "is empty"
    ],
    "Location": "PriorityQueue.java",
    "Content": " checks if the queue is empty @return true if the queue is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public CannonBall(long startTime, double x0, double y0, double angle) ",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "703-1073",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Create a",
      "a bullet",
      "bullet with",
      "with all",
      "all necessary",
      "necessary initial",
      "initial parameters",
      "parameters param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the ball",
      "ball is",
      "is being",
      "being fired"
    ],
    "Location": "CannonBall.java",
    "Content": "Create a bullet with all necessary initial parameters @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the ball is being fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract Explosion getExplosion(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "236-599",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown",
      "blown in",
      "in the",
      "the point",
      "point x",
      "x y",
      "y param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion return",
      "return the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown"
    ],
    "Location": "TankBullet.java",
    "Content": "Get the explosion which would happen if the bullet was blown in the point (x, y) @param x x-coord of the point of the generated explosion @param y y-coord of the point of the generated explosion @return the explosion which would happen if the bullet was blown "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void draw(Graphics2D graphics)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "605-756",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the bullet",
      "bullet param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "TankBullet.java",
    "Content": "draw the bullet @param graphics the { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void update(long time)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "762-900",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the bullet",
      "bullet position",
      "position param",
      "param time",
      "time current",
      "current system",
      "system time",
      "time in",
      "in millis"
    ],
    "Location": "TankBullet.java",
    "Content": "Update the bullet position @param time current system time in millis "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX0()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "906-1021",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the initial",
      "initial x",
      "x cooord",
      "cooord return",
      "return the",
      "the initial",
      "initial x",
      "x cooord"
    ],
    "Location": "TankBullet.java",
    "Content": "get the initial x-cooord @return the initial x-cooord "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1027-1167",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current x-coord of the bullet @return the current x-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getY()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1173-1313",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current y-coord of the bullet @return the current y-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract BulletPackage getPackage()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1319-1495",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "form a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet",
      "bullet return",
      "return a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "form a { @link BulletPackage} based on this bullet @return a { @link BulletPackage} based on this bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "166-330",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the current",
      "current state",
      "state of",
      "of explosion",
      "explosion param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Explosion.java",
    "Content": "draw the current state of explosion @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean update(long currentTime)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "337-565",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the explosion",
      "explosion state",
      "state basically",
      "basically the",
      "the sound",
      "sound wave",
      "wave param",
      "param currentTime",
      "currentTime current",
      "current tyme",
      "tyme of",
      "of the",
      "the system",
      "system return",
      "return code",
      "code true",
      "true if",
      "if it",
      "it still",
      "still explodes"
    ],
    "Location": "Explosion.java",
    "Content": "Update the explosion state (basically the sound wave) @param currentTime current tyme of the system @return { @code true} if it still explodes "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean inAffectedZone(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "571-835",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone",
      "zone param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone"
    ],
    "Location": "Explosion.java",
    "Content": "Check if the point is in the affected zone @param x x-coord of the point @param y y-coord of the point @return { @code true} if the point is in the affected zone "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class NoExplosion extends Explosion ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "41-160",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Explosion mock",
      "mock which",
      "which is",
      "is not",
      "not drawn",
      "drawn but",
      "but has",
      "has the",
      "the affection",
      "affection radius"
    ],
    "Location": "NoExplosion.java",
    "Content": "Explosion-mock which is not drawn, but has the affection radius "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics, double angle, double x, double y) ",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "203-524",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the gun",
      "gun param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw into",
      "into param",
      "param angle",
      "angle the",
      "the angle",
      "angle for",
      "for gun",
      "gun to",
      "to be",
      "be placed",
      "placed param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun",
      "gun param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "draw the gun @param graphics the { @link Graphics2D} context to draw into @param angle the angle for gun to be placed @param x x-coord of the root of the gun @param y y-coord of the root of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected abstract Shape getShape()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1149-1315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the basic",
      "basic unrotated",
      "unrotated shape",
      "shape of",
      "of the",
      "the gun",
      "gun return",
      "return link",
      "link Shape",
      "Shape entity",
      "entity which",
      "which id",
      "id the",
      "the shape",
      "shape of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "get the basic unrotated shape of the gun @return { @link Shape} entity which id the shape of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankBullet getBullet(long startTime, double x0, double y0, double angle)",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1321-1704",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Produce a",
      "a bullet",
      "bullet param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the bullet",
      "bullet is",
      "is being",
      "being fired",
      "fired return",
      "return the",
      "the new",
      "new bullet"
    ],
    "Location": "TankGun.java",
    "Content": "Produce a bullet @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the bullet is being fired @return the new bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankGun getNextGun()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1710-1863",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns",
      "guns return",
      "return the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns"
    ],
    "Location": "TankGun.java",
    "Content": "Get the next gun in the list af all guns @return the next gun in the list af all guns "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1667-1803",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draws the",
      "the landscape",
      "landscape param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "Landscape.java",
    "Content": " draws the landscape @param graphics { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getY(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1896-2086",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface",
      "surface param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate for",
      "for which",
      "which we",
      "we need",
      "need its",
      "its height",
      "height return",
      "return y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface"
    ],
    "Location": "Landscape.java",
    "Content": "get the y-coordinate on the surface @param x x-coordinate for which we need its height @return y-coordinate on the surface "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getAngle(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2542-2919",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the angle",
      "angle of",
      "of the",
      "the surface",
      "surface where",
      "where x",
      "x coordinate",
      "coordinate is",
      "is code",
      "code x",
      "x code",
      "code param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate to",
      "to find",
      "find the",
      "the angle",
      "angle return",
      "return the",
      "the angle",
      "angle from",
      "from pi",
      "pi 2",
      "2 pi",
      "pi 2",
      "2 in",
      "in radians",
      "radians If",
      "If the",
      "the height",
      "height is",
      "is growing",
      "growing y",
      "y is",
      "is decreasing",
      "decreasing when",
      "when moving",
      "moving right",
      "right the",
      "the angle",
      "angle is",
      "is positive",
      "positive If",
      "If the",
      "the height",
      "height is",
      "is decreasing",
      "decreasing the",
      "the angle",
      "angle is",
      "is negative"
    ],
    "Location": "Landscape.java",
    "Content": "get the angle of the surface where x-coordinate is \u003ccode\u003ex\u003ccode\u003e @param x x-coordinate to find the angle @return the angle from [-pi2, pi2] in radians. If the heightis growing (y is decreasing) when moving right, the angle is positive.If the height is decreasing, the angle is negative. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInAir(double x, double y) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3209-3466",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground",
      "ground param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground"
    ],
    "Location": "Landscape.java",
    "Content": "Check if the point is over the ground @param x x-coord of the point to check @param y y-coord of the point to check @return { @code true} if the point is over the ground "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class BulletPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "321-523",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "BulletPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class OpponentFinder ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "201-351",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class responsible",
      "responsible for",
      "for connecting",
      "connecting to",
      "to the",
      "the opponent",
      "opponent It",
      "It starts",
      "starts the",
      "the game",
      "game when",
      "when the",
      "the connection",
      "connection is",
      "is established"
    ],
    "Location": "OpponentFinder.java",
    "Content": "The class responsible for connecting to the opponentIt starts the game when the connection is established "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Receiver implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "249-449",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It receives",
      "receives all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the opponent",
      "opponent and",
      "and synchronizes",
      "synchronizes the",
      "the scene",
      "scene according",
      "according to",
      "to it"
    ],
    "Location": "Receiver.java",
    "Content": "The class implementing the conversation to the opponent.It receives all the data from the opponent and synchronizes the scene according to it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Receiver(Tank opponent, TanksGame game, InputStream inputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "587-858",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param opponent",
      "opponent the",
      "the tank",
      "tank to",
      "to be",
      "be updated",
      "updated according",
      "according to",
      "to the",
      "the input",
      "input data",
      "data param",
      "param game",
      "game the",
      "the game",
      "game to",
      "to be",
      "be updated",
      "updated param",
      "param inputStream",
      "inputStream the",
      "the link",
      "link InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data"
    ],
    "Location": "Receiver.java",
    "Content": " @param opponent the tank to be updated according to the input data @param game the game to be updated @param inputStream the { @link InputStream} to get the data "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isDisconnected() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1088-1262",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has stopped",
      "stopped working",
      "working return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has terminated"
    ],
    "Location": "Receiver.java",
    "Content": "Checks if the { @code Receiver} has stopped working @return { @code true} if the { @code Receiver} has terminated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sender implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "265-437",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It gets",
      "gets all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the game",
      "game and",
      "and sends",
      "sends it",
      "it every",
      "every while"
    ],
    "Location": "Sender.java",
    "Content": "The class implementing the conversation to the opponent.It gets all the data from the game and sends it every while "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Sender(Tank tank, OutputStream outputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "542-750",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param tank",
      "tank the",
      "the tank",
      "tank which",
      "which position",
      "position is",
      "is needed",
      "needed to",
      "to be",
      "be sent",
      "sent param",
      "param outputStream",
      "outputStream the",
      "the code",
      "code OutputStream",
      "OutputStream to",
      "to put",
      "put all",
      "all the",
      "the data",
      "data in"
    ],
    "Location": "Sender.java",
    "Content": " @param tank the tank which position is needed to be sent @param outputStream the { @code OutputStream} to put all the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendBulletPackage(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "838-989",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent that",
      "that we",
      "we have",
      "have shot",
      "shot param",
      "param bullet",
      "bullet the",
      "the bullet",
      "bullet we",
      "we shot"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent that we have shot @param bullet the bullet we shot "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendGameEnded() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1450-1588",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent we",
      "we have",
      "have lost",
      "lost the",
      "the game",
      "game Triples",
      "Triples the",
      "the notification",
      "notification to",
      "to be",
      "be sure"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent we have lost the game.Triples the notification to be sure "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TankPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "38-238",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "TankPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isConnected() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "952-1145",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server",
      "server return",
      "return true",
      "true if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server"
    ],
    "Location": "TanksClient.java",
    "Content": "Checks if the client has successfully connected to the server @return { @true} if the client has successfully connected to the server "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public String getErrorMessage() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1185-1338",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "What went",
      "went wrong",
      "wrong if",
      "if something",
      "something did",
      "did return",
      "return the",
      "the message",
      "message with",
      "with the",
      "the description",
      "description of",
      "of the",
      "the error"
    ],
    "Location": "TanksClient.java",
    "Content": "What went wrong (if something did)? @return the message with the description of the error "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public InputStream getInput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1379-1534",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to send",
      "send some",
      "some data",
      "data to",
      "to the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to put",
      "put the",
      "the data",
      "data in"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to send some data to the server @return { @code InputStream} to put the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public OutputStream getOutput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1568-1728",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to get",
      "get some",
      "some data",
      "data from",
      "from the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data",
      "data from"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to get some data from the server @return { @code InputStream} to get the data from "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TanksServer implements Runnable ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "258-516",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A simple",
      "simple data",
      "data passing",
      "passing server",
      "server for",
      "for two",
      "two clients",
      "clients It",
      "It does",
      "does all",
      "all the",
      "the initial",
      "initial conversation",
      "conversation with",
      "with clients",
      "clients When",
      "When it",
      "it establishes",
      "establishes a",
      "a connection",
      "connection with",
      "with two",
      "two clients",
      "clients it",
      "it just",
      "just passes",
      "passes all",
      "all the",
      "the data",
      "data from",
      "from one",
      "one to",
      "to another"
    ],
    "Location": "TanksServer.java",
    "Content": "A simple data-passing server for two clients.It does all the initial conversation with clients.When it establishes a connection with two clients it just passes all the data from one to another "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank(Landscape land, boolean isOpponent, TanksGame game, TankGun gun, int xPos) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1140-1406",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new tank",
      "tank located",
      "located on",
      "on code",
      "code land",
      "land param",
      "param land",
      "land link",
      "link Landscape",
      "Landscape where",
      "where to",
      "to locate",
      "locate our",
      "our new",
      "new tank",
      "tank param",
      "param xPos",
      "xPos our",
      "our tank",
      "tank initial",
      "initial x",
      "x position"
    ],
    "Location": "Tank.java",
    "Content": "Creates new tank located on { @code land} @param land { @link Landscape}, where to locate our new tank @param xPos our tank initial x-position "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getX() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1558-1680",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank",
      "tank return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the tank @return the x-coordinate of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterX(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1713-2061",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the x-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterY(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2125-2473",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the y",
      "y coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the y",
      "y coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the y-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the y-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void shoot() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2975-3076",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a bullet",
      "bullet to",
      "to the",
      "the game",
      "game based",
      "based on",
      "on the",
      "the current",
      "current tank",
      "tank state"
    ],
    "Location": "Tank.java",
    "Content": "Add a bullet to the game based on the current tank state "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3542-3723",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the tank",
      "tank into",
      "into the",
      "the code",
      "code graphics",
      "graphics param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Tank.java",
    "Content": "draw the tank into the { @code graphics} @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void move(long ms) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "5591-5841",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update all",
      "all necessary",
      "necessary parameters",
      "parameters to",
      "to move",
      "move the",
      "the tank",
      "tank according",
      "according to",
      "to how",
      "how much",
      "much time",
      "time has",
      "has passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation param",
      "param ms",
      "ms time",
      "time passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation in",
      "in milliseconds"
    ],
    "Location": "Tank.java",
    "Content": "update all necessary parameters to move the tank according tohow much time has passed since the last updation @param ms time passed since the last updation in milliseconds "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized TankPackage getPosition() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7193-7408",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank",
      "tank return",
      "return the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "get the { @link TankPackage} object with actual data about the tank @return the { @link TankPackage} object with actual data about the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void updatePosition(TankPackage tankPackage) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7616-7933",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update position",
      "position based",
      "based on",
      "on the",
      "the code",
      "code tankPackage",
      "tankPackage while",
      "while our",
      "our tank",
      "tank is",
      "is updated",
      "updated based",
      "based on",
      "on key",
      "key presses",
      "presses the",
      "the opponent",
      "opponent one",
      "one is",
      "is updated",
      "updated by",
      "by calling",
      "calling this",
      "this method",
      "method param",
      "param tankPackage",
      "tankPackage information",
      "information about",
      "about the",
      "the new",
      "new position",
      "position of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "update position based on the { @code tankPackage}while our tank is updated based on key presses, the opponent one is updated by calling this method @param tankPackage information about the new position of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TanksGame(long startTime, boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1620-2092",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new code",
      "code TankGame",
      "TankGame with",
      "with 2",
      "2 tanks",
      "tanks with",
      "with x",
      "x coords",
      "coords set",
      "set to",
      "to 100",
      "100 and",
      "and to",
      "to 500",
      "500 respectively",
      "respectively param",
      "param startTime",
      "startTime System",
      "System time",
      "time when",
      "when the",
      "the game",
      "game is",
      "is being",
      "being init",
      "init param",
      "param isSecondPlayer",
      "isSecondPlayer code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are the",
      "the tank",
      "tank with",
      "with x",
      "x coord",
      "coord set",
      "set to",
      "to 500",
      "500 param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksGame.java",
    "Content": "Creates new { @code TankGame} with 2 tanks with x-coords set to 100 and to 500 respectively @param startTime System time when the game is being init @param isSecondPlayer { @code true} if we are the tank with x-coord set to 500 @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2944-3120",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered ours",
      "ours param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered ours @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addOpponentBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3256-3446",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered opponent\u0027s",
      "opponent\u0027s param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered opponent\u0027s @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void handleOpponentShoot(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3545-3882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A method",
      "method that",
      "that is",
      "is used",
      "used by",
      "by link",
      "link Receiver",
      "Receiver to",
      "to add",
      "add a",
      "a bullet",
      "bullet smartly",
      "smartly It",
      "It discards",
      "discards bad",
      "bad bullets",
      "bullets and",
      "and can",
      "can manually",
      "manually create",
      "create the",
      "the one",
      "one lost",
      "lost with",
      "with loosing",
      "loosing a",
      "a bit",
      "bit of",
      "of precision",
      "precision param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add",
      "add if",
      "if null",
      "null the",
      "the bullet",
      "bullet will",
      "will be",
      "be created",
      "created manually"
    ],
    "Location": "TanksGame.java",
    "Content": "A method that is used by { @link Receiver} to add a bullet smartlyIt discards bad bullets and can manually create the one lost with loosing a bit of precision @param bullet a bullet to add; if null, the bullet will be created manually "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void handleGunChanged() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4396-4497",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Used by",
      "by our",
      "our tank",
      "tank to",
      "to notify",
      "notify the",
      "the gun",
      "gun is",
      "is changed"
    ],
    "Location": "TanksGame.java",
    "Content": "Used by our tank to notify the gun is changed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public KeyListener getKeyListener() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4542-4710",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses",
      "presses return",
      "return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses"
    ],
    "Location": "TanksGame.java",
    "Content": "Return the tank that will handle with key presses @return the tank that will handle with key presses "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7591-7749",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Draw the",
      "the whole",
      "whole scene",
      "scene param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "TanksGame.java",
    "Content": "Draw the whole scene @param graphics { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean cycle(long time) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "8109-8283",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the scene",
      "scene param",
      "param time",
      "time current",
      "current time",
      "time in",
      "in millis",
      "millis return",
      "return code",
      "code true",
      "true if",
      "if there",
      "there is",
      "is anything",
      "anything to",
      "to update"
    ],
    "Location": "TanksGame.java",
    "Content": "Update the scene @param time current time in millis @return { @code true} if there is anything to update "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank getWinnerTank() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "9114-9278",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the winner",
      "winner tank",
      "tank Do",
      "Do not",
      "not use",
      "use when",
      "when the",
      "the game",
      "game is",
      "is not",
      "not finished",
      "finished return",
      "return the",
      "the tank",
      "tank which",
      "which won",
      "won the",
      "the game"
    ],
    "Location": "TanksGame.java",
    "Content": "Get the winner tankDo not use when the game is not finished. @return the tank which won the game "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isWaiting() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3162-3315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent",
      "opponent return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are waiting for an opponent @return { @code true} if we are waiting for an opponent "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInGame() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3375-3503",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are playing",
      "playing now",
      "now return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are playing",
      "playing now"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are playing now @return { @code true} if we are playing now "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void startGame(boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3554-3935",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a new",
      "new game",
      "game Expects",
      "Expects that",
      "that the",
      "the connection",
      "connection to",
      "to our",
      "our opponent",
      "opponent has",
      "has already",
      "already been",
      "been established",
      "established param",
      "param isSecondPlayer",
      "isSecondPlayer are",
      "are we",
      "we the",
      "the right",
      "right player",
      "player on",
      "on start",
      "start param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksPanel.java",
    "Content": "Start a new gameExpects that the connection to our opponent has already been established @param isSecondPlayer are we the right player on start? @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "1c820199fc3155c2949aaebe50ae7872883ab9e9",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2018-05-25T12:47:40Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw2.task2",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw2.task2",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected \u003cT extends Comparable\u003cT\u003e\u003e void swap(T[] array, int i, int j) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "116-456",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Swaps two",
      "two elements",
      "elements in",
      "in the",
      "the array",
      "array param",
      "param array",
      "array an",
      "an array",
      "array where",
      "where swapping",
      "swapping is",
      "is done",
      "done param",
      "param i",
      "i index",
      "index of",
      "of the",
      "the first",
      "first element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param j",
      "j index",
      "index of",
      "of the",
      "the second",
      "second element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "BaseSorter.java",
    "Content": "Swaps two elements in the array @param array an array where swapping is done @param i index of the first element in the array @param j index of the second element in the array @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT extends Comparable\u003cT\u003e\u003e boolean isSorted(T[] array) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "549-868",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether an",
      "an array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order",
      "order param",
      "param array",
      "array an",
      "an array",
      "array which",
      "which is",
      "is being",
      "being checked",
      "checked param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array",
      "array return",
      "return code",
      "code true",
      "true if",
      "if code",
      "code array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order"
    ],
    "Location": "BaseSorter.java",
    "Content": "Checks whether an array is sorted in ascending order @param array an array which is being checked @param \u003cT\u003e type of elements in the array @return { @code true} if { @code array} is sorted in ascending order "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "\u003cT extends Comparable\u003cT\u003e\u003e void sort(T[] array)",
    "Namespace": "sem2.hw3.task1",
    "Range": "105-334",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Sorts code",
      "code array",
      "array in",
      "in ascending",
      "ascending order",
      "order using",
      "using link",
      "link Comparable",
      "Comparable compareTo",
      "compareTo param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "Sorter.java",
    "Content": "Sorts { @code array} in ascending order using { @link Comparable#compareTo} @param array an array to sort @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ConsoleSpiralOutputter extends DefaultSpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "25-165",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Table spiral",
      "spiral outputter",
      "outputter using",
      "using link",
      "link System",
      "System out",
      "out as",
      "as a",
      "a destination"
    ],
    "Location": "ConsoleSpiralOutputter.java",
    "Content": " Table spiral outputter using { @link System#out} as a destination "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract class DefaultSpiralOutputter implements SpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "54-267",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Default SpiralOutputter",
      "SpiralOutputter implementation",
      "implementation Can",
      "Can output",
      "output a",
      "a table",
      "table to",
      "to any",
      "any link",
      "link PrintStream",
      "PrintStream including",
      "including System",
      "System out",
      "out and",
      "and any",
      "any file"
    ],
    "Location": "DefaultSpiralOutputter.java",
    "Content": "Default SpiralOutputter implementation.Can output a table to any { @link PrintStream}including System.out and any file."
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public FileSpiralOutputter(String fileName) throws FileNotFoundException ",
    "Namespace": "sem2.hw3.task2",
    "Range": "208-511",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates outputter",
      "outputter associated",
      "associated with",
      "with file",
      "file named",
      "named code",
      "code fileName",
      "fileName param",
      "param fileName",
      "fileName name",
      "name of",
      "of the",
      "the file",
      "file to",
      "to output",
      "output the",
      "the table",
      "table in",
      "in throws",
      "throws FileNotFoundException",
      "FileNotFoundException if",
      "if no",
      "no file",
      "file named",
      "named code",
      "code fileName",
      "fileName was",
      "was found"
    ],
    "Location": "FileSpiralOutputter.java",
    "Content": "Creates outputter associated with file named { @code fileName} @param fileName name of the file to output the table in @throws FileNotFoundException if no file named { @code fileName} was found "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void outputSpirally(int[][] table)",
    "Namespace": "sem2.hw3.task2",
    "Range": "114-241",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Outputs code",
      "code table",
      "table spirally",
      "spirally param",
      "param table",
      "table a",
      "a table",
      "table to",
      "to output"
    ],
    "Location": "SpiralOutputter.java",
    "Content": "Outputs { @code table} spirally @param table a table to output "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-134",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used for",
      "for providing",
      "providing some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashTable"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used for providing some hash function for { @link HashTable}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T key)",
    "Namespace": "sem2.hw4.task2",
    "Range": "139-357",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code key",
      "key Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashTable",
      "HashTable hashCount",
      "hashCount param",
      "param key",
      "key the",
      "the value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of the",
      "the code",
      "code key"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code key}.Should return an integer from 0 to { @link HashTable#hashCount}. @param key the value for hashing @return hash of the { @code key} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int getBadHash() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "288-420",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated",
      "generated return",
      "return bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": "Returns the bad hash that was generated. @return bad hash that was generated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashTable\u003cK, V\u003e implements Iterable\u003cV\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "122-428",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Hash table",
      "table that",
      "that allows",
      "allows adding",
      "adding values",
      "values of",
      "of the",
      "the type",
      "type code",
      "code V",
      "V associated",
      "associated with",
      "with keys",
      "keys of",
      "of the",
      "the type",
      "type code",
      "code K",
      "K Hash",
      "Hash function",
      "function should",
      "should be",
      "be provided",
      "provided by",
      "by client",
      "client an",
      "an can",
      "can be",
      "be changed",
      "changed in",
      "in runtime",
      "runtime param",
      "param K",
      "K the",
      "the type",
      "type of",
      "of keys",
      "keys param",
      "param V",
      "V the",
      "the type",
      "type of",
      "of values"
    ],
    "Location": "HashTable.java",
    "Content": "Hash table that allows adding values of the type { @code V} associated with keys of the type { @code K}Hash function should be provided by client an can be changed in runtime. @param \u003cK\u003e the type of keys @param \u003cV\u003e the type of values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void add(K key, V value) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2128-2520",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds the",
      "the code",
      "code value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key to",
      "to the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key for",
      "for the",
      "the value",
      "value to",
      "to be",
      "be associated",
      "associated with",
      "with param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be added",
      "added throws",
      "throws KeyAlreadyExistsException",
      "KeyAlreadyExistsException if",
      "if the",
      "the code",
      "code key",
      "key already",
      "already exists",
      "exists in",
      "in the",
      "the table",
      "table throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Adds the { @code value} associated with the { @code key} to the set. @param key the key for the value to be associated with @param value the value to be added @throws KeyAlreadyExistsException if the { @code key} already exists in the table @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2884-3195",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes the",
      "the value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key from",
      "from the",
      "the set",
      "set Does",
      "Does nothing",
      "nothing in",
      "in case",
      "case of",
      "of not",
      "not founding",
      "founding this",
      "this key",
      "key in",
      "in the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key to",
      "to be",
      "be removed",
      "removed with",
      "with its",
      "its value",
      "value throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Removes the value associated with the { @code key} from the set.Does nothing in case of not founding this key in the set. @param key the key to be removed with its value @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean doesContain(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "3622-3912",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the set",
      "set contains",
      "contains a",
      "a value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key param",
      "param key",
      "key the",
      "the value",
      "value to",
      "to search",
      "search for",
      "for return",
      "return true",
      "true if",
      "if code",
      "code key",
      "key was",
      "was found",
      "found throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Checks if the set contains a value associated with the { @code key}. @param key the value to search for @return true if { @code key} was found @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void setHasher(Hasher\u003cK\u003e newHasher) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "4258-4501",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Change used",
      "used hash",
      "hash function",
      "function param",
      "param newHasher",
      "newHasher object",
      "object that",
      "that implements",
      "implements link",
      "link Hasher",
      "Hasher interface",
      "interface throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Change used hash function. @param newHasher object that implements { @link Hasher} interface @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int size() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5083-5186",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Size of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Size of the set. @return number of objects in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double loadFactor() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5219-5370",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Load factor",
      "factor of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects divided",
      "divided by",
      "by number",
      "number of",
      "of different",
      "different hash",
      "hash values"
    ],
    "Location": "HashTable.java",
    "Content": "Load factor of the set. @return number of objects divided by number of different hash values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int maxListLength() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5420-5591",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set",
      "set return",
      "return the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Returns the length of the maximum-sized list in the set. @return the length of the maximum-sized list in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class KeyAlreadyExistsException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-203",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody wants",
      "wants to",
      "to link",
      "link sem2",
      "sem2 hw4",
      "hw4 task2",
      "task2 HashTable",
      "HashTable add",
      "add an",
      "an existing",
      "existing key",
      "key to",
      "to a",
      "a table"
    ],
    "Location": "KeyAlreadyExistsException.java",
    "Content": " An exception thrown if somebody wants to { @link sem2.hw4.task2.HashTable#add} an existing key to a table. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "106-233",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "239-359",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void remove(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "365-539",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list If",
      "If the",
      "the value",
      "value was",
      "was not",
      "not found",
      "found does",
      "does nothing",
      "nothing param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed"
    ],
    "Location": "List.java",
    "Content": "Removes { @code value} from the list.If the value was not found, does nothing. @param value the value to be removed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean doesContain(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "545-737",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value",
      "value param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to look",
      "look for",
      "for return",
      "return true",
      "true if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value"
    ],
    "Location": "List.java",
    "Content": "Checks if the list contains { @code value}. @param value the value to look for @return true if the list contains { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task2",
    "Range": "790-882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "Get the size of the list. @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task2",
    "Range": "888-1004",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "Checks whether our list is empty. @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class SinglyLinkedList\u003cT\u003e implements List\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "94-303",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Singly linked",
      "linked list",
      "list implementation",
      "implementation Can",
      "Can be",
      "be iterated",
      "iterated through",
      "through using",
      "using foreach",
      "foreach iterator",
      "iterator implementation",
      "implementation supports",
      "supports link",
      "link java",
      "java util",
      "util Iterator",
      "Iterator remove"
    ],
    "Location": "SinglyLinkedList.java",
    "Content": " Singly-linked list implementation.Can be iterated through using foreach, iterator implementationsupports { @link java.util.Iterator#remove}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task1",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task1",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class UniqueList\u003cT\u003e extends SinglyLinkedList\u003cT\u003e ",
    "Namespace": "sem2.hw4.task1",
    "Range": "53-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A list",
      "list where",
      "where every",
      "every element",
      "element could",
      "could be",
      "be present",
      "present only",
      "only once"
    ],
    "Location": "UniqueList.java",
    "Content": " A list where every element could be present only once "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addFirst(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "396-527",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already have",
      "have code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already have { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addLast(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "652-786",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already contains",
      "contains code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already contains { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "910-1129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed",
      "removed throws",
      "throws NoSuchElementException",
      "NoSuchElementException if",
      "if the",
      "the list",
      "list does",
      "does not",
      "not contain",
      "contain code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": "Removes { @code value} from the list @param value the value to be removed @throws NoSuchElementException if the list does not contain { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Expression(String expressionString) throws BadExpressionException ",
    "Namespace": "sem2.hw6.task1",
    "Range": "2059-2740",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates an",
      "an ExpressionTree",
      "ExpressionTree by",
      "by a",
      "a specially",
      "specially formatted",
      "formatted string",
      "string code",
      "code expressionString",
      "expressionString should",
      "should be",
      "be formatted",
      "formatted as",
      "as follows",
      "follows br",
      "br Expr",
      "Expr is",
      "is a",
      "a positive",
      "positive integer",
      "integer number",
      "number or",
      "or Op",
      "Op Expr",
      "Expr Expr",
      "Expr br",
      "br where",
      "where Op",
      "Op is",
      "is an",
      "an operation",
      "operation one",
      "one of",
      "of br",
      "br So",
      "So the",
      "the correctly",
      "correctly formatted",
      "formatted string",
      "string is",
      "is Expr",
      "Expr br",
      "br Examples",
      "Examples of",
      "of good",
      "good strings",
      "strings ul",
      "ul li",
      "li 123",
      "123 li",
      "li li",
      "li 2",
      "2 2",
      "2 li",
      "li li",
      "li 4",
      "4 6",
      "6 12",
      "12 li",
      "li ul",
      "ul param",
      "param expressionString",
      "expressionString the",
      "the formatted",
      "formatted string",
      "string throws",
      "throws BadExpressionException",
      "BadExpressionException if",
      "if code",
      "code expressionString",
      "expressionString is",
      "is not",
      "not formatted",
      "formatted properly"
    ],
    "Location": "Expression.java",
    "Content": " Creates an ExpressionTree by a specially-formatted string.{ @code expressionString} should be formatted as follows:\u003cbr\u003eExpr is a positive integer number or (Op Expr Expr)\u003cbr\u003ewhere Op is an operation -- one of (+, -, , ).\u003cbr\u003eSo the correctly-formatted string is Expr.\u003cbr\u003e Examples of good strings:\u003cul\u003e \u003cli\u003e123\u003cli\u003e \u003cli\u003e(+ 2 2)\u003cli\u003e \u003cli\u003e(- ( 4 6) 12)\u003cli\u003e\u003cul\u003e @param expressionString the formatted string @throws BadExpressionException if { @code expressionString} is not formatted properly "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used to",
      "to provide",
      "provide some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashSet"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used to provide some hash function for { @link HashSet}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T value)",
    "Namespace": "sem2.hw6.task2",
    "Range": "134-353",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code value",
      "value Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashSet",
      "HashSet HASH",
      "HASH COUNT",
      "COUNT param",
      "param value",
      "value a",
      "a value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of code",
      "code value"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code value}.Should return an integer from 0 to { @link HashSet#HASH_COUNT}. @param value a value for hashing @return hash of { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashSet\u003cT\u003e implements Set\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "46-187",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The set",
      "set that",
      "that groups",
      "groups its",
      "its elements",
      "elements by",
      "by their",
      "their hashes",
      "hashes so",
      "so it",
      "it becomes",
      "becomes easier",
      "easier to",
      "to find",
      "find one",
      "one of",
      "of them"
    ],
    "Location": "HashSet.java",
    "Content": " The set that groups its elements by their hashes so it becomes easier to find one of them. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public enum TurnResult ",
    "Namespace": "sem2.hw7.task2",
    "Range": "140-246",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The enumeration",
      "enumeration of",
      "of thing",
      "thing that",
      "that could",
      "could happen",
      "happen after",
      "after a",
      "a turn",
      "turn was",
      "was performed"
    ],
    "Location": "TicTacToe.java",
    "Content": " The enumeration of thing that could happen after a turn was performed. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TicTacToe(int N) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1159-1279",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a game",
      "game with",
      "with field",
      "field side",
      "side size",
      "size code",
      "code N",
      "N param",
      "param N",
      "N field",
      "field side",
      "side size"
    ],
    "Location": "TicTacToe.java",
    "Content": " Start a game with field side size \u003d { @code N}. @param N field side size "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TurnResult makeTurn(int i, int j) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1492-1804",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Place next",
      "next cross",
      "cross or",
      "or zero",
      "zero to",
      "to the",
      "the code",
      "code i",
      "i code",
      "code j",
      "j cell",
      "cell param",
      "param i",
      "i the",
      "the row",
      "row where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero param",
      "param j",
      "j the",
      "the column",
      "column where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero return",
      "return An",
      "An link",
      "link TurnResult",
      "TurnResult entity",
      "entity see",
      "see TurnResult"
    ],
    "Location": "TicTacToe.java",
    "Content": " Place next cross or zero to the ({ @code i}, { @code j}) cell. @param i the row where to put the next cross or zero. @param j the column where to put the next cross or zero. @return An { @link TurnResult} entity. @see TurnResult "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ClassPrinter ",
    "Namespace": "sem2.hw7.task1",
    "Range": "54-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that can",
      "can output",
      "output some",
      "some RTTI",
      "RTTI Instead",
      "Instead of",
      "of standard",
      "standard testing",
      "testing which",
      "which is",
      "is inconvenient",
      "inconvenient here",
      "here one",
      "one can",
      "can pass",
      "pass different",
      "different classes",
      "classes into",
      "into print",
      "print statement",
      "statement in",
      "in main",
      "main Some",
      "Some classes",
      "classes to",
      "to check",
      "check are",
      "are declared",
      "declared below",
      "below standard",
      "standard library",
      "library could",
      "could also",
      "also be",
      "be used"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The class that can output some RTTI.Instead of standard testing, which is inconvenient here,one can pass different classes into print() statement in main().Some classes to check are declared below, standard library could also be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static void print(Class\u003c?\u003e clazz) ",
    "Namespace": "sem2.hw7.task1",
    "Range": "6219-6413",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The method",
      "method that",
      "that prints",
      "prints some",
      "some RTTI",
      "RTTI Works",
      "Works with",
      "with classes",
      "classes interfaces",
      "interfaces and",
      "and enums",
      "enums param",
      "param clazz",
      "clazz a",
      "a class",
      "class to",
      "to learn",
      "learn something",
      "something about"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The method that prints some RTTI.Works with classes, interfaces and enums. @param clazz a class to learn something about "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sorters\u003cT extends Comparable\u003cT\u003e\u003e extends RecursiveAction ",
    "Namespace": "sem2.hw8.task2",
    "Range": "141-300",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that provides",
      "provides parallel",
      "parallel and",
      "and non",
      "non parallel",
      "parallel quicksort",
      "quicksort implementations"
    ],
    "Location": "Sorters.java",
    "Content": "The class that provides parallel and non-parallel quicksort implementations. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void parallelSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "951-1211",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList using",
      "using multiple",
      "multiple threads",
      "threads param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} using multiple threads. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void singleThreadSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "1398-1662",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList without",
      "without multithreading",
      "multithreading param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} without multithreading. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class EmptyQueueException extends Exception ",
    "Namespace": "sem2.test1.task1",
    "Range": "27-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "an exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody was",
      "was trying",
      "trying to",
      "to remove",
      "remove an",
      "an element",
      "element form",
      "form an",
      "an empty",
      "empty queue"
    ],
    "Location": "EmptyQueueException.java",
    "Content": " an exception thrown if somebody was trying to remove an element form an empty queue "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void enqueue(T element, int priority)",
    "Namespace": "sem2.test1.task1",
    "Range": "133-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Put an",
      "an code",
      "code element",
      "element with",
      "with code",
      "code priority",
      "priority into",
      "into the",
      "the queue",
      "queue param",
      "param element",
      "element value",
      "value to",
      "to be",
      "be put",
      "put into",
      "into the",
      "the queue",
      "queue param",
      "param priority",
      "priority its",
      "its priority"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Put an { @code element} with { @code priority} into the queue @param element value to be put into the queue @param priority its priority "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "T dequeue() throws EmptyQueueException",
    "Namespace": "sem2.test1.task1",
    "Range": "342-580",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get an",
      "an element",
      "element with",
      "with maximum",
      "maximum priority",
      "priority from",
      "from the",
      "the queue",
      "queue and",
      "and remove",
      "remove it",
      "it throws",
      "throws EmptyQueueException",
      "EmptyQueueException if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty and",
      "and there",
      "there is",
      "is nothing",
      "nothing to",
      "to return",
      "return return",
      "return removed",
      "removed value"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Get an element with maximum priority from the queue and remove it @throws EmptyQueueException if the queue is empty and there is nothing to return @return removed value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.test1.task1",
    "Range": "586-691",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if the",
      "the queue",
      "queue is",
      "is empty"
    ],
    "Location": "PriorityQueue.java",
    "Content": " checks if the queue is empty @return true if the queue is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public CannonBall(long startTime, double x0, double y0, double angle) ",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "703-1073",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Create a",
      "a bullet",
      "bullet with",
      "with all",
      "all necessary",
      "necessary initial",
      "initial parameters",
      "parameters param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the ball",
      "ball is",
      "is being",
      "being fired"
    ],
    "Location": "CannonBall.java",
    "Content": "Create a bullet with all necessary initial parameters @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the ball is being fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract Explosion getExplosion(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "236-599",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown",
      "blown in",
      "in the",
      "the point",
      "point x",
      "x y",
      "y param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion return",
      "return the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown"
    ],
    "Location": "TankBullet.java",
    "Content": "Get the explosion which would happen if the bullet was blown in the point (x, y) @param x x-coord of the point of the generated explosion @param y y-coord of the point of the generated explosion @return the explosion which would happen if the bullet was blown "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void draw(Graphics2D graphics)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "605-756",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the bullet",
      "bullet param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "TankBullet.java",
    "Content": "draw the bullet @param graphics the { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void update(long time)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "762-900",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the bullet",
      "bullet position",
      "position param",
      "param time",
      "time current",
      "current system",
      "system time",
      "time in",
      "in millis"
    ],
    "Location": "TankBullet.java",
    "Content": "Update the bullet position @param time current system time in millis "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX0()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "906-1021",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the initial",
      "initial x",
      "x cooord",
      "cooord return",
      "return the",
      "the initial",
      "initial x",
      "x cooord"
    ],
    "Location": "TankBullet.java",
    "Content": "get the initial x-cooord @return the initial x-cooord "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1027-1167",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current x-coord of the bullet @return the current x-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getY()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1173-1313",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current y-coord of the bullet @return the current y-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract BulletPackage getPackage()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1319-1495",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "form a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet",
      "bullet return",
      "return a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "form a { @link BulletPackage} based on this bullet @return a { @link BulletPackage} based on this bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "166-330",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the current",
      "current state",
      "state of",
      "of explosion",
      "explosion param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Explosion.java",
    "Content": "draw the current state of explosion @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean update(long currentTime)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "337-565",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the explosion",
      "explosion state",
      "state basically",
      "basically the",
      "the sound",
      "sound wave",
      "wave param",
      "param currentTime",
      "currentTime current",
      "current tyme",
      "tyme of",
      "of the",
      "the system",
      "system return",
      "return code",
      "code true",
      "true if",
      "if it",
      "it still",
      "still explodes"
    ],
    "Location": "Explosion.java",
    "Content": "Update the explosion state (basically the sound wave) @param currentTime current tyme of the system @return { @code true} if it still explodes "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean inAffectedZone(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "571-835",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone",
      "zone param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone"
    ],
    "Location": "Explosion.java",
    "Content": "Check if the point is in the affected zone @param x x-coord of the point @param y y-coord of the point @return { @code true} if the point is in the affected zone "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class NoExplosion extends Explosion ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "41-160",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Explosion mock",
      "mock which",
      "which is",
      "is not",
      "not drawn",
      "drawn but",
      "but has",
      "has the",
      "the affection",
      "affection radius"
    ],
    "Location": "NoExplosion.java",
    "Content": "Explosion-mock which is not drawn, but has the affection radius "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics, double angle, double x, double y) ",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "203-524",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the gun",
      "gun param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw into",
      "into param",
      "param angle",
      "angle the",
      "the angle",
      "angle for",
      "for gun",
      "gun to",
      "to be",
      "be placed",
      "placed param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun",
      "gun param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "draw the gun @param graphics the { @link Graphics2D} context to draw into @param angle the angle for gun to be placed @param x x-coord of the root of the gun @param y y-coord of the root of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected abstract Shape getShape()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1149-1315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the basic",
      "basic unrotated",
      "unrotated shape",
      "shape of",
      "of the",
      "the gun",
      "gun return",
      "return link",
      "link Shape",
      "Shape entity",
      "entity which",
      "which id",
      "id the",
      "the shape",
      "shape of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "get the basic unrotated shape of the gun @return { @link Shape} entity which id the shape of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankBullet getBullet(long startTime, double x0, double y0, double angle)",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1321-1704",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Produce a",
      "a bullet",
      "bullet param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the bullet",
      "bullet is",
      "is being",
      "being fired",
      "fired return",
      "return the",
      "the new",
      "new bullet"
    ],
    "Location": "TankGun.java",
    "Content": "Produce a bullet @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the bullet is being fired @return the new bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankGun getNextGun()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1710-1863",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns",
      "guns return",
      "return the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns"
    ],
    "Location": "TankGun.java",
    "Content": "Get the next gun in the list af all guns @return the next gun in the list af all guns "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1667-1803",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draws the",
      "the landscape",
      "landscape param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "Landscape.java",
    "Content": " draws the landscape @param graphics { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getY(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1896-2086",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface",
      "surface param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate for",
      "for which",
      "which we",
      "we need",
      "need its",
      "its height",
      "height return",
      "return y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface"
    ],
    "Location": "Landscape.java",
    "Content": "get the y-coordinate on the surface @param x x-coordinate for which we need its height @return y-coordinate on the surface "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getAngle(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2542-2919",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the angle",
      "angle of",
      "of the",
      "the surface",
      "surface where",
      "where x",
      "x coordinate",
      "coordinate is",
      "is code",
      "code x",
      "x code",
      "code param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate to",
      "to find",
      "find the",
      "the angle",
      "angle return",
      "return the",
      "the angle",
      "angle from",
      "from pi",
      "pi 2",
      "2 pi",
      "pi 2",
      "2 in",
      "in radians",
      "radians If",
      "If the",
      "the height",
      "height is",
      "is growing",
      "growing y",
      "y is",
      "is decreasing",
      "decreasing when",
      "when moving",
      "moving right",
      "right the",
      "the angle",
      "angle is",
      "is positive",
      "positive If",
      "If the",
      "the height",
      "height is",
      "is decreasing",
      "decreasing the",
      "the angle",
      "angle is",
      "is negative"
    ],
    "Location": "Landscape.java",
    "Content": "get the angle of the surface where x-coordinate is \u003ccode\u003ex\u003ccode\u003e @param x x-coordinate to find the angle @return the angle from [-pi2, pi2] in radians. If the heightis growing (y is decreasing) when moving right, the angle is positive.If the height is decreasing, the angle is negative. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInAir(double x, double y) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3209-3466",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground",
      "ground param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground"
    ],
    "Location": "Landscape.java",
    "Content": "Check if the point is over the ground @param x x-coord of the point to check @param y y-coord of the point to check @return { @code true} if the point is over the ground "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class BulletPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "321-523",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "BulletPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class OpponentFinder ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "201-351",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class responsible",
      "responsible for",
      "for connecting",
      "connecting to",
      "to the",
      "the opponent",
      "opponent It",
      "It starts",
      "starts the",
      "the game",
      "game when",
      "when the",
      "the connection",
      "connection is",
      "is established"
    ],
    "Location": "OpponentFinder.java",
    "Content": "The class responsible for connecting to the opponentIt starts the game when the connection is established "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Receiver implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "249-449",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It receives",
      "receives all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the opponent",
      "opponent and",
      "and synchronizes",
      "synchronizes the",
      "the scene",
      "scene according",
      "according to",
      "to it"
    ],
    "Location": "Receiver.java",
    "Content": "The class implementing the conversation to the opponent.It receives all the data from the opponent and synchronizes the scene according to it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Receiver(Tank opponent, TanksGame game, InputStream inputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "587-858",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param opponent",
      "opponent the",
      "the tank",
      "tank to",
      "to be",
      "be updated",
      "updated according",
      "according to",
      "to the",
      "the input",
      "input data",
      "data param",
      "param game",
      "game the",
      "the game",
      "game to",
      "to be",
      "be updated",
      "updated param",
      "param inputStream",
      "inputStream the",
      "the link",
      "link InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data"
    ],
    "Location": "Receiver.java",
    "Content": " @param opponent the tank to be updated according to the input data @param game the game to be updated @param inputStream the { @link InputStream} to get the data "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isDisconnected() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1088-1262",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has stopped",
      "stopped working",
      "working return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has terminated"
    ],
    "Location": "Receiver.java",
    "Content": "Checks if the { @code Receiver} has stopped working @return { @code true} if the { @code Receiver} has terminated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sender implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "265-437",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It gets",
      "gets all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the game",
      "game and",
      "and sends",
      "sends it",
      "it every",
      "every while"
    ],
    "Location": "Sender.java",
    "Content": "The class implementing the conversation to the opponent.It gets all the data from the game and sends it every while "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Sender(Tank tank, OutputStream outputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "542-750",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param tank",
      "tank the",
      "the tank",
      "tank which",
      "which position",
      "position is",
      "is needed",
      "needed to",
      "to be",
      "be sent",
      "sent param",
      "param outputStream",
      "outputStream the",
      "the code",
      "code OutputStream",
      "OutputStream to",
      "to put",
      "put all",
      "all the",
      "the data",
      "data in"
    ],
    "Location": "Sender.java",
    "Content": " @param tank the tank which position is needed to be sent @param outputStream the { @code OutputStream} to put all the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendBulletPackage(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "838-989",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent that",
      "that we",
      "we have",
      "have shot",
      "shot param",
      "param bullet",
      "bullet the",
      "the bullet",
      "bullet we",
      "we shot"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent that we have shot @param bullet the bullet we shot "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendGameEnded() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1450-1588",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent we",
      "we have",
      "have lost",
      "lost the",
      "the game",
      "game Triples",
      "Triples the",
      "the notification",
      "notification to",
      "to be",
      "be sure"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent we have lost the game.Triples the notification to be sure "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TankPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "38-238",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "TankPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isConnected() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "952-1145",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server",
      "server return",
      "return true",
      "true if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server"
    ],
    "Location": "TanksClient.java",
    "Content": "Checks if the client has successfully connected to the server @return { @true} if the client has successfully connected to the server "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public String getErrorMessage() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1185-1338",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "What went",
      "went wrong",
      "wrong if",
      "if something",
      "something did",
      "did return",
      "return the",
      "the message",
      "message with",
      "with the",
      "the description",
      "description of",
      "of the",
      "the error"
    ],
    "Location": "TanksClient.java",
    "Content": "What went wrong (if something did)? @return the message with the description of the error "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public InputStream getInput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1379-1534",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to send",
      "send some",
      "some data",
      "data to",
      "to the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to put",
      "put the",
      "the data",
      "data in"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to send some data to the server @return { @code InputStream} to put the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public OutputStream getOutput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1568-1728",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to get",
      "get some",
      "some data",
      "data from",
      "from the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data",
      "data from"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to get some data from the server @return { @code InputStream} to get the data from "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TanksServer implements Runnable ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "258-516",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A simple",
      "simple data",
      "data passing",
      "passing server",
      "server for",
      "for two",
      "two clients",
      "clients It",
      "It does",
      "does all",
      "all the",
      "the initial",
      "initial conversation",
      "conversation with",
      "with clients",
      "clients When",
      "When it",
      "it establishes",
      "establishes a",
      "a connection",
      "connection with",
      "with two",
      "two clients",
      "clients it",
      "it just",
      "just passes",
      "passes all",
      "all the",
      "the data",
      "data from",
      "from one",
      "one to",
      "to another"
    ],
    "Location": "TanksServer.java",
    "Content": "A simple data-passing server for two clients.It does all the initial conversation with clients.When it establishes a connection with two clients it just passes all the data from one to another "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank(Landscape land, boolean isOpponent, TanksGame game, TankGun gun, int xPos) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1140-1406",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new tank",
      "tank located",
      "located on",
      "on code",
      "code land",
      "land param",
      "param land",
      "land link",
      "link Landscape",
      "Landscape where",
      "where to",
      "to locate",
      "locate our",
      "our new",
      "new tank",
      "tank param",
      "param xPos",
      "xPos our",
      "our tank",
      "tank initial",
      "initial x",
      "x position"
    ],
    "Location": "Tank.java",
    "Content": "Creates new tank located on { @code land} @param land { @link Landscape}, where to locate our new tank @param xPos our tank initial x-position "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getX() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1558-1680",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank",
      "tank return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the tank @return the x-coordinate of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterX(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1713-2061",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the x-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterY(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2125-2473",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the y",
      "y coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the y",
      "y coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the y-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the y-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void shoot() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2975-3076",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a bullet",
      "bullet to",
      "to the",
      "the game",
      "game based",
      "based on",
      "on the",
      "the current",
      "current tank",
      "tank state"
    ],
    "Location": "Tank.java",
    "Content": "Add a bullet to the game based on the current tank state "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3542-3723",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the tank",
      "tank into",
      "into the",
      "the code",
      "code graphics",
      "graphics param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Tank.java",
    "Content": "draw the tank into the { @code graphics} @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void move(long ms) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "5591-5841",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update all",
      "all necessary",
      "necessary parameters",
      "parameters to",
      "to move",
      "move the",
      "the tank",
      "tank according",
      "according to",
      "to how",
      "how much",
      "much time",
      "time has",
      "has passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation param",
      "param ms",
      "ms time",
      "time passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation in",
      "in milliseconds"
    ],
    "Location": "Tank.java",
    "Content": "update all necessary parameters to move the tank according tohow much time has passed since the last updation @param ms time passed since the last updation in milliseconds "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized TankPackage getPosition() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7193-7408",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank",
      "tank return",
      "return the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "get the { @link TankPackage} object with actual data about the tank @return the { @link TankPackage} object with actual data about the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void updatePosition(TankPackage tankPackage) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7616-7933",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update position",
      "position based",
      "based on",
      "on the",
      "the code",
      "code tankPackage",
      "tankPackage while",
      "while our",
      "our tank",
      "tank is",
      "is updated",
      "updated based",
      "based on",
      "on key",
      "key presses",
      "presses the",
      "the opponent",
      "opponent one",
      "one is",
      "is updated",
      "updated by",
      "by calling",
      "calling this",
      "this method",
      "method param",
      "param tankPackage",
      "tankPackage information",
      "information about",
      "about the",
      "the new",
      "new position",
      "position of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "update position based on the { @code tankPackage}while our tank is updated based on key presses, the opponent one is updated by calling this method @param tankPackage information about the new position of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TanksGame(long startTime, boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1620-2092",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new code",
      "code TankGame",
      "TankGame with",
      "with 2",
      "2 tanks",
      "tanks with",
      "with x",
      "x coords",
      "coords set",
      "set to",
      "to 100",
      "100 and",
      "and to",
      "to 500",
      "500 respectively",
      "respectively param",
      "param startTime",
      "startTime System",
      "System time",
      "time when",
      "when the",
      "the game",
      "game is",
      "is being",
      "being init",
      "init param",
      "param isSecondPlayer",
      "isSecondPlayer code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are the",
      "the tank",
      "tank with",
      "with x",
      "x coord",
      "coord set",
      "set to",
      "to 500",
      "500 param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksGame.java",
    "Content": "Creates new { @code TankGame} with 2 tanks with x-coords set to 100 and to 500 respectively @param startTime System time when the game is being init @param isSecondPlayer { @code true} if we are the tank with x-coord set to 500 @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2944-3120",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered ours",
      "ours param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered ours @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addOpponentBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3256-3446",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered opponent\u0027s",
      "opponent\u0027s param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered opponent\u0027s @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void handleOpponentShoot(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3545-3882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A method",
      "method that",
      "that is",
      "is used",
      "used by",
      "by link",
      "link Receiver",
      "Receiver to",
      "to add",
      "add a",
      "a bullet",
      "bullet smartly",
      "smartly It",
      "It discards",
      "discards bad",
      "bad bullets",
      "bullets and",
      "and can",
      "can manually",
      "manually create",
      "create the",
      "the one",
      "one lost",
      "lost with",
      "with loosing",
      "loosing a",
      "a bit",
      "bit of",
      "of precision",
      "precision param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add",
      "add if",
      "if null",
      "null the",
      "the bullet",
      "bullet will",
      "will be",
      "be created",
      "created manually"
    ],
    "Location": "TanksGame.java",
    "Content": "A method that is used by { @link Receiver} to add a bullet smartlyIt discards bad bullets and can manually create the one lost with loosing a bit of precision @param bullet a bullet to add; if null, the bullet will be created manually "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void handleGunChanged() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4396-4497",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Used by",
      "by our",
      "our tank",
      "tank to",
      "to notify",
      "notify the",
      "the gun",
      "gun is",
      "is changed"
    ],
    "Location": "TanksGame.java",
    "Content": "Used by our tank to notify the gun is changed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public KeyListener getKeyListener() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4542-4710",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses",
      "presses return",
      "return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses"
    ],
    "Location": "TanksGame.java",
    "Content": "Return the tank that will handle with key presses @return the tank that will handle with key presses "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7591-7749",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Draw the",
      "the whole",
      "whole scene",
      "scene param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "TanksGame.java",
    "Content": "Draw the whole scene @param graphics { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean cycle(long time) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "8109-8283",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the scene",
      "scene param",
      "param time",
      "time current",
      "current time",
      "time in",
      "in millis",
      "millis return",
      "return code",
      "code true",
      "true if",
      "if there",
      "there is",
      "is anything",
      "anything to",
      "to update"
    ],
    "Location": "TanksGame.java",
    "Content": "Update the scene @param time current time in millis @return { @code true} if there is anything to update "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank getWinnerTank() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "9114-9278",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the winner",
      "winner tank",
      "tank Do",
      "Do not",
      "not use",
      "use when",
      "when the",
      "the game",
      "game is",
      "is not",
      "not finished",
      "finished return",
      "return the",
      "the tank",
      "tank which",
      "which won",
      "won the",
      "the game"
    ],
    "Location": "TanksGame.java",
    "Content": "Get the winner tankDo not use when the game is not finished. @return the tank which won the game "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isWaiting() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3162-3315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent",
      "opponent return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are waiting for an opponent @return { @code true} if we are waiting for an opponent "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInGame() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3375-3503",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are playing",
      "playing now",
      "now return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are playing",
      "playing now"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are playing now @return { @code true} if we are playing now "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void startGame(boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3554-3935",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a new",
      "new game",
      "game Expects",
      "Expects that",
      "that the",
      "the connection",
      "connection to",
      "to our",
      "our opponent",
      "opponent has",
      "has already",
      "already been",
      "been established",
      "established param",
      "param isSecondPlayer",
      "isSecondPlayer are",
      "are we",
      "we the",
      "the right",
      "right player",
      "player on",
      "on start",
      "start param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksPanel.java",
    "Content": "Start a new gameExpects that the connection to our opponent has already been established @param isSecondPlayer are we the right player on start? @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "1c820199fc3155c2949aaebe50ae7872883ab9e9",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2018-05-25T12:47:40Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw2.task2",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw2.task2",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected \u003cT extends Comparable\u003cT\u003e\u003e void swap(T[] array, int i, int j) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "116-456",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Swaps two",
      "two elements",
      "elements in",
      "in the",
      "the array",
      "array param",
      "param array",
      "array an",
      "an array",
      "array where",
      "where swapping",
      "swapping is",
      "is done",
      "done param",
      "param i",
      "i index",
      "index of",
      "of the",
      "the first",
      "first element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param j",
      "j index",
      "index of",
      "of the",
      "the second",
      "second element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "BaseSorter.java",
    "Content": "Swaps two elements in the array @param array an array where swapping is done @param i index of the first element in the array @param j index of the second element in the array @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT extends Comparable\u003cT\u003e\u003e boolean isSorted(T[] array) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "549-868",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether an",
      "an array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order",
      "order param",
      "param array",
      "array an",
      "an array",
      "array which",
      "which is",
      "is being",
      "being checked",
      "checked param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array",
      "array return",
      "return code",
      "code true",
      "true if",
      "if code",
      "code array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order"
    ],
    "Location": "BaseSorter.java",
    "Content": "Checks whether an array is sorted in ascending order @param array an array which is being checked @param \u003cT\u003e type of elements in the array @return { @code true} if { @code array} is sorted in ascending order "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "\u003cT extends Comparable\u003cT\u003e\u003e void sort(T[] array)",
    "Namespace": "sem2.hw3.task1",
    "Range": "105-334",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Sorts code",
      "code array",
      "array in",
      "in ascending",
      "ascending order",
      "order using",
      "using link",
      "link Comparable",
      "Comparable compareTo",
      "compareTo param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "Sorter.java",
    "Content": "Sorts { @code array} in ascending order using { @link Comparable#compareTo} @param array an array to sort @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ConsoleSpiralOutputter extends DefaultSpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "25-165",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Table spiral",
      "spiral outputter",
      "outputter using",
      "using link",
      "link System",
      "System out",
      "out as",
      "as a",
      "a destination"
    ],
    "Location": "ConsoleSpiralOutputter.java",
    "Content": " Table spiral outputter using { @link System#out} as a destination "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract class DefaultSpiralOutputter implements SpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "54-267",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Default SpiralOutputter",
      "SpiralOutputter implementation",
      "implementation Can",
      "Can output",
      "output a",
      "a table",
      "table to",
      "to any",
      "any link",
      "link PrintStream",
      "PrintStream including",
      "including System",
      "System out",
      "out and",
      "and any",
      "any file"
    ],
    "Location": "DefaultSpiralOutputter.java",
    "Content": "Default SpiralOutputter implementation.Can output a table to any { @link PrintStream}including System.out and any file."
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public FileSpiralOutputter(String fileName) throws FileNotFoundException ",
    "Namespace": "sem2.hw3.task2",
    "Range": "208-511",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates outputter",
      "outputter associated",
      "associated with",
      "with file",
      "file named",
      "named code",
      "code fileName",
      "fileName param",
      "param fileName",
      "fileName name",
      "name of",
      "of the",
      "the file",
      "file to",
      "to output",
      "output the",
      "the table",
      "table in",
      "in throws",
      "throws FileNotFoundException",
      "FileNotFoundException if",
      "if no",
      "no file",
      "file named",
      "named code",
      "code fileName",
      "fileName was",
      "was found"
    ],
    "Location": "FileSpiralOutputter.java",
    "Content": "Creates outputter associated with file named { @code fileName} @param fileName name of the file to output the table in @throws FileNotFoundException if no file named { @code fileName} was found "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void outputSpirally(int[][] table)",
    "Namespace": "sem2.hw3.task2",
    "Range": "114-241",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Outputs code",
      "code table",
      "table spirally",
      "spirally param",
      "param table",
      "table a",
      "a table",
      "table to",
      "to output"
    ],
    "Location": "SpiralOutputter.java",
    "Content": "Outputs { @code table} spirally @param table a table to output "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-134",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used for",
      "for providing",
      "providing some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashTable"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used for providing some hash function for { @link HashTable}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T key)",
    "Namespace": "sem2.hw4.task2",
    "Range": "139-357",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code key",
      "key Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashTable",
      "HashTable hashCount",
      "hashCount param",
      "param key",
      "key the",
      "the value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of the",
      "the code",
      "code key"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code key}.Should return an integer from 0 to { @link HashTable#hashCount}. @param key the value for hashing @return hash of the { @code key} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int getBadHash() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "288-420",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated",
      "generated return",
      "return bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": "Returns the bad hash that was generated. @return bad hash that was generated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashTable\u003cK, V\u003e implements Iterable\u003cV\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "122-428",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Hash table",
      "table that",
      "that allows",
      "allows adding",
      "adding values",
      "values of",
      "of the",
      "the type",
      "type code",
      "code V",
      "V associated",
      "associated with",
      "with keys",
      "keys of",
      "of the",
      "the type",
      "type code",
      "code K",
      "K Hash",
      "Hash function",
      "function should",
      "should be",
      "be provided",
      "provided by",
      "by client",
      "client an",
      "an can",
      "can be",
      "be changed",
      "changed in",
      "in runtime",
      "runtime param",
      "param K",
      "K the",
      "the type",
      "type of",
      "of keys",
      "keys param",
      "param V",
      "V the",
      "the type",
      "type of",
      "of values"
    ],
    "Location": "HashTable.java",
    "Content": "Hash table that allows adding values of the type { @code V} associated with keys of the type { @code K}Hash function should be provided by client an can be changed in runtime. @param \u003cK\u003e the type of keys @param \u003cV\u003e the type of values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void add(K key, V value) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2128-2520",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds the",
      "the code",
      "code value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key to",
      "to the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key for",
      "for the",
      "the value",
      "value to",
      "to be",
      "be associated",
      "associated with",
      "with param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be added",
      "added throws",
      "throws KeyAlreadyExistsException",
      "KeyAlreadyExistsException if",
      "if the",
      "the code",
      "code key",
      "key already",
      "already exists",
      "exists in",
      "in the",
      "the table",
      "table throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Adds the { @code value} associated with the { @code key} to the set. @param key the key for the value to be associated with @param value the value to be added @throws KeyAlreadyExistsException if the { @code key} already exists in the table @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2884-3195",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes the",
      "the value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key from",
      "from the",
      "the set",
      "set Does",
      "Does nothing",
      "nothing in",
      "in case",
      "case of",
      "of not",
      "not founding",
      "founding this",
      "this key",
      "key in",
      "in the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key to",
      "to be",
      "be removed",
      "removed with",
      "with its",
      "its value",
      "value throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Removes the value associated with the { @code key} from the set.Does nothing in case of not founding this key in the set. @param key the key to be removed with its value @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean doesContain(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "3622-3912",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the set",
      "set contains",
      "contains a",
      "a value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key param",
      "param key",
      "key the",
      "the value",
      "value to",
      "to search",
      "search for",
      "for return",
      "return true",
      "true if",
      "if code",
      "code key",
      "key was",
      "was found",
      "found throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Checks if the set contains a value associated with the { @code key}. @param key the value to search for @return true if { @code key} was found @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void setHasher(Hasher\u003cK\u003e newHasher) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "4258-4501",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Change used",
      "used hash",
      "hash function",
      "function param",
      "param newHasher",
      "newHasher object",
      "object that",
      "that implements",
      "implements link",
      "link Hasher",
      "Hasher interface",
      "interface throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Change used hash function. @param newHasher object that implements { @link Hasher} interface @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int size() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5083-5186",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Size of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Size of the set. @return number of objects in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double loadFactor() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5219-5370",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Load factor",
      "factor of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects divided",
      "divided by",
      "by number",
      "number of",
      "of different",
      "different hash",
      "hash values"
    ],
    "Location": "HashTable.java",
    "Content": "Load factor of the set. @return number of objects divided by number of different hash values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int maxListLength() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5420-5591",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set",
      "set return",
      "return the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Returns the length of the maximum-sized list in the set. @return the length of the maximum-sized list in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class KeyAlreadyExistsException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-203",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody wants",
      "wants to",
      "to link",
      "link sem2",
      "sem2 hw4",
      "hw4 task2",
      "task2 HashTable",
      "HashTable add",
      "add an",
      "an existing",
      "existing key",
      "key to",
      "to a",
      "a table"
    ],
    "Location": "KeyAlreadyExistsException.java",
    "Content": " An exception thrown if somebody wants to { @link sem2.hw4.task2.HashTable#add} an existing key to a table. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "106-233",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "239-359",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void remove(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "365-539",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list If",
      "If the",
      "the value",
      "value was",
      "was not",
      "not found",
      "found does",
      "does nothing",
      "nothing param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed"
    ],
    "Location": "List.java",
    "Content": "Removes { @code value} from the list.If the value was not found, does nothing. @param value the value to be removed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean doesContain(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "545-737",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value",
      "value param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to look",
      "look for",
      "for return",
      "return true",
      "true if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value"
    ],
    "Location": "List.java",
    "Content": "Checks if the list contains { @code value}. @param value the value to look for @return true if the list contains { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task2",
    "Range": "790-882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "Get the size of the list. @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task2",
    "Range": "888-1004",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "Checks whether our list is empty. @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class SinglyLinkedList\u003cT\u003e implements List\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "94-303",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Singly linked",
      "linked list",
      "list implementation",
      "implementation Can",
      "Can be",
      "be iterated",
      "iterated through",
      "through using",
      "using foreach",
      "foreach iterator",
      "iterator implementation",
      "implementation supports",
      "supports link",
      "link java",
      "java util",
      "util Iterator",
      "Iterator remove"
    ],
    "Location": "SinglyLinkedList.java",
    "Content": " Singly-linked list implementation.Can be iterated through using foreach, iterator implementationsupports { @link java.util.Iterator#remove}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task1",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task1",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class UniqueList\u003cT\u003e extends SinglyLinkedList\u003cT\u003e ",
    "Namespace": "sem2.hw4.task1",
    "Range": "53-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A list",
      "list where",
      "where every",
      "every element",
      "element could",
      "could be",
      "be present",
      "present only",
      "only once"
    ],
    "Location": "UniqueList.java",
    "Content": " A list where every element could be present only once "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addFirst(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "396-527",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already have",
      "have code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already have { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addLast(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "652-786",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already contains",
      "contains code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already contains { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "910-1129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed",
      "removed throws",
      "throws NoSuchElementException",
      "NoSuchElementException if",
      "if the",
      "the list",
      "list does",
      "does not",
      "not contain",
      "contain code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": "Removes { @code value} from the list @param value the value to be removed @throws NoSuchElementException if the list does not contain { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Expression(String expressionString) throws BadExpressionException ",
    "Namespace": "sem2.hw6.task1",
    "Range": "2059-2740",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates an",
      "an ExpressionTree",
      "ExpressionTree by",
      "by a",
      "a specially",
      "specially formatted",
      "formatted string",
      "string code",
      "code expressionString",
      "expressionString should",
      "should be",
      "be formatted",
      "formatted as",
      "as follows",
      "follows br",
      "br Expr",
      "Expr is",
      "is a",
      "a positive",
      "positive integer",
      "integer number",
      "number or",
      "or Op",
      "Op Expr",
      "Expr Expr",
      "Expr br",
      "br where",
      "where Op",
      "Op is",
      "is an",
      "an operation",
      "operation one",
      "one of",
      "of br",
      "br So",
      "So the",
      "the correctly",
      "correctly formatted",
      "formatted string",
      "string is",
      "is Expr",
      "Expr br",
      "br Examples",
      "Examples of",
      "of good",
      "good strings",
      "strings ul",
      "ul li",
      "li 123",
      "123 li",
      "li li",
      "li 2",
      "2 2",
      "2 li",
      "li li",
      "li 4",
      "4 6",
      "6 12",
      "12 li",
      "li ul",
      "ul param",
      "param expressionString",
      "expressionString the",
      "the formatted",
      "formatted string",
      "string throws",
      "throws BadExpressionException",
      "BadExpressionException if",
      "if code",
      "code expressionString",
      "expressionString is",
      "is not",
      "not formatted",
      "formatted properly"
    ],
    "Location": "Expression.java",
    "Content": " Creates an ExpressionTree by a specially-formatted string.{ @code expressionString} should be formatted as follows:\u003cbr\u003eExpr is a positive integer number or (Op Expr Expr)\u003cbr\u003ewhere Op is an operation -- one of (+, -, , ).\u003cbr\u003eSo the correctly-formatted string is Expr.\u003cbr\u003e Examples of good strings:\u003cul\u003e \u003cli\u003e123\u003cli\u003e \u003cli\u003e(+ 2 2)\u003cli\u003e \u003cli\u003e(- ( 4 6) 12)\u003cli\u003e\u003cul\u003e @param expressionString the formatted string @throws BadExpressionException if { @code expressionString} is not formatted properly "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used to",
      "to provide",
      "provide some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashSet"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used to provide some hash function for { @link HashSet}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T value)",
    "Namespace": "sem2.hw6.task2",
    "Range": "134-353",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code value",
      "value Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashSet",
      "HashSet HASH",
      "HASH COUNT",
      "COUNT param",
      "param value",
      "value a",
      "a value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of code",
      "code value"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code value}.Should return an integer from 0 to { @link HashSet#HASH_COUNT}. @param value a value for hashing @return hash of { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashSet\u003cT\u003e implements Set\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "46-187",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The set",
      "set that",
      "that groups",
      "groups its",
      "its elements",
      "elements by",
      "by their",
      "their hashes",
      "hashes so",
      "so it",
      "it becomes",
      "becomes easier",
      "easier to",
      "to find",
      "find one",
      "one of",
      "of them"
    ],
    "Location": "HashSet.java",
    "Content": " The set that groups its elements by their hashes so it becomes easier to find one of them. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public enum TurnResult ",
    "Namespace": "sem2.hw7.task2",
    "Range": "140-246",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The enumeration",
      "enumeration of",
      "of thing",
      "thing that",
      "that could",
      "could happen",
      "happen after",
      "after a",
      "a turn",
      "turn was",
      "was performed"
    ],
    "Location": "TicTacToe.java",
    "Content": " The enumeration of thing that could happen after a turn was performed. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TicTacToe(int N) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1159-1279",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a game",
      "game with",
      "with field",
      "field side",
      "side size",
      "size code",
      "code N",
      "N param",
      "param N",
      "N field",
      "field side",
      "side size"
    ],
    "Location": "TicTacToe.java",
    "Content": " Start a game with field side size \u003d { @code N}. @param N field side size "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TurnResult makeTurn(int i, int j) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1492-1804",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Place next",
      "next cross",
      "cross or",
      "or zero",
      "zero to",
      "to the",
      "the code",
      "code i",
      "i code",
      "code j",
      "j cell",
      "cell param",
      "param i",
      "i the",
      "the row",
      "row where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero param",
      "param j",
      "j the",
      "the column",
      "column where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero return",
      "return An",
      "An link",
      "link TurnResult",
      "TurnResult entity",
      "entity see",
      "see TurnResult"
    ],
    "Location": "TicTacToe.java",
    "Content": " Place next cross or zero to the ({ @code i}, { @code j}) cell. @param i the row where to put the next cross or zero. @param j the column where to put the next cross or zero. @return An { @link TurnResult} entity. @see TurnResult "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ClassPrinter ",
    "Namespace": "sem2.hw7.task1",
    "Range": "54-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that can",
      "can output",
      "output some",
      "some RTTI",
      "RTTI Instead",
      "Instead of",
      "of standard",
      "standard testing",
      "testing which",
      "which is",
      "is inconvenient",
      "inconvenient here",
      "here one",
      "one can",
      "can pass",
      "pass different",
      "different classes",
      "classes into",
      "into print",
      "print statement",
      "statement in",
      "in main",
      "main Some",
      "Some classes",
      "classes to",
      "to check",
      "check are",
      "are declared",
      "declared below",
      "below standard",
      "standard library",
      "library could",
      "could also",
      "also be",
      "be used"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The class that can output some RTTI.Instead of standard testing, which is inconvenient here,one can pass different classes into print() statement in main().Some classes to check are declared below, standard library could also be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static void print(Class\u003c?\u003e clazz) ",
    "Namespace": "sem2.hw7.task1",
    "Range": "6219-6413",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The method",
      "method that",
      "that prints",
      "prints some",
      "some RTTI",
      "RTTI Works",
      "Works with",
      "with classes",
      "classes interfaces",
      "interfaces and",
      "and enums",
      "enums param",
      "param clazz",
      "clazz a",
      "a class",
      "class to",
      "to learn",
      "learn something",
      "something about"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The method that prints some RTTI.Works with classes, interfaces and enums. @param clazz a class to learn something about "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sorters\u003cT extends Comparable\u003cT\u003e\u003e extends RecursiveAction ",
    "Namespace": "sem2.hw8.task2",
    "Range": "141-300",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that provides",
      "provides parallel",
      "parallel and",
      "and non",
      "non parallel",
      "parallel quicksort",
      "quicksort implementations"
    ],
    "Location": "Sorters.java",
    "Content": "The class that provides parallel and non-parallel quicksort implementations. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void parallelSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "951-1211",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList using",
      "using multiple",
      "multiple threads",
      "threads param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} using multiple threads. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void singleThreadSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "1398-1662",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList without",
      "without multithreading",
      "multithreading param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} without multithreading. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class EmptyQueueException extends Exception ",
    "Namespace": "sem2.test1.task1",
    "Range": "27-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "an exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody was",
      "was trying",
      "trying to",
      "to remove",
      "remove an",
      "an element",
      "element form",
      "form an",
      "an empty",
      "empty queue"
    ],
    "Location": "EmptyQueueException.java",
    "Content": " an exception thrown if somebody was trying to remove an element form an empty queue "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void enqueue(T element, int priority)",
    "Namespace": "sem2.test1.task1",
    "Range": "133-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Put an",
      "an code",
      "code element",
      "element with",
      "with code",
      "code priority",
      "priority into",
      "into the",
      "the queue",
      "queue param",
      "param element",
      "element value",
      "value to",
      "to be",
      "be put",
      "put into",
      "into the",
      "the queue",
      "queue param",
      "param priority",
      "priority its",
      "its priority"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Put an { @code element} with { @code priority} into the queue @param element value to be put into the queue @param priority its priority "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "T dequeue() throws EmptyQueueException",
    "Namespace": "sem2.test1.task1",
    "Range": "342-580",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get an",
      "an element",
      "element with",
      "with maximum",
      "maximum priority",
      "priority from",
      "from the",
      "the queue",
      "queue and",
      "and remove",
      "remove it",
      "it throws",
      "throws EmptyQueueException",
      "EmptyQueueException if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty and",
      "and there",
      "there is",
      "is nothing",
      "nothing to",
      "to return",
      "return return",
      "return removed",
      "removed value"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Get an element with maximum priority from the queue and remove it @throws EmptyQueueException if the queue is empty and there is nothing to return @return removed value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.test1.task1",
    "Range": "586-691",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if the",
      "the queue",
      "queue is",
      "is empty"
    ],
    "Location": "PriorityQueue.java",
    "Content": " checks if the queue is empty @return true if the queue is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public CannonBall(long startTime, double x0, double y0, double angle) ",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "703-1073",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Create a",
      "a bullet",
      "bullet with",
      "with all",
      "all necessary",
      "necessary initial",
      "initial parameters",
      "parameters param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the ball",
      "ball is",
      "is being",
      "being fired"
    ],
    "Location": "CannonBall.java",
    "Content": "Create a bullet with all necessary initial parameters @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the ball is being fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract Explosion getExplosion(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "236-599",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown",
      "blown in",
      "in the",
      "the point",
      "point x",
      "x y",
      "y param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion return",
      "return the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown"
    ],
    "Location": "TankBullet.java",
    "Content": "Get the explosion which would happen if the bullet was blown in the point (x, y) @param x x-coord of the point of the generated explosion @param y y-coord of the point of the generated explosion @return the explosion which would happen if the bullet was blown "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void draw(Graphics2D graphics)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "605-756",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the bullet",
      "bullet param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "TankBullet.java",
    "Content": "draw the bullet @param graphics the { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void update(long time)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "762-900",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the bullet",
      "bullet position",
      "position param",
      "param time",
      "time current",
      "current system",
      "system time",
      "time in",
      "in millis"
    ],
    "Location": "TankBullet.java",
    "Content": "Update the bullet position @param time current system time in millis "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX0()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "906-1021",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the initial",
      "initial x",
      "x cooord",
      "cooord return",
      "return the",
      "the initial",
      "initial x",
      "x cooord"
    ],
    "Location": "TankBullet.java",
    "Content": "get the initial x-cooord @return the initial x-cooord "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1027-1167",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current x-coord of the bullet @return the current x-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getY()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1173-1313",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current y-coord of the bullet @return the current y-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract BulletPackage getPackage()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1319-1495",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "form a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet",
      "bullet return",
      "return a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "form a { @link BulletPackage} based on this bullet @return a { @link BulletPackage} based on this bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "166-330",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the current",
      "current state",
      "state of",
      "of explosion",
      "explosion param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Explosion.java",
    "Content": "draw the current state of explosion @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean update(long currentTime)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "337-565",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the explosion",
      "explosion state",
      "state basically",
      "basically the",
      "the sound",
      "sound wave",
      "wave param",
      "param currentTime",
      "currentTime current",
      "current tyme",
      "tyme of",
      "of the",
      "the system",
      "system return",
      "return code",
      "code true",
      "true if",
      "if it",
      "it still",
      "still explodes"
    ],
    "Location": "Explosion.java",
    "Content": "Update the explosion state (basically the sound wave) @param currentTime current tyme of the system @return { @code true} if it still explodes "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean inAffectedZone(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "571-835",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone",
      "zone param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone"
    ],
    "Location": "Explosion.java",
    "Content": "Check if the point is in the affected zone @param x x-coord of the point @param y y-coord of the point @return { @code true} if the point is in the affected zone "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class NoExplosion extends Explosion ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "41-160",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Explosion mock",
      "mock which",
      "which is",
      "is not",
      "not drawn",
      "drawn but",
      "but has",
      "has the",
      "the affection",
      "affection radius"
    ],
    "Location": "NoExplosion.java",
    "Content": "Explosion-mock which is not drawn, but has the affection radius "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics, double angle, double x, double y) ",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "203-524",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the gun",
      "gun param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw into",
      "into param",
      "param angle",
      "angle the",
      "the angle",
      "angle for",
      "for gun",
      "gun to",
      "to be",
      "be placed",
      "placed param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun",
      "gun param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "draw the gun @param graphics the { @link Graphics2D} context to draw into @param angle the angle for gun to be placed @param x x-coord of the root of the gun @param y y-coord of the root of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected abstract Shape getShape()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1149-1315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the basic",
      "basic unrotated",
      "unrotated shape",
      "shape of",
      "of the",
      "the gun",
      "gun return",
      "return link",
      "link Shape",
      "Shape entity",
      "entity which",
      "which id",
      "id the",
      "the shape",
      "shape of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "get the basic unrotated shape of the gun @return { @link Shape} entity which id the shape of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankBullet getBullet(long startTime, double x0, double y0, double angle)",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1321-1704",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Produce a",
      "a bullet",
      "bullet param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the bullet",
      "bullet is",
      "is being",
      "being fired",
      "fired return",
      "return the",
      "the new",
      "new bullet"
    ],
    "Location": "TankGun.java",
    "Content": "Produce a bullet @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the bullet is being fired @return the new bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankGun getNextGun()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1710-1863",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns",
      "guns return",
      "return the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns"
    ],
    "Location": "TankGun.java",
    "Content": "Get the next gun in the list af all guns @return the next gun in the list af all guns "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1667-1803",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draws the",
      "the landscape",
      "landscape param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "Landscape.java",
    "Content": " draws the landscape @param graphics { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getY(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1896-2086",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface",
      "surface param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate for",
      "for which",
      "which we",
      "we need",
      "need its",
      "its height",
      "height return",
      "return y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface"
    ],
    "Location": "Landscape.java",
    "Content": "get the y-coordinate on the surface @param x x-coordinate for which we need its height @return y-coordinate on the surface "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getAngle(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2542-2919",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the angle",
      "angle of",
      "of the",
      "the surface",
      "surface where",
      "where x",
      "x coordinate",
      "coordinate is",
      "is code",
      "code x",
      "x code",
      "code param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate to",
      "to find",
      "find the",
      "the angle",
      "angle return",
      "return the",
      "the angle",
      "angle from",
      "from pi",
      "pi 2",
      "2 pi",
      "pi 2",
      "2 in",
      "in radians",
      "radians If",
      "If the",
      "the height",
      "height is",
      "is growing",
      "growing y",
      "y is",
      "is decreasing",
      "decreasing when",
      "when moving",
      "moving right",
      "right the",
      "the angle",
      "angle is",
      "is positive",
      "positive If",
      "If the",
      "the height",
      "height is",
      "is decreasing",
      "decreasing the",
      "the angle",
      "angle is",
      "is negative"
    ],
    "Location": "Landscape.java",
    "Content": "get the angle of the surface where x-coordinate is \u003ccode\u003ex\u003ccode\u003e @param x x-coordinate to find the angle @return the angle from [-pi2, pi2] in radians. If the heightis growing (y is decreasing) when moving right, the angle is positive.If the height is decreasing, the angle is negative. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInAir(double x, double y) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3209-3466",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground",
      "ground param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground"
    ],
    "Location": "Landscape.java",
    "Content": "Check if the point is over the ground @param x x-coord of the point to check @param y y-coord of the point to check @return { @code true} if the point is over the ground "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class BulletPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "321-523",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "BulletPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class OpponentFinder ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "201-351",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class responsible",
      "responsible for",
      "for connecting",
      "connecting to",
      "to the",
      "the opponent",
      "opponent It",
      "It starts",
      "starts the",
      "the game",
      "game when",
      "when the",
      "the connection",
      "connection is",
      "is established"
    ],
    "Location": "OpponentFinder.java",
    "Content": "The class responsible for connecting to the opponentIt starts the game when the connection is established "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Receiver implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "249-449",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It receives",
      "receives all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the opponent",
      "opponent and",
      "and synchronizes",
      "synchronizes the",
      "the scene",
      "scene according",
      "according to",
      "to it"
    ],
    "Location": "Receiver.java",
    "Content": "The class implementing the conversation to the opponent.It receives all the data from the opponent and synchronizes the scene according to it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Receiver(Tank opponent, TanksGame game, InputStream inputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "587-858",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param opponent",
      "opponent the",
      "the tank",
      "tank to",
      "to be",
      "be updated",
      "updated according",
      "according to",
      "to the",
      "the input",
      "input data",
      "data param",
      "param game",
      "game the",
      "the game",
      "game to",
      "to be",
      "be updated",
      "updated param",
      "param inputStream",
      "inputStream the",
      "the link",
      "link InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data"
    ],
    "Location": "Receiver.java",
    "Content": " @param opponent the tank to be updated according to the input data @param game the game to be updated @param inputStream the { @link InputStream} to get the data "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isDisconnected() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1088-1262",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has stopped",
      "stopped working",
      "working return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has terminated"
    ],
    "Location": "Receiver.java",
    "Content": "Checks if the { @code Receiver} has stopped working @return { @code true} if the { @code Receiver} has terminated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sender implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "265-437",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It gets",
      "gets all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the game",
      "game and",
      "and sends",
      "sends it",
      "it every",
      "every while"
    ],
    "Location": "Sender.java",
    "Content": "The class implementing the conversation to the opponent.It gets all the data from the game and sends it every while "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Sender(Tank tank, OutputStream outputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "542-750",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param tank",
      "tank the",
      "the tank",
      "tank which",
      "which position",
      "position is",
      "is needed",
      "needed to",
      "to be",
      "be sent",
      "sent param",
      "param outputStream",
      "outputStream the",
      "the code",
      "code OutputStream",
      "OutputStream to",
      "to put",
      "put all",
      "all the",
      "the data",
      "data in"
    ],
    "Location": "Sender.java",
    "Content": " @param tank the tank which position is needed to be sent @param outputStream the { @code OutputStream} to put all the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendBulletPackage(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "838-989",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent that",
      "that we",
      "we have",
      "have shot",
      "shot param",
      "param bullet",
      "bullet the",
      "the bullet",
      "bullet we",
      "we shot"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent that we have shot @param bullet the bullet we shot "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendGameEnded() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1450-1588",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent we",
      "we have",
      "have lost",
      "lost the",
      "the game",
      "game Triples",
      "Triples the",
      "the notification",
      "notification to",
      "to be",
      "be sure"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent we have lost the game.Triples the notification to be sure "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TankPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "38-238",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "TankPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isConnected() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "952-1145",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server",
      "server return",
      "return true",
      "true if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server"
    ],
    "Location": "TanksClient.java",
    "Content": "Checks if the client has successfully connected to the server @return { @true} if the client has successfully connected to the server "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public String getErrorMessage() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1185-1338",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "What went",
      "went wrong",
      "wrong if",
      "if something",
      "something did",
      "did return",
      "return the",
      "the message",
      "message with",
      "with the",
      "the description",
      "description of",
      "of the",
      "the error"
    ],
    "Location": "TanksClient.java",
    "Content": "What went wrong (if something did)? @return the message with the description of the error "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public InputStream getInput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1379-1534",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to send",
      "send some",
      "some data",
      "data to",
      "to the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to put",
      "put the",
      "the data",
      "data in"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to send some data to the server @return { @code InputStream} to put the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public OutputStream getOutput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1568-1728",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to get",
      "get some",
      "some data",
      "data from",
      "from the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data",
      "data from"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to get some data from the server @return { @code InputStream} to get the data from "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TanksServer implements Runnable ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "258-516",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A simple",
      "simple data",
      "data passing",
      "passing server",
      "server for",
      "for two",
      "two clients",
      "clients It",
      "It does",
      "does all",
      "all the",
      "the initial",
      "initial conversation",
      "conversation with",
      "with clients",
      "clients When",
      "When it",
      "it establishes",
      "establishes a",
      "a connection",
      "connection with",
      "with two",
      "two clients",
      "clients it",
      "it just",
      "just passes",
      "passes all",
      "all the",
      "the data",
      "data from",
      "from one",
      "one to",
      "to another"
    ],
    "Location": "TanksServer.java",
    "Content": "A simple data-passing server for two clients.It does all the initial conversation with clients.When it establishes a connection with two clients it just passes all the data from one to another "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank(Landscape land, boolean isOpponent, TanksGame game, TankGun gun, int xPos) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1140-1406",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new tank",
      "tank located",
      "located on",
      "on code",
      "code land",
      "land param",
      "param land",
      "land link",
      "link Landscape",
      "Landscape where",
      "where to",
      "to locate",
      "locate our",
      "our new",
      "new tank",
      "tank param",
      "param xPos",
      "xPos our",
      "our tank",
      "tank initial",
      "initial x",
      "x position"
    ],
    "Location": "Tank.java",
    "Content": "Creates new tank located on { @code land} @param land { @link Landscape}, where to locate our new tank @param xPos our tank initial x-position "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getX() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1558-1680",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank",
      "tank return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the tank @return the x-coordinate of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterX(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1713-2061",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the x-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterY(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2125-2473",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the y",
      "y coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the y",
      "y coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the y-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the y-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void shoot() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2975-3076",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a bullet",
      "bullet to",
      "to the",
      "the game",
      "game based",
      "based on",
      "on the",
      "the current",
      "current tank",
      "tank state"
    ],
    "Location": "Tank.java",
    "Content": "Add a bullet to the game based on the current tank state "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3542-3723",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the tank",
      "tank into",
      "into the",
      "the code",
      "code graphics",
      "graphics param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Tank.java",
    "Content": "draw the tank into the { @code graphics} @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void move(long ms) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "5591-5841",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update all",
      "all necessary",
      "necessary parameters",
      "parameters to",
      "to move",
      "move the",
      "the tank",
      "tank according",
      "according to",
      "to how",
      "how much",
      "much time",
      "time has",
      "has passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation param",
      "param ms",
      "ms time",
      "time passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation in",
      "in milliseconds"
    ],
    "Location": "Tank.java",
    "Content": "update all necessary parameters to move the tank according tohow much time has passed since the last updation @param ms time passed since the last updation in milliseconds "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized TankPackage getPosition() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7193-7408",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank",
      "tank return",
      "return the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "get the { @link TankPackage} object with actual data about the tank @return the { @link TankPackage} object with actual data about the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void updatePosition(TankPackage tankPackage) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7616-7933",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update position",
      "position based",
      "based on",
      "on the",
      "the code",
      "code tankPackage",
      "tankPackage while",
      "while our",
      "our tank",
      "tank is",
      "is updated",
      "updated based",
      "based on",
      "on key",
      "key presses",
      "presses the",
      "the opponent",
      "opponent one",
      "one is",
      "is updated",
      "updated by",
      "by calling",
      "calling this",
      "this method",
      "method param",
      "param tankPackage",
      "tankPackage information",
      "information about",
      "about the",
      "the new",
      "new position",
      "position of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "update position based on the { @code tankPackage}while our tank is updated based on key presses, the opponent one is updated by calling this method @param tankPackage information about the new position of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TanksGame(long startTime, boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1620-2092",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new code",
      "code TankGame",
      "TankGame with",
      "with 2",
      "2 tanks",
      "tanks with",
      "with x",
      "x coords",
      "coords set",
      "set to",
      "to 100",
      "100 and",
      "and to",
      "to 500",
      "500 respectively",
      "respectively param",
      "param startTime",
      "startTime System",
      "System time",
      "time when",
      "when the",
      "the game",
      "game is",
      "is being",
      "being init",
      "init param",
      "param isSecondPlayer",
      "isSecondPlayer code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are the",
      "the tank",
      "tank with",
      "with x",
      "x coord",
      "coord set",
      "set to",
      "to 500",
      "500 param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksGame.java",
    "Content": "Creates new { @code TankGame} with 2 tanks with x-coords set to 100 and to 500 respectively @param startTime System time when the game is being init @param isSecondPlayer { @code true} if we are the tank with x-coord set to 500 @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2944-3120",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered ours",
      "ours param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered ours @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addOpponentBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3256-3446",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered opponent\u0027s",
      "opponent\u0027s param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered opponent\u0027s @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void handleOpponentShoot(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3545-3882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A method",
      "method that",
      "that is",
      "is used",
      "used by",
      "by link",
      "link Receiver",
      "Receiver to",
      "to add",
      "add a",
      "a bullet",
      "bullet smartly",
      "smartly It",
      "It discards",
      "discards bad",
      "bad bullets",
      "bullets and",
      "and can",
      "can manually",
      "manually create",
      "create the",
      "the one",
      "one lost",
      "lost with",
      "with loosing",
      "loosing a",
      "a bit",
      "bit of",
      "of precision",
      "precision param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add",
      "add if",
      "if null",
      "null the",
      "the bullet",
      "bullet will",
      "will be",
      "be created",
      "created manually"
    ],
    "Location": "TanksGame.java",
    "Content": "A method that is used by { @link Receiver} to add a bullet smartlyIt discards bad bullets and can manually create the one lost with loosing a bit of precision @param bullet a bullet to add; if null, the bullet will be created manually "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void handleGunChanged() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4396-4497",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Used by",
      "by our",
      "our tank",
      "tank to",
      "to notify",
      "notify the",
      "the gun",
      "gun is",
      "is changed"
    ],
    "Location": "TanksGame.java",
    "Content": "Used by our tank to notify the gun is changed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public KeyListener getKeyListener() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4542-4710",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses",
      "presses return",
      "return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses"
    ],
    "Location": "TanksGame.java",
    "Content": "Return the tank that will handle with key presses @return the tank that will handle with key presses "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7591-7749",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Draw the",
      "the whole",
      "whole scene",
      "scene param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "TanksGame.java",
    "Content": "Draw the whole scene @param graphics { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean cycle(long time) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "8109-8283",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the scene",
      "scene param",
      "param time",
      "time current",
      "current time",
      "time in",
      "in millis",
      "millis return",
      "return code",
      "code true",
      "true if",
      "if there",
      "there is",
      "is anything",
      "anything to",
      "to update"
    ],
    "Location": "TanksGame.java",
    "Content": "Update the scene @param time current time in millis @return { @code true} if there is anything to update "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank getWinnerTank() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "9114-9278",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the winner",
      "winner tank",
      "tank Do",
      "Do not",
      "not use",
      "use when",
      "when the",
      "the game",
      "game is",
      "is not",
      "not finished",
      "finished return",
      "return the",
      "the tank",
      "tank which",
      "which won",
      "won the",
      "the game"
    ],
    "Location": "TanksGame.java",
    "Content": "Get the winner tankDo not use when the game is not finished. @return the tank which won the game "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isWaiting() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3162-3315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent",
      "opponent return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are waiting for an opponent @return { @code true} if we are waiting for an opponent "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInGame() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3375-3503",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are playing",
      "playing now",
      "now return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are playing",
      "playing now"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are playing now @return { @code true} if we are playing now "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void startGame(boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3554-3935",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a new",
      "new game",
      "game Expects",
      "Expects that",
      "that the",
      "the connection",
      "connection to",
      "to our",
      "our opponent",
      "opponent has",
      "has already",
      "already been",
      "been established",
      "established param",
      "param isSecondPlayer",
      "isSecondPlayer are",
      "are we",
      "we the",
      "the right",
      "right player",
      "player on",
      "on start",
      "start param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksPanel.java",
    "Content": "Start a new gameExpects that the connection to our opponent has already been established @param isSecondPlayer are we the right player on start? @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "1c820199fc3155c2949aaebe50ae7872883ab9e9",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2018-05-25T12:47:40Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw2.task2",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw2.task2",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected \u003cT extends Comparable\u003cT\u003e\u003e void swap(T[] array, int i, int j) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "116-456",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Swaps two",
      "two elements",
      "elements in",
      "in the",
      "the array",
      "array param",
      "param array",
      "array an",
      "an array",
      "array where",
      "where swapping",
      "swapping is",
      "is done",
      "done param",
      "param i",
      "i index",
      "index of",
      "of the",
      "the first",
      "first element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param j",
      "j index",
      "index of",
      "of the",
      "the second",
      "second element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "BaseSorter.java",
    "Content": "Swaps two elements in the array @param array an array where swapping is done @param i index of the first element in the array @param j index of the second element in the array @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT extends Comparable\u003cT\u003e\u003e boolean isSorted(T[] array) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "549-868",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether an",
      "an array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order",
      "order param",
      "param array",
      "array an",
      "an array",
      "array which",
      "which is",
      "is being",
      "being checked",
      "checked param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array",
      "array return",
      "return code",
      "code true",
      "true if",
      "if code",
      "code array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order"
    ],
    "Location": "BaseSorter.java",
    "Content": "Checks whether an array is sorted in ascending order @param array an array which is being checked @param \u003cT\u003e type of elements in the array @return { @code true} if { @code array} is sorted in ascending order "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "\u003cT extends Comparable\u003cT\u003e\u003e void sort(T[] array)",
    "Namespace": "sem2.hw3.task1",
    "Range": "105-334",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Sorts code",
      "code array",
      "array in",
      "in ascending",
      "ascending order",
      "order using",
      "using link",
      "link Comparable",
      "Comparable compareTo",
      "compareTo param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "Sorter.java",
    "Content": "Sorts { @code array} in ascending order using { @link Comparable#compareTo} @param array an array to sort @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ConsoleSpiralOutputter extends DefaultSpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "25-165",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Table spiral",
      "spiral outputter",
      "outputter using",
      "using link",
      "link System",
      "System out",
      "out as",
      "as a",
      "a destination"
    ],
    "Location": "ConsoleSpiralOutputter.java",
    "Content": " Table spiral outputter using { @link System#out} as a destination "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract class DefaultSpiralOutputter implements SpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "54-267",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Default SpiralOutputter",
      "SpiralOutputter implementation",
      "implementation Can",
      "Can output",
      "output a",
      "a table",
      "table to",
      "to any",
      "any link",
      "link PrintStream",
      "PrintStream including",
      "including System",
      "System out",
      "out and",
      "and any",
      "any file"
    ],
    "Location": "DefaultSpiralOutputter.java",
    "Content": "Default SpiralOutputter implementation.Can output a table to any { @link PrintStream}including System.out and any file."
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public FileSpiralOutputter(String fileName) throws FileNotFoundException ",
    "Namespace": "sem2.hw3.task2",
    "Range": "208-511",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates outputter",
      "outputter associated",
      "associated with",
      "with file",
      "file named",
      "named code",
      "code fileName",
      "fileName param",
      "param fileName",
      "fileName name",
      "name of",
      "of the",
      "the file",
      "file to",
      "to output",
      "output the",
      "the table",
      "table in",
      "in throws",
      "throws FileNotFoundException",
      "FileNotFoundException if",
      "if no",
      "no file",
      "file named",
      "named code",
      "code fileName",
      "fileName was",
      "was found"
    ],
    "Location": "FileSpiralOutputter.java",
    "Content": "Creates outputter associated with file named { @code fileName} @param fileName name of the file to output the table in @throws FileNotFoundException if no file named { @code fileName} was found "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void outputSpirally(int[][] table)",
    "Namespace": "sem2.hw3.task2",
    "Range": "114-241",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Outputs code",
      "code table",
      "table spirally",
      "spirally param",
      "param table",
      "table a",
      "a table",
      "table to",
      "to output"
    ],
    "Location": "SpiralOutputter.java",
    "Content": "Outputs { @code table} spirally @param table a table to output "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-134",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used for",
      "for providing",
      "providing some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashTable"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used for providing some hash function for { @link HashTable}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T key)",
    "Namespace": "sem2.hw4.task2",
    "Range": "139-357",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code key",
      "key Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashTable",
      "HashTable hashCount",
      "hashCount param",
      "param key",
      "key the",
      "the value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of the",
      "the code",
      "code key"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code key}.Should return an integer from 0 to { @link HashTable#hashCount}. @param key the value for hashing @return hash of the { @code key} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int getBadHash() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "288-420",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated",
      "generated return",
      "return bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": "Returns the bad hash that was generated. @return bad hash that was generated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashTable\u003cK, V\u003e implements Iterable\u003cV\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "122-428",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Hash table",
      "table that",
      "that allows",
      "allows adding",
      "adding values",
      "values of",
      "of the",
      "the type",
      "type code",
      "code V",
      "V associated",
      "associated with",
      "with keys",
      "keys of",
      "of the",
      "the type",
      "type code",
      "code K",
      "K Hash",
      "Hash function",
      "function should",
      "should be",
      "be provided",
      "provided by",
      "by client",
      "client an",
      "an can",
      "can be",
      "be changed",
      "changed in",
      "in runtime",
      "runtime param",
      "param K",
      "K the",
      "the type",
      "type of",
      "of keys",
      "keys param",
      "param V",
      "V the",
      "the type",
      "type of",
      "of values"
    ],
    "Location": "HashTable.java",
    "Content": "Hash table that allows adding values of the type { @code V} associated with keys of the type { @code K}Hash function should be provided by client an can be changed in runtime. @param \u003cK\u003e the type of keys @param \u003cV\u003e the type of values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void add(K key, V value) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2128-2520",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds the",
      "the code",
      "code value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key to",
      "to the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key for",
      "for the",
      "the value",
      "value to",
      "to be",
      "be associated",
      "associated with",
      "with param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be added",
      "added throws",
      "throws KeyAlreadyExistsException",
      "KeyAlreadyExistsException if",
      "if the",
      "the code",
      "code key",
      "key already",
      "already exists",
      "exists in",
      "in the",
      "the table",
      "table throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Adds the { @code value} associated with the { @code key} to the set. @param key the key for the value to be associated with @param value the value to be added @throws KeyAlreadyExistsException if the { @code key} already exists in the table @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2884-3195",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes the",
      "the value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key from",
      "from the",
      "the set",
      "set Does",
      "Does nothing",
      "nothing in",
      "in case",
      "case of",
      "of not",
      "not founding",
      "founding this",
      "this key",
      "key in",
      "in the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key to",
      "to be",
      "be removed",
      "removed with",
      "with its",
      "its value",
      "value throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Removes the value associated with the { @code key} from the set.Does nothing in case of not founding this key in the set. @param key the key to be removed with its value @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean doesContain(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "3622-3912",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the set",
      "set contains",
      "contains a",
      "a value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key param",
      "param key",
      "key the",
      "the value",
      "value to",
      "to search",
      "search for",
      "for return",
      "return true",
      "true if",
      "if code",
      "code key",
      "key was",
      "was found",
      "found throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Checks if the set contains a value associated with the { @code key}. @param key the value to search for @return true if { @code key} was found @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void setHasher(Hasher\u003cK\u003e newHasher) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "4258-4501",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Change used",
      "used hash",
      "hash function",
      "function param",
      "param newHasher",
      "newHasher object",
      "object that",
      "that implements",
      "implements link",
      "link Hasher",
      "Hasher interface",
      "interface throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Change used hash function. @param newHasher object that implements { @link Hasher} interface @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int size() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5083-5186",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Size of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Size of the set. @return number of objects in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double loadFactor() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5219-5370",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Load factor",
      "factor of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects divided",
      "divided by",
      "by number",
      "number of",
      "of different",
      "different hash",
      "hash values"
    ],
    "Location": "HashTable.java",
    "Content": "Load factor of the set. @return number of objects divided by number of different hash values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int maxListLength() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5420-5591",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set",
      "set return",
      "return the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Returns the length of the maximum-sized list in the set. @return the length of the maximum-sized list in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class KeyAlreadyExistsException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-203",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody wants",
      "wants to",
      "to link",
      "link sem2",
      "sem2 hw4",
      "hw4 task2",
      "task2 HashTable",
      "HashTable add",
      "add an",
      "an existing",
      "existing key",
      "key to",
      "to a",
      "a table"
    ],
    "Location": "KeyAlreadyExistsException.java",
    "Content": " An exception thrown if somebody wants to { @link sem2.hw4.task2.HashTable#add} an existing key to a table. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "106-233",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "239-359",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void remove(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "365-539",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list If",
      "If the",
      "the value",
      "value was",
      "was not",
      "not found",
      "found does",
      "does nothing",
      "nothing param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed"
    ],
    "Location": "List.java",
    "Content": "Removes { @code value} from the list.If the value was not found, does nothing. @param value the value to be removed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean doesContain(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "545-737",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value",
      "value param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to look",
      "look for",
      "for return",
      "return true",
      "true if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value"
    ],
    "Location": "List.java",
    "Content": "Checks if the list contains { @code value}. @param value the value to look for @return true if the list contains { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task2",
    "Range": "790-882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "Get the size of the list. @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task2",
    "Range": "888-1004",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "Checks whether our list is empty. @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class SinglyLinkedList\u003cT\u003e implements List\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "94-303",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Singly linked",
      "linked list",
      "list implementation",
      "implementation Can",
      "Can be",
      "be iterated",
      "iterated through",
      "through using",
      "using foreach",
      "foreach iterator",
      "iterator implementation",
      "implementation supports",
      "supports link",
      "link java",
      "java util",
      "util Iterator",
      "Iterator remove"
    ],
    "Location": "SinglyLinkedList.java",
    "Content": " Singly-linked list implementation.Can be iterated through using foreach, iterator implementationsupports { @link java.util.Iterator#remove}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task1",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task1",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class UniqueList\u003cT\u003e extends SinglyLinkedList\u003cT\u003e ",
    "Namespace": "sem2.hw4.task1",
    "Range": "53-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A list",
      "list where",
      "where every",
      "every element",
      "element could",
      "could be",
      "be present",
      "present only",
      "only once"
    ],
    "Location": "UniqueList.java",
    "Content": " A list where every element could be present only once "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addFirst(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "396-527",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already have",
      "have code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already have { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addLast(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "652-786",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already contains",
      "contains code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already contains { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "910-1129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed",
      "removed throws",
      "throws NoSuchElementException",
      "NoSuchElementException if",
      "if the",
      "the list",
      "list does",
      "does not",
      "not contain",
      "contain code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": "Removes { @code value} from the list @param value the value to be removed @throws NoSuchElementException if the list does not contain { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Expression(String expressionString) throws BadExpressionException ",
    "Namespace": "sem2.hw6.task1",
    "Range": "2059-2740",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates an",
      "an ExpressionTree",
      "ExpressionTree by",
      "by a",
      "a specially",
      "specially formatted",
      "formatted string",
      "string code",
      "code expressionString",
      "expressionString should",
      "should be",
      "be formatted",
      "formatted as",
      "as follows",
      "follows br",
      "br Expr",
      "Expr is",
      "is a",
      "a positive",
      "positive integer",
      "integer number",
      "number or",
      "or Op",
      "Op Expr",
      "Expr Expr",
      "Expr br",
      "br where",
      "where Op",
      "Op is",
      "is an",
      "an operation",
      "operation one",
      "one of",
      "of br",
      "br So",
      "So the",
      "the correctly",
      "correctly formatted",
      "formatted string",
      "string is",
      "is Expr",
      "Expr br",
      "br Examples",
      "Examples of",
      "of good",
      "good strings",
      "strings ul",
      "ul li",
      "li 123",
      "123 li",
      "li li",
      "li 2",
      "2 2",
      "2 li",
      "li li",
      "li 4",
      "4 6",
      "6 12",
      "12 li",
      "li ul",
      "ul param",
      "param expressionString",
      "expressionString the",
      "the formatted",
      "formatted string",
      "string throws",
      "throws BadExpressionException",
      "BadExpressionException if",
      "if code",
      "code expressionString",
      "expressionString is",
      "is not",
      "not formatted",
      "formatted properly"
    ],
    "Location": "Expression.java",
    "Content": " Creates an ExpressionTree by a specially-formatted string.{ @code expressionString} should be formatted as follows:\u003cbr\u003eExpr is a positive integer number or (Op Expr Expr)\u003cbr\u003ewhere Op is an operation -- one of (+, -, , ).\u003cbr\u003eSo the correctly-formatted string is Expr.\u003cbr\u003e Examples of good strings:\u003cul\u003e \u003cli\u003e123\u003cli\u003e \u003cli\u003e(+ 2 2)\u003cli\u003e \u003cli\u003e(- ( 4 6) 12)\u003cli\u003e\u003cul\u003e @param expressionString the formatted string @throws BadExpressionException if { @code expressionString} is not formatted properly "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used to",
      "to provide",
      "provide some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashSet"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used to provide some hash function for { @link HashSet}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T value)",
    "Namespace": "sem2.hw6.task2",
    "Range": "134-353",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code value",
      "value Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashSet",
      "HashSet HASH",
      "HASH COUNT",
      "COUNT param",
      "param value",
      "value a",
      "a value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of code",
      "code value"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code value}.Should return an integer from 0 to { @link HashSet#HASH_COUNT}. @param value a value for hashing @return hash of { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashSet\u003cT\u003e implements Set\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "46-187",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The set",
      "set that",
      "that groups",
      "groups its",
      "its elements",
      "elements by",
      "by their",
      "their hashes",
      "hashes so",
      "so it",
      "it becomes",
      "becomes easier",
      "easier to",
      "to find",
      "find one",
      "one of",
      "of them"
    ],
    "Location": "HashSet.java",
    "Content": " The set that groups its elements by their hashes so it becomes easier to find one of them. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public enum TurnResult ",
    "Namespace": "sem2.hw7.task2",
    "Range": "140-246",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The enumeration",
      "enumeration of",
      "of thing",
      "thing that",
      "that could",
      "could happen",
      "happen after",
      "after a",
      "a turn",
      "turn was",
      "was performed"
    ],
    "Location": "TicTacToe.java",
    "Content": " The enumeration of thing that could happen after a turn was performed. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TicTacToe(int N) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1159-1279",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a game",
      "game with",
      "with field",
      "field side",
      "side size",
      "size code",
      "code N",
      "N param",
      "param N",
      "N field",
      "field side",
      "side size"
    ],
    "Location": "TicTacToe.java",
    "Content": " Start a game with field side size \u003d { @code N}. @param N field side size "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TurnResult makeTurn(int i, int j) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1492-1804",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Place next",
      "next cross",
      "cross or",
      "or zero",
      "zero to",
      "to the",
      "the code",
      "code i",
      "i code",
      "code j",
      "j cell",
      "cell param",
      "param i",
      "i the",
      "the row",
      "row where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero param",
      "param j",
      "j the",
      "the column",
      "column where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero return",
      "return An",
      "An link",
      "link TurnResult",
      "TurnResult entity",
      "entity see",
      "see TurnResult"
    ],
    "Location": "TicTacToe.java",
    "Content": " Place next cross or zero to the ({ @code i}, { @code j}) cell. @param i the row where to put the next cross or zero. @param j the column where to put the next cross or zero. @return An { @link TurnResult} entity. @see TurnResult "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ClassPrinter ",
    "Namespace": "sem2.hw7.task1",
    "Range": "54-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that can",
      "can output",
      "output some",
      "some RTTI",
      "RTTI Instead",
      "Instead of",
      "of standard",
      "standard testing",
      "testing which",
      "which is",
      "is inconvenient",
      "inconvenient here",
      "here one",
      "one can",
      "can pass",
      "pass different",
      "different classes",
      "classes into",
      "into print",
      "print statement",
      "statement in",
      "in main",
      "main Some",
      "Some classes",
      "classes to",
      "to check",
      "check are",
      "are declared",
      "declared below",
      "below standard",
      "standard library",
      "library could",
      "could also",
      "also be",
      "be used"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The class that can output some RTTI.Instead of standard testing, which is inconvenient here,one can pass different classes into print() statement in main().Some classes to check are declared below, standard library could also be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static void print(Class\u003c?\u003e clazz) ",
    "Namespace": "sem2.hw7.task1",
    "Range": "6219-6413",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The method",
      "method that",
      "that prints",
      "prints some",
      "some RTTI",
      "RTTI Works",
      "Works with",
      "with classes",
      "classes interfaces",
      "interfaces and",
      "and enums",
      "enums param",
      "param clazz",
      "clazz a",
      "a class",
      "class to",
      "to learn",
      "learn something",
      "something about"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The method that prints some RTTI.Works with classes, interfaces and enums. @param clazz a class to learn something about "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sorters\u003cT extends Comparable\u003cT\u003e\u003e extends RecursiveAction ",
    "Namespace": "sem2.hw8.task2",
    "Range": "141-300",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that provides",
      "provides parallel",
      "parallel and",
      "and non",
      "non parallel",
      "parallel quicksort",
      "quicksort implementations"
    ],
    "Location": "Sorters.java",
    "Content": "The class that provides parallel and non-parallel quicksort implementations. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void parallelSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "951-1211",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList using",
      "using multiple",
      "multiple threads",
      "threads param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} using multiple threads. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void singleThreadSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "1398-1662",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList without",
      "without multithreading",
      "multithreading param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} without multithreading. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class EmptyQueueException extends Exception ",
    "Namespace": "sem2.test1.task1",
    "Range": "27-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "an exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody was",
      "was trying",
      "trying to",
      "to remove",
      "remove an",
      "an element",
      "element form",
      "form an",
      "an empty",
      "empty queue"
    ],
    "Location": "EmptyQueueException.java",
    "Content": " an exception thrown if somebody was trying to remove an element form an empty queue "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void enqueue(T element, int priority)",
    "Namespace": "sem2.test1.task1",
    "Range": "133-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Put an",
      "an code",
      "code element",
      "element with",
      "with code",
      "code priority",
      "priority into",
      "into the",
      "the queue",
      "queue param",
      "param element",
      "element value",
      "value to",
      "to be",
      "be put",
      "put into",
      "into the",
      "the queue",
      "queue param",
      "param priority",
      "priority its",
      "its priority"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Put an { @code element} with { @code priority} into the queue @param element value to be put into the queue @param priority its priority "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "T dequeue() throws EmptyQueueException",
    "Namespace": "sem2.test1.task1",
    "Range": "342-580",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get an",
      "an element",
      "element with",
      "with maximum",
      "maximum priority",
      "priority from",
      "from the",
      "the queue",
      "queue and",
      "and remove",
      "remove it",
      "it throws",
      "throws EmptyQueueException",
      "EmptyQueueException if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty and",
      "and there",
      "there is",
      "is nothing",
      "nothing to",
      "to return",
      "return return",
      "return removed",
      "removed value"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Get an element with maximum priority from the queue and remove it @throws EmptyQueueException if the queue is empty and there is nothing to return @return removed value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.test1.task1",
    "Range": "586-691",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if the",
      "the queue",
      "queue is",
      "is empty"
    ],
    "Location": "PriorityQueue.java",
    "Content": " checks if the queue is empty @return true if the queue is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public CannonBall(long startTime, double x0, double y0, double angle) ",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "703-1073",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Create a",
      "a bullet",
      "bullet with",
      "with all",
      "all necessary",
      "necessary initial",
      "initial parameters",
      "parameters param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the ball",
      "ball is",
      "is being",
      "being fired"
    ],
    "Location": "CannonBall.java",
    "Content": "Create a bullet with all necessary initial parameters @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the ball is being fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract Explosion getExplosion(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "236-599",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown",
      "blown in",
      "in the",
      "the point",
      "point x",
      "x y",
      "y param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion return",
      "return the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown"
    ],
    "Location": "TankBullet.java",
    "Content": "Get the explosion which would happen if the bullet was blown in the point (x, y) @param x x-coord of the point of the generated explosion @param y y-coord of the point of the generated explosion @return the explosion which would happen if the bullet was blown "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void draw(Graphics2D graphics)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "605-756",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the bullet",
      "bullet param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "TankBullet.java",
    "Content": "draw the bullet @param graphics the { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void update(long time)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "762-900",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the bullet",
      "bullet position",
      "position param",
      "param time",
      "time current",
      "current system",
      "system time",
      "time in",
      "in millis"
    ],
    "Location": "TankBullet.java",
    "Content": "Update the bullet position @param time current system time in millis "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX0()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "906-1021",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the initial",
      "initial x",
      "x cooord",
      "cooord return",
      "return the",
      "the initial",
      "initial x",
      "x cooord"
    ],
    "Location": "TankBullet.java",
    "Content": "get the initial x-cooord @return the initial x-cooord "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1027-1167",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current x-coord of the bullet @return the current x-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getY()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1173-1313",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current y-coord of the bullet @return the current y-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract BulletPackage getPackage()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1319-1495",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "form a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet",
      "bullet return",
      "return a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "form a { @link BulletPackage} based on this bullet @return a { @link BulletPackage} based on this bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "166-330",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the current",
      "current state",
      "state of",
      "of explosion",
      "explosion param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Explosion.java",
    "Content": "draw the current state of explosion @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean update(long currentTime)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "337-565",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the explosion",
      "explosion state",
      "state basically",
      "basically the",
      "the sound",
      "sound wave",
      "wave param",
      "param currentTime",
      "currentTime current",
      "current tyme",
      "tyme of",
      "of the",
      "the system",
      "system return",
      "return code",
      "code true",
      "true if",
      "if it",
      "it still",
      "still explodes"
    ],
    "Location": "Explosion.java",
    "Content": "Update the explosion state (basically the sound wave) @param currentTime current tyme of the system @return { @code true} if it still explodes "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean inAffectedZone(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "571-835",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone",
      "zone param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone"
    ],
    "Location": "Explosion.java",
    "Content": "Check if the point is in the affected zone @param x x-coord of the point @param y y-coord of the point @return { @code true} if the point is in the affected zone "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class NoExplosion extends Explosion ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "41-160",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Explosion mock",
      "mock which",
      "which is",
      "is not",
      "not drawn",
      "drawn but",
      "but has",
      "has the",
      "the affection",
      "affection radius"
    ],
    "Location": "NoExplosion.java",
    "Content": "Explosion-mock which is not drawn, but has the affection radius "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics, double angle, double x, double y) ",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "203-524",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the gun",
      "gun param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw into",
      "into param",
      "param angle",
      "angle the",
      "the angle",
      "angle for",
      "for gun",
      "gun to",
      "to be",
      "be placed",
      "placed param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun",
      "gun param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "draw the gun @param graphics the { @link Graphics2D} context to draw into @param angle the angle for gun to be placed @param x x-coord of the root of the gun @param y y-coord of the root of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected abstract Shape getShape()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1149-1315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the basic",
      "basic unrotated",
      "unrotated shape",
      "shape of",
      "of the",
      "the gun",
      "gun return",
      "return link",
      "link Shape",
      "Shape entity",
      "entity which",
      "which id",
      "id the",
      "the shape",
      "shape of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "get the basic unrotated shape of the gun @return { @link Shape} entity which id the shape of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankBullet getBullet(long startTime, double x0, double y0, double angle)",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1321-1704",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Produce a",
      "a bullet",
      "bullet param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the bullet",
      "bullet is",
      "is being",
      "being fired",
      "fired return",
      "return the",
      "the new",
      "new bullet"
    ],
    "Location": "TankGun.java",
    "Content": "Produce a bullet @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the bullet is being fired @return the new bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankGun getNextGun()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1710-1863",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns",
      "guns return",
      "return the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns"
    ],
    "Location": "TankGun.java",
    "Content": "Get the next gun in the list af all guns @return the next gun in the list af all guns "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1667-1803",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draws the",
      "the landscape",
      "landscape param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "Landscape.java",
    "Content": " draws the landscape @param graphics { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getY(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1896-2086",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface",
      "surface param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate for",
      "for which",
      "which we",
      "we need",
      "need its",
      "its height",
      "height return",
      "return y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface"
    ],
    "Location": "Landscape.java",
    "Content": "get the y-coordinate on the surface @param x x-coordinate for which we need its height @return y-coordinate on the surface "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getAngle(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2542-2919",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the angle",
      "angle of",
      "of the",
      "the surface",
      "surface where",
      "where x",
      "x coordinate",
      "coordinate is",
      "is code",
      "code x",
      "x code",
      "code param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate to",
      "to find",
      "find the",
      "the angle",
      "angle return",
      "return the",
      "the angle",
      "angle from",
      "from pi",
      "pi 2",
      "2 pi",
      "pi 2",
      "2 in",
      "in radians",
      "radians If",
      "If the",
      "the height",
      "height is",
      "is growing",
      "growing y",
      "y is",
      "is decreasing",
      "decreasing when",
      "when moving",
      "moving right",
      "right the",
      "the angle",
      "angle is",
      "is positive",
      "positive If",
      "If the",
      "the height",
      "height is",
      "is decreasing",
      "decreasing the",
      "the angle",
      "angle is",
      "is negative"
    ],
    "Location": "Landscape.java",
    "Content": "get the angle of the surface where x-coordinate is \u003ccode\u003ex\u003ccode\u003e @param x x-coordinate to find the angle @return the angle from [-pi2, pi2] in radians. If the heightis growing (y is decreasing) when moving right, the angle is positive.If the height is decreasing, the angle is negative. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInAir(double x, double y) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3209-3466",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground",
      "ground param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground"
    ],
    "Location": "Landscape.java",
    "Content": "Check if the point is over the ground @param x x-coord of the point to check @param y y-coord of the point to check @return { @code true} if the point is over the ground "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class BulletPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "321-523",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "BulletPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class OpponentFinder ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "201-351",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class responsible",
      "responsible for",
      "for connecting",
      "connecting to",
      "to the",
      "the opponent",
      "opponent It",
      "It starts",
      "starts the",
      "the game",
      "game when",
      "when the",
      "the connection",
      "connection is",
      "is established"
    ],
    "Location": "OpponentFinder.java",
    "Content": "The class responsible for connecting to the opponentIt starts the game when the connection is established "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Receiver implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "249-449",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It receives",
      "receives all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the opponent",
      "opponent and",
      "and synchronizes",
      "synchronizes the",
      "the scene",
      "scene according",
      "according to",
      "to it"
    ],
    "Location": "Receiver.java",
    "Content": "The class implementing the conversation to the opponent.It receives all the data from the opponent and synchronizes the scene according to it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Receiver(Tank opponent, TanksGame game, InputStream inputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "587-858",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param opponent",
      "opponent the",
      "the tank",
      "tank to",
      "to be",
      "be updated",
      "updated according",
      "according to",
      "to the",
      "the input",
      "input data",
      "data param",
      "param game",
      "game the",
      "the game",
      "game to",
      "to be",
      "be updated",
      "updated param",
      "param inputStream",
      "inputStream the",
      "the link",
      "link InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data"
    ],
    "Location": "Receiver.java",
    "Content": " @param opponent the tank to be updated according to the input data @param game the game to be updated @param inputStream the { @link InputStream} to get the data "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isDisconnected() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1088-1262",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has stopped",
      "stopped working",
      "working return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has terminated"
    ],
    "Location": "Receiver.java",
    "Content": "Checks if the { @code Receiver} has stopped working @return { @code true} if the { @code Receiver} has terminated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sender implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "265-437",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It gets",
      "gets all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the game",
      "game and",
      "and sends",
      "sends it",
      "it every",
      "every while"
    ],
    "Location": "Sender.java",
    "Content": "The class implementing the conversation to the opponent.It gets all the data from the game and sends it every while "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Sender(Tank tank, OutputStream outputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "542-750",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param tank",
      "tank the",
      "the tank",
      "tank which",
      "which position",
      "position is",
      "is needed",
      "needed to",
      "to be",
      "be sent",
      "sent param",
      "param outputStream",
      "outputStream the",
      "the code",
      "code OutputStream",
      "OutputStream to",
      "to put",
      "put all",
      "all the",
      "the data",
      "data in"
    ],
    "Location": "Sender.java",
    "Content": " @param tank the tank which position is needed to be sent @param outputStream the { @code OutputStream} to put all the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendBulletPackage(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "838-989",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent that",
      "that we",
      "we have",
      "have shot",
      "shot param",
      "param bullet",
      "bullet the",
      "the bullet",
      "bullet we",
      "we shot"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent that we have shot @param bullet the bullet we shot "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendGameEnded() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1450-1588",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent we",
      "we have",
      "have lost",
      "lost the",
      "the game",
      "game Triples",
      "Triples the",
      "the notification",
      "notification to",
      "to be",
      "be sure"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent we have lost the game.Triples the notification to be sure "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TankPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "38-238",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "TankPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isConnected() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "952-1145",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server",
      "server return",
      "return true",
      "true if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server"
    ],
    "Location": "TanksClient.java",
    "Content": "Checks if the client has successfully connected to the server @return { @true} if the client has successfully connected to the server "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public String getErrorMessage() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1185-1338",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "What went",
      "went wrong",
      "wrong if",
      "if something",
      "something did",
      "did return",
      "return the",
      "the message",
      "message with",
      "with the",
      "the description",
      "description of",
      "of the",
      "the error"
    ],
    "Location": "TanksClient.java",
    "Content": "What went wrong (if something did)? @return the message with the description of the error "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public InputStream getInput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1379-1534",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to send",
      "send some",
      "some data",
      "data to",
      "to the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to put",
      "put the",
      "the data",
      "data in"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to send some data to the server @return { @code InputStream} to put the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public OutputStream getOutput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1568-1728",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to get",
      "get some",
      "some data",
      "data from",
      "from the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data",
      "data from"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to get some data from the server @return { @code InputStream} to get the data from "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TanksServer implements Runnable ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "258-516",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A simple",
      "simple data",
      "data passing",
      "passing server",
      "server for",
      "for two",
      "two clients",
      "clients It",
      "It does",
      "does all",
      "all the",
      "the initial",
      "initial conversation",
      "conversation with",
      "with clients",
      "clients When",
      "When it",
      "it establishes",
      "establishes a",
      "a connection",
      "connection with",
      "with two",
      "two clients",
      "clients it",
      "it just",
      "just passes",
      "passes all",
      "all the",
      "the data",
      "data from",
      "from one",
      "one to",
      "to another"
    ],
    "Location": "TanksServer.java",
    "Content": "A simple data-passing server for two clients.It does all the initial conversation with clients.When it establishes a connection with two clients it just passes all the data from one to another "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank(Landscape land, boolean isOpponent, TanksGame game, TankGun gun, int xPos) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1140-1406",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new tank",
      "tank located",
      "located on",
      "on code",
      "code land",
      "land param",
      "param land",
      "land link",
      "link Landscape",
      "Landscape where",
      "where to",
      "to locate",
      "locate our",
      "our new",
      "new tank",
      "tank param",
      "param xPos",
      "xPos our",
      "our tank",
      "tank initial",
      "initial x",
      "x position"
    ],
    "Location": "Tank.java",
    "Content": "Creates new tank located on { @code land} @param land { @link Landscape}, where to locate our new tank @param xPos our tank initial x-position "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getX() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1558-1680",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank",
      "tank return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the tank @return the x-coordinate of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterX(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1713-2061",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the x-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterY(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2125-2473",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the y",
      "y coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the y",
      "y coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the y-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the y-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void shoot() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2975-3076",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a bullet",
      "bullet to",
      "to the",
      "the game",
      "game based",
      "based on",
      "on the",
      "the current",
      "current tank",
      "tank state"
    ],
    "Location": "Tank.java",
    "Content": "Add a bullet to the game based on the current tank state "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3542-3723",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the tank",
      "tank into",
      "into the",
      "the code",
      "code graphics",
      "graphics param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Tank.java",
    "Content": "draw the tank into the { @code graphics} @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void move(long ms) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "5591-5841",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update all",
      "all necessary",
      "necessary parameters",
      "parameters to",
      "to move",
      "move the",
      "the tank",
      "tank according",
      "according to",
      "to how",
      "how much",
      "much time",
      "time has",
      "has passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation param",
      "param ms",
      "ms time",
      "time passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation in",
      "in milliseconds"
    ],
    "Location": "Tank.java",
    "Content": "update all necessary parameters to move the tank according tohow much time has passed since the last updation @param ms time passed since the last updation in milliseconds "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized TankPackage getPosition() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7193-7408",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank",
      "tank return",
      "return the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "get the { @link TankPackage} object with actual data about the tank @return the { @link TankPackage} object with actual data about the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void updatePosition(TankPackage tankPackage) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7616-7933",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update position",
      "position based",
      "based on",
      "on the",
      "the code",
      "code tankPackage",
      "tankPackage while",
      "while our",
      "our tank",
      "tank is",
      "is updated",
      "updated based",
      "based on",
      "on key",
      "key presses",
      "presses the",
      "the opponent",
      "opponent one",
      "one is",
      "is updated",
      "updated by",
      "by calling",
      "calling this",
      "this method",
      "method param",
      "param tankPackage",
      "tankPackage information",
      "information about",
      "about the",
      "the new",
      "new position",
      "position of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "update position based on the { @code tankPackage}while our tank is updated based on key presses, the opponent one is updated by calling this method @param tankPackage information about the new position of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TanksGame(long startTime, boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1620-2092",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new code",
      "code TankGame",
      "TankGame with",
      "with 2",
      "2 tanks",
      "tanks with",
      "with x",
      "x coords",
      "coords set",
      "set to",
      "to 100",
      "100 and",
      "and to",
      "to 500",
      "500 respectively",
      "respectively param",
      "param startTime",
      "startTime System",
      "System time",
      "time when",
      "when the",
      "the game",
      "game is",
      "is being",
      "being init",
      "init param",
      "param isSecondPlayer",
      "isSecondPlayer code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are the",
      "the tank",
      "tank with",
      "with x",
      "x coord",
      "coord set",
      "set to",
      "to 500",
      "500 param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksGame.java",
    "Content": "Creates new { @code TankGame} with 2 tanks with x-coords set to 100 and to 500 respectively @param startTime System time when the game is being init @param isSecondPlayer { @code true} if we are the tank with x-coord set to 500 @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2944-3120",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered ours",
      "ours param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered ours @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addOpponentBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3256-3446",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered opponent\u0027s",
      "opponent\u0027s param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered opponent\u0027s @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void handleOpponentShoot(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3545-3882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A method",
      "method that",
      "that is",
      "is used",
      "used by",
      "by link",
      "link Receiver",
      "Receiver to",
      "to add",
      "add a",
      "a bullet",
      "bullet smartly",
      "smartly It",
      "It discards",
      "discards bad",
      "bad bullets",
      "bullets and",
      "and can",
      "can manually",
      "manually create",
      "create the",
      "the one",
      "one lost",
      "lost with",
      "with loosing",
      "loosing a",
      "a bit",
      "bit of",
      "of precision",
      "precision param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add",
      "add if",
      "if null",
      "null the",
      "the bullet",
      "bullet will",
      "will be",
      "be created",
      "created manually"
    ],
    "Location": "TanksGame.java",
    "Content": "A method that is used by { @link Receiver} to add a bullet smartlyIt discards bad bullets and can manually create the one lost with loosing a bit of precision @param bullet a bullet to add; if null, the bullet will be created manually "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void handleGunChanged() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4396-4497",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Used by",
      "by our",
      "our tank",
      "tank to",
      "to notify",
      "notify the",
      "the gun",
      "gun is",
      "is changed"
    ],
    "Location": "TanksGame.java",
    "Content": "Used by our tank to notify the gun is changed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public KeyListener getKeyListener() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4542-4710",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses",
      "presses return",
      "return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses"
    ],
    "Location": "TanksGame.java",
    "Content": "Return the tank that will handle with key presses @return the tank that will handle with key presses "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7591-7749",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Draw the",
      "the whole",
      "whole scene",
      "scene param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "TanksGame.java",
    "Content": "Draw the whole scene @param graphics { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean cycle(long time) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "8109-8283",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the scene",
      "scene param",
      "param time",
      "time current",
      "current time",
      "time in",
      "in millis",
      "millis return",
      "return code",
      "code true",
      "true if",
      "if there",
      "there is",
      "is anything",
      "anything to",
      "to update"
    ],
    "Location": "TanksGame.java",
    "Content": "Update the scene @param time current time in millis @return { @code true} if there is anything to update "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank getWinnerTank() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "9114-9278",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the winner",
      "winner tank",
      "tank Do",
      "Do not",
      "not use",
      "use when",
      "when the",
      "the game",
      "game is",
      "is not",
      "not finished",
      "finished return",
      "return the",
      "the tank",
      "tank which",
      "which won",
      "won the",
      "the game"
    ],
    "Location": "TanksGame.java",
    "Content": "Get the winner tankDo not use when the game is not finished. @return the tank which won the game "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isWaiting() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3162-3315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent",
      "opponent return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are waiting for an opponent @return { @code true} if we are waiting for an opponent "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInGame() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3375-3503",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are playing",
      "playing now",
      "now return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are playing",
      "playing now"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are playing now @return { @code true} if we are playing now "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void startGame(boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3554-3935",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a new",
      "new game",
      "game Expects",
      "Expects that",
      "that the",
      "the connection",
      "connection to",
      "to our",
      "our opponent",
      "opponent has",
      "has already",
      "already been",
      "been established",
      "established param",
      "param isSecondPlayer",
      "isSecondPlayer are",
      "are we",
      "we the",
      "the right",
      "right player",
      "player on",
      "on start",
      "start param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksPanel.java",
    "Content": "Start a new gameExpects that the connection to our opponent has already been established @param isSecondPlayer are we the right player on start? @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "1c820199fc3155c2949aaebe50ae7872883ab9e9",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2018-05-25T12:47:40Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw2.task2",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw2.task2",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected \u003cT extends Comparable\u003cT\u003e\u003e void swap(T[] array, int i, int j) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "116-456",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Swaps two",
      "two elements",
      "elements in",
      "in the",
      "the array",
      "array param",
      "param array",
      "array an",
      "an array",
      "array where",
      "where swapping",
      "swapping is",
      "is done",
      "done param",
      "param i",
      "i index",
      "index of",
      "of the",
      "the first",
      "first element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param j",
      "j index",
      "index of",
      "of the",
      "the second",
      "second element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "BaseSorter.java",
    "Content": "Swaps two elements in the array @param array an array where swapping is done @param i index of the first element in the array @param j index of the second element in the array @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT extends Comparable\u003cT\u003e\u003e boolean isSorted(T[] array) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "549-868",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether an",
      "an array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order",
      "order param",
      "param array",
      "array an",
      "an array",
      "array which",
      "which is",
      "is being",
      "being checked",
      "checked param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array",
      "array return",
      "return code",
      "code true",
      "true if",
      "if code",
      "code array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order"
    ],
    "Location": "BaseSorter.java",
    "Content": "Checks whether an array is sorted in ascending order @param array an array which is being checked @param \u003cT\u003e type of elements in the array @return { @code true} if { @code array} is sorted in ascending order "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "\u003cT extends Comparable\u003cT\u003e\u003e void sort(T[] array)",
    "Namespace": "sem2.hw3.task1",
    "Range": "105-334",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Sorts code",
      "code array",
      "array in",
      "in ascending",
      "ascending order",
      "order using",
      "using link",
      "link Comparable",
      "Comparable compareTo",
      "compareTo param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "Sorter.java",
    "Content": "Sorts { @code array} in ascending order using { @link Comparable#compareTo} @param array an array to sort @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ConsoleSpiralOutputter extends DefaultSpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "25-165",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Table spiral",
      "spiral outputter",
      "outputter using",
      "using link",
      "link System",
      "System out",
      "out as",
      "as a",
      "a destination"
    ],
    "Location": "ConsoleSpiralOutputter.java",
    "Content": " Table spiral outputter using { @link System#out} as a destination "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract class DefaultSpiralOutputter implements SpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "54-267",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Default SpiralOutputter",
      "SpiralOutputter implementation",
      "implementation Can",
      "Can output",
      "output a",
      "a table",
      "table to",
      "to any",
      "any link",
      "link PrintStream",
      "PrintStream including",
      "including System",
      "System out",
      "out and",
      "and any",
      "any file"
    ],
    "Location": "DefaultSpiralOutputter.java",
    "Content": "Default SpiralOutputter implementation.Can output a table to any { @link PrintStream}including System.out and any file."
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public FileSpiralOutputter(String fileName) throws FileNotFoundException ",
    "Namespace": "sem2.hw3.task2",
    "Range": "208-511",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates outputter",
      "outputter associated",
      "associated with",
      "with file",
      "file named",
      "named code",
      "code fileName",
      "fileName param",
      "param fileName",
      "fileName name",
      "name of",
      "of the",
      "the file",
      "file to",
      "to output",
      "output the",
      "the table",
      "table in",
      "in throws",
      "throws FileNotFoundException",
      "FileNotFoundException if",
      "if no",
      "no file",
      "file named",
      "named code",
      "code fileName",
      "fileName was",
      "was found"
    ],
    "Location": "FileSpiralOutputter.java",
    "Content": "Creates outputter associated with file named { @code fileName} @param fileName name of the file to output the table in @throws FileNotFoundException if no file named { @code fileName} was found "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void outputSpirally(int[][] table)",
    "Namespace": "sem2.hw3.task2",
    "Range": "114-241",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Outputs code",
      "code table",
      "table spirally",
      "spirally param",
      "param table",
      "table a",
      "a table",
      "table to",
      "to output"
    ],
    "Location": "SpiralOutputter.java",
    "Content": "Outputs { @code table} spirally @param table a table to output "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-134",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used for",
      "for providing",
      "providing some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashTable"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used for providing some hash function for { @link HashTable}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T key)",
    "Namespace": "sem2.hw4.task2",
    "Range": "139-357",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code key",
      "key Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashTable",
      "HashTable hashCount",
      "hashCount param",
      "param key",
      "key the",
      "the value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of the",
      "the code",
      "code key"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code key}.Should return an integer from 0 to { @link HashTable#hashCount}. @param key the value for hashing @return hash of the { @code key} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int getBadHash() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "288-420",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated",
      "generated return",
      "return bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": "Returns the bad hash that was generated. @return bad hash that was generated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashTable\u003cK, V\u003e implements Iterable\u003cV\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "122-428",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Hash table",
      "table that",
      "that allows",
      "allows adding",
      "adding values",
      "values of",
      "of the",
      "the type",
      "type code",
      "code V",
      "V associated",
      "associated with",
      "with keys",
      "keys of",
      "of the",
      "the type",
      "type code",
      "code K",
      "K Hash",
      "Hash function",
      "function should",
      "should be",
      "be provided",
      "provided by",
      "by client",
      "client an",
      "an can",
      "can be",
      "be changed",
      "changed in",
      "in runtime",
      "runtime param",
      "param K",
      "K the",
      "the type",
      "type of",
      "of keys",
      "keys param",
      "param V",
      "V the",
      "the type",
      "type of",
      "of values"
    ],
    "Location": "HashTable.java",
    "Content": "Hash table that allows adding values of the type { @code V} associated with keys of the type { @code K}Hash function should be provided by client an can be changed in runtime. @param \u003cK\u003e the type of keys @param \u003cV\u003e the type of values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void add(K key, V value) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2128-2520",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds the",
      "the code",
      "code value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key to",
      "to the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key for",
      "for the",
      "the value",
      "value to",
      "to be",
      "be associated",
      "associated with",
      "with param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be added",
      "added throws",
      "throws KeyAlreadyExistsException",
      "KeyAlreadyExistsException if",
      "if the",
      "the code",
      "code key",
      "key already",
      "already exists",
      "exists in",
      "in the",
      "the table",
      "table throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Adds the { @code value} associated with the { @code key} to the set. @param key the key for the value to be associated with @param value the value to be added @throws KeyAlreadyExistsException if the { @code key} already exists in the table @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2884-3195",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes the",
      "the value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key from",
      "from the",
      "the set",
      "set Does",
      "Does nothing",
      "nothing in",
      "in case",
      "case of",
      "of not",
      "not founding",
      "founding this",
      "this key",
      "key in",
      "in the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key to",
      "to be",
      "be removed",
      "removed with",
      "with its",
      "its value",
      "value throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Removes the value associated with the { @code key} from the set.Does nothing in case of not founding this key in the set. @param key the key to be removed with its value @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean doesContain(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "3622-3912",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the set",
      "set contains",
      "contains a",
      "a value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key param",
      "param key",
      "key the",
      "the value",
      "value to",
      "to search",
      "search for",
      "for return",
      "return true",
      "true if",
      "if code",
      "code key",
      "key was",
      "was found",
      "found throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Checks if the set contains a value associated with the { @code key}. @param key the value to search for @return true if { @code key} was found @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void setHasher(Hasher\u003cK\u003e newHasher) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "4258-4501",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Change used",
      "used hash",
      "hash function",
      "function param",
      "param newHasher",
      "newHasher object",
      "object that",
      "that implements",
      "implements link",
      "link Hasher",
      "Hasher interface",
      "interface throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Change used hash function. @param newHasher object that implements { @link Hasher} interface @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int size() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5083-5186",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Size of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Size of the set. @return number of objects in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double loadFactor() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5219-5370",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Load factor",
      "factor of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects divided",
      "divided by",
      "by number",
      "number of",
      "of different",
      "different hash",
      "hash values"
    ],
    "Location": "HashTable.java",
    "Content": "Load factor of the set. @return number of objects divided by number of different hash values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int maxListLength() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5420-5591",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set",
      "set return",
      "return the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Returns the length of the maximum-sized list in the set. @return the length of the maximum-sized list in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class KeyAlreadyExistsException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-203",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody wants",
      "wants to",
      "to link",
      "link sem2",
      "sem2 hw4",
      "hw4 task2",
      "task2 HashTable",
      "HashTable add",
      "add an",
      "an existing",
      "existing key",
      "key to",
      "to a",
      "a table"
    ],
    "Location": "KeyAlreadyExistsException.java",
    "Content": " An exception thrown if somebody wants to { @link sem2.hw4.task2.HashTable#add} an existing key to a table. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "106-233",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "239-359",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void remove(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "365-539",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list If",
      "If the",
      "the value",
      "value was",
      "was not",
      "not found",
      "found does",
      "does nothing",
      "nothing param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed"
    ],
    "Location": "List.java",
    "Content": "Removes { @code value} from the list.If the value was not found, does nothing. @param value the value to be removed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean doesContain(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "545-737",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value",
      "value param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to look",
      "look for",
      "for return",
      "return true",
      "true if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value"
    ],
    "Location": "List.java",
    "Content": "Checks if the list contains { @code value}. @param value the value to look for @return true if the list contains { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task2",
    "Range": "790-882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "Get the size of the list. @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task2",
    "Range": "888-1004",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "Checks whether our list is empty. @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class SinglyLinkedList\u003cT\u003e implements List\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "94-303",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Singly linked",
      "linked list",
      "list implementation",
      "implementation Can",
      "Can be",
      "be iterated",
      "iterated through",
      "through using",
      "using foreach",
      "foreach iterator",
      "iterator implementation",
      "implementation supports",
      "supports link",
      "link java",
      "java util",
      "util Iterator",
      "Iterator remove"
    ],
    "Location": "SinglyLinkedList.java",
    "Content": " Singly-linked list implementation.Can be iterated through using foreach, iterator implementationsupports { @link java.util.Iterator#remove}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task1",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task1",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class UniqueList\u003cT\u003e extends SinglyLinkedList\u003cT\u003e ",
    "Namespace": "sem2.hw4.task1",
    "Range": "53-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A list",
      "list where",
      "where every",
      "every element",
      "element could",
      "could be",
      "be present",
      "present only",
      "only once"
    ],
    "Location": "UniqueList.java",
    "Content": " A list where every element could be present only once "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addFirst(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "396-527",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already have",
      "have code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already have { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addLast(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "652-786",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already contains",
      "contains code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already contains { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "910-1129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed",
      "removed throws",
      "throws NoSuchElementException",
      "NoSuchElementException if",
      "if the",
      "the list",
      "list does",
      "does not",
      "not contain",
      "contain code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": "Removes { @code value} from the list @param value the value to be removed @throws NoSuchElementException if the list does not contain { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Expression(String expressionString) throws BadExpressionException ",
    "Namespace": "sem2.hw6.task1",
    "Range": "2059-2740",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates an",
      "an ExpressionTree",
      "ExpressionTree by",
      "by a",
      "a specially",
      "specially formatted",
      "formatted string",
      "string code",
      "code expressionString",
      "expressionString should",
      "should be",
      "be formatted",
      "formatted as",
      "as follows",
      "follows br",
      "br Expr",
      "Expr is",
      "is a",
      "a positive",
      "positive integer",
      "integer number",
      "number or",
      "or Op",
      "Op Expr",
      "Expr Expr",
      "Expr br",
      "br where",
      "where Op",
      "Op is",
      "is an",
      "an operation",
      "operation one",
      "one of",
      "of br",
      "br So",
      "So the",
      "the correctly",
      "correctly formatted",
      "formatted string",
      "string is",
      "is Expr",
      "Expr br",
      "br Examples",
      "Examples of",
      "of good",
      "good strings",
      "strings ul",
      "ul li",
      "li 123",
      "123 li",
      "li li",
      "li 2",
      "2 2",
      "2 li",
      "li li",
      "li 4",
      "4 6",
      "6 12",
      "12 li",
      "li ul",
      "ul param",
      "param expressionString",
      "expressionString the",
      "the formatted",
      "formatted string",
      "string throws",
      "throws BadExpressionException",
      "BadExpressionException if",
      "if code",
      "code expressionString",
      "expressionString is",
      "is not",
      "not formatted",
      "formatted properly"
    ],
    "Location": "Expression.java",
    "Content": " Creates an ExpressionTree by a specially-formatted string.{ @code expressionString} should be formatted as follows:\u003cbr\u003eExpr is a positive integer number or (Op Expr Expr)\u003cbr\u003ewhere Op is an operation -- one of (+, -, , ).\u003cbr\u003eSo the correctly-formatted string is Expr.\u003cbr\u003e Examples of good strings:\u003cul\u003e \u003cli\u003e123\u003cli\u003e \u003cli\u003e(+ 2 2)\u003cli\u003e \u003cli\u003e(- ( 4 6) 12)\u003cli\u003e\u003cul\u003e @param expressionString the formatted string @throws BadExpressionException if { @code expressionString} is not formatted properly "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used to",
      "to provide",
      "provide some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashSet"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used to provide some hash function for { @link HashSet}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T value)",
    "Namespace": "sem2.hw6.task2",
    "Range": "134-353",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code value",
      "value Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashSet",
      "HashSet HASH",
      "HASH COUNT",
      "COUNT param",
      "param value",
      "value a",
      "a value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of code",
      "code value"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code value}.Should return an integer from 0 to { @link HashSet#HASH_COUNT}. @param value a value for hashing @return hash of { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashSet\u003cT\u003e implements Set\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "46-187",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The set",
      "set that",
      "that groups",
      "groups its",
      "its elements",
      "elements by",
      "by their",
      "their hashes",
      "hashes so",
      "so it",
      "it becomes",
      "becomes easier",
      "easier to",
      "to find",
      "find one",
      "one of",
      "of them"
    ],
    "Location": "HashSet.java",
    "Content": " The set that groups its elements by their hashes so it becomes easier to find one of them. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public enum TurnResult ",
    "Namespace": "sem2.hw7.task2",
    "Range": "140-246",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The enumeration",
      "enumeration of",
      "of thing",
      "thing that",
      "that could",
      "could happen",
      "happen after",
      "after a",
      "a turn",
      "turn was",
      "was performed"
    ],
    "Location": "TicTacToe.java",
    "Content": " The enumeration of thing that could happen after a turn was performed. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TicTacToe(int N) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1159-1279",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a game",
      "game with",
      "with field",
      "field side",
      "side size",
      "size code",
      "code N",
      "N param",
      "param N",
      "N field",
      "field side",
      "side size"
    ],
    "Location": "TicTacToe.java",
    "Content": " Start a game with field side size \u003d { @code N}. @param N field side size "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TurnResult makeTurn(int i, int j) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1492-1804",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Place next",
      "next cross",
      "cross or",
      "or zero",
      "zero to",
      "to the",
      "the code",
      "code i",
      "i code",
      "code j",
      "j cell",
      "cell param",
      "param i",
      "i the",
      "the row",
      "row where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero param",
      "param j",
      "j the",
      "the column",
      "column where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero return",
      "return An",
      "An link",
      "link TurnResult",
      "TurnResult entity",
      "entity see",
      "see TurnResult"
    ],
    "Location": "TicTacToe.java",
    "Content": " Place next cross or zero to the ({ @code i}, { @code j}) cell. @param i the row where to put the next cross or zero. @param j the column where to put the next cross or zero. @return An { @link TurnResult} entity. @see TurnResult "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ClassPrinter ",
    "Namespace": "sem2.hw7.task1",
    "Range": "54-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that can",
      "can output",
      "output some",
      "some RTTI",
      "RTTI Instead",
      "Instead of",
      "of standard",
      "standard testing",
      "testing which",
      "which is",
      "is inconvenient",
      "inconvenient here",
      "here one",
      "one can",
      "can pass",
      "pass different",
      "different classes",
      "classes into",
      "into print",
      "print statement",
      "statement in",
      "in main",
      "main Some",
      "Some classes",
      "classes to",
      "to check",
      "check are",
      "are declared",
      "declared below",
      "below standard",
      "standard library",
      "library could",
      "could also",
      "also be",
      "be used"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The class that can output some RTTI.Instead of standard testing, which is inconvenient here,one can pass different classes into print() statement in main().Some classes to check are declared below, standard library could also be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static void print(Class\u003c?\u003e clazz) ",
    "Namespace": "sem2.hw7.task1",
    "Range": "6219-6413",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The method",
      "method that",
      "that prints",
      "prints some",
      "some RTTI",
      "RTTI Works",
      "Works with",
      "with classes",
      "classes interfaces",
      "interfaces and",
      "and enums",
      "enums param",
      "param clazz",
      "clazz a",
      "a class",
      "class to",
      "to learn",
      "learn something",
      "something about"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The method that prints some RTTI.Works with classes, interfaces and enums. @param clazz a class to learn something about "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sorters\u003cT extends Comparable\u003cT\u003e\u003e extends RecursiveAction ",
    "Namespace": "sem2.hw8.task2",
    "Range": "141-300",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that provides",
      "provides parallel",
      "parallel and",
      "and non",
      "non parallel",
      "parallel quicksort",
      "quicksort implementations"
    ],
    "Location": "Sorters.java",
    "Content": "The class that provides parallel and non-parallel quicksort implementations. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void parallelSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "951-1211",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList using",
      "using multiple",
      "multiple threads",
      "threads param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} using multiple threads. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void singleThreadSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "1398-1662",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList without",
      "without multithreading",
      "multithreading param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} without multithreading. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class EmptyQueueException extends Exception ",
    "Namespace": "sem2.test1.task1",
    "Range": "27-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "an exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody was",
      "was trying",
      "trying to",
      "to remove",
      "remove an",
      "an element",
      "element form",
      "form an",
      "an empty",
      "empty queue"
    ],
    "Location": "EmptyQueueException.java",
    "Content": " an exception thrown if somebody was trying to remove an element form an empty queue "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void enqueue(T element, int priority)",
    "Namespace": "sem2.test1.task1",
    "Range": "133-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Put an",
      "an code",
      "code element",
      "element with",
      "with code",
      "code priority",
      "priority into",
      "into the",
      "the queue",
      "queue param",
      "param element",
      "element value",
      "value to",
      "to be",
      "be put",
      "put into",
      "into the",
      "the queue",
      "queue param",
      "param priority",
      "priority its",
      "its priority"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Put an { @code element} with { @code priority} into the queue @param element value to be put into the queue @param priority its priority "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "T dequeue() throws EmptyQueueException",
    "Namespace": "sem2.test1.task1",
    "Range": "342-580",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get an",
      "an element",
      "element with",
      "with maximum",
      "maximum priority",
      "priority from",
      "from the",
      "the queue",
      "queue and",
      "and remove",
      "remove it",
      "it throws",
      "throws EmptyQueueException",
      "EmptyQueueException if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty and",
      "and there",
      "there is",
      "is nothing",
      "nothing to",
      "to return",
      "return return",
      "return removed",
      "removed value"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Get an element with maximum priority from the queue and remove it @throws EmptyQueueException if the queue is empty and there is nothing to return @return removed value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.test1.task1",
    "Range": "586-691",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if the",
      "the queue",
      "queue is",
      "is empty"
    ],
    "Location": "PriorityQueue.java",
    "Content": " checks if the queue is empty @return true if the queue is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public CannonBall(long startTime, double x0, double y0, double angle) ",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "703-1073",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Create a",
      "a bullet",
      "bullet with",
      "with all",
      "all necessary",
      "necessary initial",
      "initial parameters",
      "parameters param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the ball",
      "ball is",
      "is being",
      "being fired"
    ],
    "Location": "CannonBall.java",
    "Content": "Create a bullet with all necessary initial parameters @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the ball is being fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract Explosion getExplosion(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "236-599",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown",
      "blown in",
      "in the",
      "the point",
      "point x",
      "x y",
      "y param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion return",
      "return the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown"
    ],
    "Location": "TankBullet.java",
    "Content": "Get the explosion which would happen if the bullet was blown in the point (x, y) @param x x-coord of the point of the generated explosion @param y y-coord of the point of the generated explosion @return the explosion which would happen if the bullet was blown "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void draw(Graphics2D graphics)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "605-756",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the bullet",
      "bullet param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "TankBullet.java",
    "Content": "draw the bullet @param graphics the { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void update(long time)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "762-900",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the bullet",
      "bullet position",
      "position param",
      "param time",
      "time current",
      "current system",
      "system time",
      "time in",
      "in millis"
    ],
    "Location": "TankBullet.java",
    "Content": "Update the bullet position @param time current system time in millis "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX0()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "906-1021",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the initial",
      "initial x",
      "x cooord",
      "cooord return",
      "return the",
      "the initial",
      "initial x",
      "x cooord"
    ],
    "Location": "TankBullet.java",
    "Content": "get the initial x-cooord @return the initial x-cooord "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1027-1167",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current x-coord of the bullet @return the current x-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getY()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1173-1313",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current y-coord of the bullet @return the current y-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract BulletPackage getPackage()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1319-1495",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "form a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet",
      "bullet return",
      "return a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "form a { @link BulletPackage} based on this bullet @return a { @link BulletPackage} based on this bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "166-330",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the current",
      "current state",
      "state of",
      "of explosion",
      "explosion param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Explosion.java",
    "Content": "draw the current state of explosion @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean update(long currentTime)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "337-565",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the explosion",
      "explosion state",
      "state basically",
      "basically the",
      "the sound",
      "sound wave",
      "wave param",
      "param currentTime",
      "currentTime current",
      "current tyme",
      "tyme of",
      "of the",
      "the system",
      "system return",
      "return code",
      "code true",
      "true if",
      "if it",
      "it still",
      "still explodes"
    ],
    "Location": "Explosion.java",
    "Content": "Update the explosion state (basically the sound wave) @param currentTime current tyme of the system @return { @code true} if it still explodes "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean inAffectedZone(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "571-835",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone",
      "zone param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone"
    ],
    "Location": "Explosion.java",
    "Content": "Check if the point is in the affected zone @param x x-coord of the point @param y y-coord of the point @return { @code true} if the point is in the affected zone "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class NoExplosion extends Explosion ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "41-160",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Explosion mock",
      "mock which",
      "which is",
      "is not",
      "not drawn",
      "drawn but",
      "but has",
      "has the",
      "the affection",
      "affection radius"
    ],
    "Location": "NoExplosion.java",
    "Content": "Explosion-mock which is not drawn, but has the affection radius "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics, double angle, double x, double y) ",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "203-524",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the gun",
      "gun param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw into",
      "into param",
      "param angle",
      "angle the",
      "the angle",
      "angle for",
      "for gun",
      "gun to",
      "to be",
      "be placed",
      "placed param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun",
      "gun param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "draw the gun @param graphics the { @link Graphics2D} context to draw into @param angle the angle for gun to be placed @param x x-coord of the root of the gun @param y y-coord of the root of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected abstract Shape getShape()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1149-1315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the basic",
      "basic unrotated",
      "unrotated shape",
      "shape of",
      "of the",
      "the gun",
      "gun return",
      "return link",
      "link Shape",
      "Shape entity",
      "entity which",
      "which id",
      "id the",
      "the shape",
      "shape of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "get the basic unrotated shape of the gun @return { @link Shape} entity which id the shape of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankBullet getBullet(long startTime, double x0, double y0, double angle)",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1321-1704",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Produce a",
      "a bullet",
      "bullet param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the bullet",
      "bullet is",
      "is being",
      "being fired",
      "fired return",
      "return the",
      "the new",
      "new bullet"
    ],
    "Location": "TankGun.java",
    "Content": "Produce a bullet @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the bullet is being fired @return the new bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankGun getNextGun()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1710-1863",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns",
      "guns return",
      "return the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns"
    ],
    "Location": "TankGun.java",
    "Content": "Get the next gun in the list af all guns @return the next gun in the list af all guns "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1667-1803",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draws the",
      "the landscape",
      "landscape param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "Landscape.java",
    "Content": " draws the landscape @param graphics { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getY(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1896-2086",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface",
      "surface param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate for",
      "for which",
      "which we",
      "we need",
      "need its",
      "its height",
      "height return",
      "return y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface"
    ],
    "Location": "Landscape.java",
    "Content": "get the y-coordinate on the surface @param x x-coordinate for which we need its height @return y-coordinate on the surface "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getAngle(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2542-2919",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the angle",
      "angle of",
      "of the",
      "the surface",
      "surface where",
      "where x",
      "x coordinate",
      "coordinate is",
      "is code",
      "code x",
      "x code",
      "code param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate to",
      "to find",
      "find the",
      "the angle",
      "angle return",
      "return the",
      "the angle",
      "angle from",
      "from pi",
      "pi 2",
      "2 pi",
      "pi 2",
      "2 in",
      "in radians",
      "radians If",
      "If the",
      "the height",
      "height is",
      "is growing",
      "growing y",
      "y is",
      "is decreasing",
      "decreasing when",
      "when moving",
      "moving right",
      "right the",
      "the angle",
      "angle is",
      "is positive",
      "positive If",
      "If the",
      "the height",
      "height is",
      "is decreasing",
      "decreasing the",
      "the angle",
      "angle is",
      "is negative"
    ],
    "Location": "Landscape.java",
    "Content": "get the angle of the surface where x-coordinate is \u003ccode\u003ex\u003ccode\u003e @param x x-coordinate to find the angle @return the angle from [-pi2, pi2] in radians. If the heightis growing (y is decreasing) when moving right, the angle is positive.If the height is decreasing, the angle is negative. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInAir(double x, double y) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3209-3466",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground",
      "ground param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground"
    ],
    "Location": "Landscape.java",
    "Content": "Check if the point is over the ground @param x x-coord of the point to check @param y y-coord of the point to check @return { @code true} if the point is over the ground "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class BulletPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "321-523",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "BulletPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class OpponentFinder ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "201-351",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class responsible",
      "responsible for",
      "for connecting",
      "connecting to",
      "to the",
      "the opponent",
      "opponent It",
      "It starts",
      "starts the",
      "the game",
      "game when",
      "when the",
      "the connection",
      "connection is",
      "is established"
    ],
    "Location": "OpponentFinder.java",
    "Content": "The class responsible for connecting to the opponentIt starts the game when the connection is established "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Receiver implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "249-449",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It receives",
      "receives all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the opponent",
      "opponent and",
      "and synchronizes",
      "synchronizes the",
      "the scene",
      "scene according",
      "according to",
      "to it"
    ],
    "Location": "Receiver.java",
    "Content": "The class implementing the conversation to the opponent.It receives all the data from the opponent and synchronizes the scene according to it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Receiver(Tank opponent, TanksGame game, InputStream inputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "587-858",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param opponent",
      "opponent the",
      "the tank",
      "tank to",
      "to be",
      "be updated",
      "updated according",
      "according to",
      "to the",
      "the input",
      "input data",
      "data param",
      "param game",
      "game the",
      "the game",
      "game to",
      "to be",
      "be updated",
      "updated param",
      "param inputStream",
      "inputStream the",
      "the link",
      "link InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data"
    ],
    "Location": "Receiver.java",
    "Content": " @param opponent the tank to be updated according to the input data @param game the game to be updated @param inputStream the { @link InputStream} to get the data "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isDisconnected() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1088-1262",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has stopped",
      "stopped working",
      "working return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has terminated"
    ],
    "Location": "Receiver.java",
    "Content": "Checks if the { @code Receiver} has stopped working @return { @code true} if the { @code Receiver} has terminated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sender implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "265-437",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It gets",
      "gets all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the game",
      "game and",
      "and sends",
      "sends it",
      "it every",
      "every while"
    ],
    "Location": "Sender.java",
    "Content": "The class implementing the conversation to the opponent.It gets all the data from the game and sends it every while "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Sender(Tank tank, OutputStream outputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "542-750",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param tank",
      "tank the",
      "the tank",
      "tank which",
      "which position",
      "position is",
      "is needed",
      "needed to",
      "to be",
      "be sent",
      "sent param",
      "param outputStream",
      "outputStream the",
      "the code",
      "code OutputStream",
      "OutputStream to",
      "to put",
      "put all",
      "all the",
      "the data",
      "data in"
    ],
    "Location": "Sender.java",
    "Content": " @param tank the tank which position is needed to be sent @param outputStream the { @code OutputStream} to put all the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendBulletPackage(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "838-989",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent that",
      "that we",
      "we have",
      "have shot",
      "shot param",
      "param bullet",
      "bullet the",
      "the bullet",
      "bullet we",
      "we shot"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent that we have shot @param bullet the bullet we shot "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendGameEnded() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1450-1588",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent we",
      "we have",
      "have lost",
      "lost the",
      "the game",
      "game Triples",
      "Triples the",
      "the notification",
      "notification to",
      "to be",
      "be sure"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent we have lost the game.Triples the notification to be sure "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TankPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "38-238",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "TankPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isConnected() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "952-1145",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server",
      "server return",
      "return true",
      "true if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server"
    ],
    "Location": "TanksClient.java",
    "Content": "Checks if the client has successfully connected to the server @return { @true} if the client has successfully connected to the server "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public String getErrorMessage() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1185-1338",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "What went",
      "went wrong",
      "wrong if",
      "if something",
      "something did",
      "did return",
      "return the",
      "the message",
      "message with",
      "with the",
      "the description",
      "description of",
      "of the",
      "the error"
    ],
    "Location": "TanksClient.java",
    "Content": "What went wrong (if something did)? @return the message with the description of the error "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public InputStream getInput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1379-1534",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to send",
      "send some",
      "some data",
      "data to",
      "to the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to put",
      "put the",
      "the data",
      "data in"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to send some data to the server @return { @code InputStream} to put the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public OutputStream getOutput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1568-1728",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to get",
      "get some",
      "some data",
      "data from",
      "from the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data",
      "data from"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to get some data from the server @return { @code InputStream} to get the data from "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TanksServer implements Runnable ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "258-516",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A simple",
      "simple data",
      "data passing",
      "passing server",
      "server for",
      "for two",
      "two clients",
      "clients It",
      "It does",
      "does all",
      "all the",
      "the initial",
      "initial conversation",
      "conversation with",
      "with clients",
      "clients When",
      "When it",
      "it establishes",
      "establishes a",
      "a connection",
      "connection with",
      "with two",
      "two clients",
      "clients it",
      "it just",
      "just passes",
      "passes all",
      "all the",
      "the data",
      "data from",
      "from one",
      "one to",
      "to another"
    ],
    "Location": "TanksServer.java",
    "Content": "A simple data-passing server for two clients.It does all the initial conversation with clients.When it establishes a connection with two clients it just passes all the data from one to another "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank(Landscape land, boolean isOpponent, TanksGame game, TankGun gun, int xPos) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1140-1406",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new tank",
      "tank located",
      "located on",
      "on code",
      "code land",
      "land param",
      "param land",
      "land link",
      "link Landscape",
      "Landscape where",
      "where to",
      "to locate",
      "locate our",
      "our new",
      "new tank",
      "tank param",
      "param xPos",
      "xPos our",
      "our tank",
      "tank initial",
      "initial x",
      "x position"
    ],
    "Location": "Tank.java",
    "Content": "Creates new tank located on { @code land} @param land { @link Landscape}, where to locate our new tank @param xPos our tank initial x-position "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getX() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1558-1680",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank",
      "tank return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the tank @return the x-coordinate of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterX(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1713-2061",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the x-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterY(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2125-2473",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the y",
      "y coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the y",
      "y coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the y-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the y-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void shoot() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2975-3076",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a bullet",
      "bullet to",
      "to the",
      "the game",
      "game based",
      "based on",
      "on the",
      "the current",
      "current tank",
      "tank state"
    ],
    "Location": "Tank.java",
    "Content": "Add a bullet to the game based on the current tank state "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3542-3723",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the tank",
      "tank into",
      "into the",
      "the code",
      "code graphics",
      "graphics param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Tank.java",
    "Content": "draw the tank into the { @code graphics} @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void move(long ms) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "5591-5841",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update all",
      "all necessary",
      "necessary parameters",
      "parameters to",
      "to move",
      "move the",
      "the tank",
      "tank according",
      "according to",
      "to how",
      "how much",
      "much time",
      "time has",
      "has passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation param",
      "param ms",
      "ms time",
      "time passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation in",
      "in milliseconds"
    ],
    "Location": "Tank.java",
    "Content": "update all necessary parameters to move the tank according tohow much time has passed since the last updation @param ms time passed since the last updation in milliseconds "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized TankPackage getPosition() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7193-7408",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank",
      "tank return",
      "return the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "get the { @link TankPackage} object with actual data about the tank @return the { @link TankPackage} object with actual data about the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void updatePosition(TankPackage tankPackage) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7616-7933",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update position",
      "position based",
      "based on",
      "on the",
      "the code",
      "code tankPackage",
      "tankPackage while",
      "while our",
      "our tank",
      "tank is",
      "is updated",
      "updated based",
      "based on",
      "on key",
      "key presses",
      "presses the",
      "the opponent",
      "opponent one",
      "one is",
      "is updated",
      "updated by",
      "by calling",
      "calling this",
      "this method",
      "method param",
      "param tankPackage",
      "tankPackage information",
      "information about",
      "about the",
      "the new",
      "new position",
      "position of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "update position based on the { @code tankPackage}while our tank is updated based on key presses, the opponent one is updated by calling this method @param tankPackage information about the new position of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TanksGame(long startTime, boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1620-2092",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new code",
      "code TankGame",
      "TankGame with",
      "with 2",
      "2 tanks",
      "tanks with",
      "with x",
      "x coords",
      "coords set",
      "set to",
      "to 100",
      "100 and",
      "and to",
      "to 500",
      "500 respectively",
      "respectively param",
      "param startTime",
      "startTime System",
      "System time",
      "time when",
      "when the",
      "the game",
      "game is",
      "is being",
      "being init",
      "init param",
      "param isSecondPlayer",
      "isSecondPlayer code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are the",
      "the tank",
      "tank with",
      "with x",
      "x coord",
      "coord set",
      "set to",
      "to 500",
      "500 param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksGame.java",
    "Content": "Creates new { @code TankGame} with 2 tanks with x-coords set to 100 and to 500 respectively @param startTime System time when the game is being init @param isSecondPlayer { @code true} if we are the tank with x-coord set to 500 @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2944-3120",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered ours",
      "ours param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered ours @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addOpponentBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3256-3446",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered opponent\u0027s",
      "opponent\u0027s param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered opponent\u0027s @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void handleOpponentShoot(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3545-3882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A method",
      "method that",
      "that is",
      "is used",
      "used by",
      "by link",
      "link Receiver",
      "Receiver to",
      "to add",
      "add a",
      "a bullet",
      "bullet smartly",
      "smartly It",
      "It discards",
      "discards bad",
      "bad bullets",
      "bullets and",
      "and can",
      "can manually",
      "manually create",
      "create the",
      "the one",
      "one lost",
      "lost with",
      "with loosing",
      "loosing a",
      "a bit",
      "bit of",
      "of precision",
      "precision param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add",
      "add if",
      "if null",
      "null the",
      "the bullet",
      "bullet will",
      "will be",
      "be created",
      "created manually"
    ],
    "Location": "TanksGame.java",
    "Content": "A method that is used by { @link Receiver} to add a bullet smartlyIt discards bad bullets and can manually create the one lost with loosing a bit of precision @param bullet a bullet to add; if null, the bullet will be created manually "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void handleGunChanged() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4396-4497",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Used by",
      "by our",
      "our tank",
      "tank to",
      "to notify",
      "notify the",
      "the gun",
      "gun is",
      "is changed"
    ],
    "Location": "TanksGame.java",
    "Content": "Used by our tank to notify the gun is changed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public KeyListener getKeyListener() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4542-4710",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses",
      "presses return",
      "return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses"
    ],
    "Location": "TanksGame.java",
    "Content": "Return the tank that will handle with key presses @return the tank that will handle with key presses "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7591-7749",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Draw the",
      "the whole",
      "whole scene",
      "scene param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "TanksGame.java",
    "Content": "Draw the whole scene @param graphics { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean cycle(long time) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "8109-8283",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the scene",
      "scene param",
      "param time",
      "time current",
      "current time",
      "time in",
      "in millis",
      "millis return",
      "return code",
      "code true",
      "true if",
      "if there",
      "there is",
      "is anything",
      "anything to",
      "to update"
    ],
    "Location": "TanksGame.java",
    "Content": "Update the scene @param time current time in millis @return { @code true} if there is anything to update "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank getWinnerTank() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "9114-9278",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the winner",
      "winner tank",
      "tank Do",
      "Do not",
      "not use",
      "use when",
      "when the",
      "the game",
      "game is",
      "is not",
      "not finished",
      "finished return",
      "return the",
      "the tank",
      "tank which",
      "which won",
      "won the",
      "the game"
    ],
    "Location": "TanksGame.java",
    "Content": "Get the winner tankDo not use when the game is not finished. @return the tank which won the game "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isWaiting() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3162-3315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent",
      "opponent return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are waiting for an opponent @return { @code true} if we are waiting for an opponent "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInGame() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3375-3503",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are playing",
      "playing now",
      "now return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are playing",
      "playing now"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are playing now @return { @code true} if we are playing now "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void startGame(boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3554-3935",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a new",
      "new game",
      "game Expects",
      "Expects that",
      "that the",
      "the connection",
      "connection to",
      "to our",
      "our opponent",
      "opponent has",
      "has already",
      "already been",
      "been established",
      "established param",
      "param isSecondPlayer",
      "isSecondPlayer are",
      "are we",
      "we the",
      "the right",
      "right player",
      "player on",
      "on start",
      "start param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksPanel.java",
    "Content": "Start a new gameExpects that the connection to our opponent has already been established @param isSecondPlayer are we the right player on start? @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "1c820199fc3155c2949aaebe50ae7872883ab9e9",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2018-05-25T12:47:40Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw2.task2",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw2.task2",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected \u003cT extends Comparable\u003cT\u003e\u003e void swap(T[] array, int i, int j) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "116-456",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Swaps two",
      "two elements",
      "elements in",
      "in the",
      "the array",
      "array param",
      "param array",
      "array an",
      "an array",
      "array where",
      "where swapping",
      "swapping is",
      "is done",
      "done param",
      "param i",
      "i index",
      "index of",
      "of the",
      "the first",
      "first element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param j",
      "j index",
      "index of",
      "of the",
      "the second",
      "second element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "BaseSorter.java",
    "Content": "Swaps two elements in the array @param array an array where swapping is done @param i index of the first element in the array @param j index of the second element in the array @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT extends Comparable\u003cT\u003e\u003e boolean isSorted(T[] array) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "549-868",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether an",
      "an array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order",
      "order param",
      "param array",
      "array an",
      "an array",
      "array which",
      "which is",
      "is being",
      "being checked",
      "checked param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array",
      "array return",
      "return code",
      "code true",
      "true if",
      "if code",
      "code array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order"
    ],
    "Location": "BaseSorter.java",
    "Content": "Checks whether an array is sorted in ascending order @param array an array which is being checked @param \u003cT\u003e type of elements in the array @return { @code true} if { @code array} is sorted in ascending order "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "\u003cT extends Comparable\u003cT\u003e\u003e void sort(T[] array)",
    "Namespace": "sem2.hw3.task1",
    "Range": "105-334",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Sorts code",
      "code array",
      "array in",
      "in ascending",
      "ascending order",
      "order using",
      "using link",
      "link Comparable",
      "Comparable compareTo",
      "compareTo param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "Sorter.java",
    "Content": "Sorts { @code array} in ascending order using { @link Comparable#compareTo} @param array an array to sort @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ConsoleSpiralOutputter extends DefaultSpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "25-165",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Table spiral",
      "spiral outputter",
      "outputter using",
      "using link",
      "link System",
      "System out",
      "out as",
      "as a",
      "a destination"
    ],
    "Location": "ConsoleSpiralOutputter.java",
    "Content": " Table spiral outputter using { @link System#out} as a destination "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract class DefaultSpiralOutputter implements SpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "54-267",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Default SpiralOutputter",
      "SpiralOutputter implementation",
      "implementation Can",
      "Can output",
      "output a",
      "a table",
      "table to",
      "to any",
      "any link",
      "link PrintStream",
      "PrintStream including",
      "including System",
      "System out",
      "out and",
      "and any",
      "any file"
    ],
    "Location": "DefaultSpiralOutputter.java",
    "Content": "Default SpiralOutputter implementation.Can output a table to any { @link PrintStream}including System.out and any file."
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public FileSpiralOutputter(String fileName) throws FileNotFoundException ",
    "Namespace": "sem2.hw3.task2",
    "Range": "208-511",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates outputter",
      "outputter associated",
      "associated with",
      "with file",
      "file named",
      "named code",
      "code fileName",
      "fileName param",
      "param fileName",
      "fileName name",
      "name of",
      "of the",
      "the file",
      "file to",
      "to output",
      "output the",
      "the table",
      "table in",
      "in throws",
      "throws FileNotFoundException",
      "FileNotFoundException if",
      "if no",
      "no file",
      "file named",
      "named code",
      "code fileName",
      "fileName was",
      "was found"
    ],
    "Location": "FileSpiralOutputter.java",
    "Content": "Creates outputter associated with file named { @code fileName} @param fileName name of the file to output the table in @throws FileNotFoundException if no file named { @code fileName} was found "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void outputSpirally(int[][] table)",
    "Namespace": "sem2.hw3.task2",
    "Range": "114-241",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Outputs code",
      "code table",
      "table spirally",
      "spirally param",
      "param table",
      "table a",
      "a table",
      "table to",
      "to output"
    ],
    "Location": "SpiralOutputter.java",
    "Content": "Outputs { @code table} spirally @param table a table to output "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-134",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used for",
      "for providing",
      "providing some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashTable"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used for providing some hash function for { @link HashTable}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T key)",
    "Namespace": "sem2.hw4.task2",
    "Range": "139-357",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code key",
      "key Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashTable",
      "HashTable hashCount",
      "hashCount param",
      "param key",
      "key the",
      "the value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of the",
      "the code",
      "code key"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code key}.Should return an integer from 0 to { @link HashTable#hashCount}. @param key the value for hashing @return hash of the { @code key} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int getBadHash() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "288-420",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated",
      "generated return",
      "return bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": "Returns the bad hash that was generated. @return bad hash that was generated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashTable\u003cK, V\u003e implements Iterable\u003cV\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "122-428",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Hash table",
      "table that",
      "that allows",
      "allows adding",
      "adding values",
      "values of",
      "of the",
      "the type",
      "type code",
      "code V",
      "V associated",
      "associated with",
      "with keys",
      "keys of",
      "of the",
      "the type",
      "type code",
      "code K",
      "K Hash",
      "Hash function",
      "function should",
      "should be",
      "be provided",
      "provided by",
      "by client",
      "client an",
      "an can",
      "can be",
      "be changed",
      "changed in",
      "in runtime",
      "runtime param",
      "param K",
      "K the",
      "the type",
      "type of",
      "of keys",
      "keys param",
      "param V",
      "V the",
      "the type",
      "type of",
      "of values"
    ],
    "Location": "HashTable.java",
    "Content": "Hash table that allows adding values of the type { @code V} associated with keys of the type { @code K}Hash function should be provided by client an can be changed in runtime. @param \u003cK\u003e the type of keys @param \u003cV\u003e the type of values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void add(K key, V value) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2128-2520",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds the",
      "the code",
      "code value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key to",
      "to the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key for",
      "for the",
      "the value",
      "value to",
      "to be",
      "be associated",
      "associated with",
      "with param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be added",
      "added throws",
      "throws KeyAlreadyExistsException",
      "KeyAlreadyExistsException if",
      "if the",
      "the code",
      "code key",
      "key already",
      "already exists",
      "exists in",
      "in the",
      "the table",
      "table throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Adds the { @code value} associated with the { @code key} to the set. @param key the key for the value to be associated with @param value the value to be added @throws KeyAlreadyExistsException if the { @code key} already exists in the table @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2884-3195",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes the",
      "the value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key from",
      "from the",
      "the set",
      "set Does",
      "Does nothing",
      "nothing in",
      "in case",
      "case of",
      "of not",
      "not founding",
      "founding this",
      "this key",
      "key in",
      "in the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key to",
      "to be",
      "be removed",
      "removed with",
      "with its",
      "its value",
      "value throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Removes the value associated with the { @code key} from the set.Does nothing in case of not founding this key in the set. @param key the key to be removed with its value @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean doesContain(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "3622-3912",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the set",
      "set contains",
      "contains a",
      "a value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key param",
      "param key",
      "key the",
      "the value",
      "value to",
      "to search",
      "search for",
      "for return",
      "return true",
      "true if",
      "if code",
      "code key",
      "key was",
      "was found",
      "found throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Checks if the set contains a value associated with the { @code key}. @param key the value to search for @return true if { @code key} was found @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void setHasher(Hasher\u003cK\u003e newHasher) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "4258-4501",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Change used",
      "used hash",
      "hash function",
      "function param",
      "param newHasher",
      "newHasher object",
      "object that",
      "that implements",
      "implements link",
      "link Hasher",
      "Hasher interface",
      "interface throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Change used hash function. @param newHasher object that implements { @link Hasher} interface @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int size() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5083-5186",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Size of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Size of the set. @return number of objects in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double loadFactor() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5219-5370",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Load factor",
      "factor of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects divided",
      "divided by",
      "by number",
      "number of",
      "of different",
      "different hash",
      "hash values"
    ],
    "Location": "HashTable.java",
    "Content": "Load factor of the set. @return number of objects divided by number of different hash values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int maxListLength() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5420-5591",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set",
      "set return",
      "return the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Returns the length of the maximum-sized list in the set. @return the length of the maximum-sized list in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class KeyAlreadyExistsException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-203",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody wants",
      "wants to",
      "to link",
      "link sem2",
      "sem2 hw4",
      "hw4 task2",
      "task2 HashTable",
      "HashTable add",
      "add an",
      "an existing",
      "existing key",
      "key to",
      "to a",
      "a table"
    ],
    "Location": "KeyAlreadyExistsException.java",
    "Content": " An exception thrown if somebody wants to { @link sem2.hw4.task2.HashTable#add} an existing key to a table. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "106-233",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "239-359",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void remove(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "365-539",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list If",
      "If the",
      "the value",
      "value was",
      "was not",
      "not found",
      "found does",
      "does nothing",
      "nothing param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed"
    ],
    "Location": "List.java",
    "Content": "Removes { @code value} from the list.If the value was not found, does nothing. @param value the value to be removed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean doesContain(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "545-737",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value",
      "value param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to look",
      "look for",
      "for return",
      "return true",
      "true if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value"
    ],
    "Location": "List.java",
    "Content": "Checks if the list contains { @code value}. @param value the value to look for @return true if the list contains { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task2",
    "Range": "790-882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "Get the size of the list. @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task2",
    "Range": "888-1004",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "Checks whether our list is empty. @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class SinglyLinkedList\u003cT\u003e implements List\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "94-303",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Singly linked",
      "linked list",
      "list implementation",
      "implementation Can",
      "Can be",
      "be iterated",
      "iterated through",
      "through using",
      "using foreach",
      "foreach iterator",
      "iterator implementation",
      "implementation supports",
      "supports link",
      "link java",
      "java util",
      "util Iterator",
      "Iterator remove"
    ],
    "Location": "SinglyLinkedList.java",
    "Content": " Singly-linked list implementation.Can be iterated through using foreach, iterator implementationsupports { @link java.util.Iterator#remove}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task1",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task1",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class UniqueList\u003cT\u003e extends SinglyLinkedList\u003cT\u003e ",
    "Namespace": "sem2.hw4.task1",
    "Range": "53-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A list",
      "list where",
      "where every",
      "every element",
      "element could",
      "could be",
      "be present",
      "present only",
      "only once"
    ],
    "Location": "UniqueList.java",
    "Content": " A list where every element could be present only once "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addFirst(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "396-527",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already have",
      "have code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already have { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addLast(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "652-786",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already contains",
      "contains code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already contains { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "910-1129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed",
      "removed throws",
      "throws NoSuchElementException",
      "NoSuchElementException if",
      "if the",
      "the list",
      "list does",
      "does not",
      "not contain",
      "contain code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": "Removes { @code value} from the list @param value the value to be removed @throws NoSuchElementException if the list does not contain { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Expression(String expressionString) throws BadExpressionException ",
    "Namespace": "sem2.hw6.task1",
    "Range": "2059-2740",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates an",
      "an ExpressionTree",
      "ExpressionTree by",
      "by a",
      "a specially",
      "specially formatted",
      "formatted string",
      "string code",
      "code expressionString",
      "expressionString should",
      "should be",
      "be formatted",
      "formatted as",
      "as follows",
      "follows br",
      "br Expr",
      "Expr is",
      "is a",
      "a positive",
      "positive integer",
      "integer number",
      "number or",
      "or Op",
      "Op Expr",
      "Expr Expr",
      "Expr br",
      "br where",
      "where Op",
      "Op is",
      "is an",
      "an operation",
      "operation one",
      "one of",
      "of br",
      "br So",
      "So the",
      "the correctly",
      "correctly formatted",
      "formatted string",
      "string is",
      "is Expr",
      "Expr br",
      "br Examples",
      "Examples of",
      "of good",
      "good strings",
      "strings ul",
      "ul li",
      "li 123",
      "123 li",
      "li li",
      "li 2",
      "2 2",
      "2 li",
      "li li",
      "li 4",
      "4 6",
      "6 12",
      "12 li",
      "li ul",
      "ul param",
      "param expressionString",
      "expressionString the",
      "the formatted",
      "formatted string",
      "string throws",
      "throws BadExpressionException",
      "BadExpressionException if",
      "if code",
      "code expressionString",
      "expressionString is",
      "is not",
      "not formatted",
      "formatted properly"
    ],
    "Location": "Expression.java",
    "Content": " Creates an ExpressionTree by a specially-formatted string.{ @code expressionString} should be formatted as follows:\u003cbr\u003eExpr is a positive integer number or (Op Expr Expr)\u003cbr\u003ewhere Op is an operation -- one of (+, -, , ).\u003cbr\u003eSo the correctly-formatted string is Expr.\u003cbr\u003e Examples of good strings:\u003cul\u003e \u003cli\u003e123\u003cli\u003e \u003cli\u003e(+ 2 2)\u003cli\u003e \u003cli\u003e(- ( 4 6) 12)\u003cli\u003e\u003cul\u003e @param expressionString the formatted string @throws BadExpressionException if { @code expressionString} is not formatted properly "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used to",
      "to provide",
      "provide some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashSet"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used to provide some hash function for { @link HashSet}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T value)",
    "Namespace": "sem2.hw6.task2",
    "Range": "134-353",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code value",
      "value Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashSet",
      "HashSet HASH",
      "HASH COUNT",
      "COUNT param",
      "param value",
      "value a",
      "a value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of code",
      "code value"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code value}.Should return an integer from 0 to { @link HashSet#HASH_COUNT}. @param value a value for hashing @return hash of { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashSet\u003cT\u003e implements Set\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "46-187",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The set",
      "set that",
      "that groups",
      "groups its",
      "its elements",
      "elements by",
      "by their",
      "their hashes",
      "hashes so",
      "so it",
      "it becomes",
      "becomes easier",
      "easier to",
      "to find",
      "find one",
      "one of",
      "of them"
    ],
    "Location": "HashSet.java",
    "Content": " The set that groups its elements by their hashes so it becomes easier to find one of them. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public enum TurnResult ",
    "Namespace": "sem2.hw7.task2",
    "Range": "140-246",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The enumeration",
      "enumeration of",
      "of thing",
      "thing that",
      "that could",
      "could happen",
      "happen after",
      "after a",
      "a turn",
      "turn was",
      "was performed"
    ],
    "Location": "TicTacToe.java",
    "Content": " The enumeration of thing that could happen after a turn was performed. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TicTacToe(int N) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1159-1279",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a game",
      "game with",
      "with field",
      "field side",
      "side size",
      "size code",
      "code N",
      "N param",
      "param N",
      "N field",
      "field side",
      "side size"
    ],
    "Location": "TicTacToe.java",
    "Content": " Start a game with field side size \u003d { @code N}. @param N field side size "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TurnResult makeTurn(int i, int j) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1492-1804",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Place next",
      "next cross",
      "cross or",
      "or zero",
      "zero to",
      "to the",
      "the code",
      "code i",
      "i code",
      "code j",
      "j cell",
      "cell param",
      "param i",
      "i the",
      "the row",
      "row where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero param",
      "param j",
      "j the",
      "the column",
      "column where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero return",
      "return An",
      "An link",
      "link TurnResult",
      "TurnResult entity",
      "entity see",
      "see TurnResult"
    ],
    "Location": "TicTacToe.java",
    "Content": " Place next cross or zero to the ({ @code i}, { @code j}) cell. @param i the row where to put the next cross or zero. @param j the column where to put the next cross or zero. @return An { @link TurnResult} entity. @see TurnResult "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ClassPrinter ",
    "Namespace": "sem2.hw7.task1",
    "Range": "54-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that can",
      "can output",
      "output some",
      "some RTTI",
      "RTTI Instead",
      "Instead of",
      "of standard",
      "standard testing",
      "testing which",
      "which is",
      "is inconvenient",
      "inconvenient here",
      "here one",
      "one can",
      "can pass",
      "pass different",
      "different classes",
      "classes into",
      "into print",
      "print statement",
      "statement in",
      "in main",
      "main Some",
      "Some classes",
      "classes to",
      "to check",
      "check are",
      "are declared",
      "declared below",
      "below standard",
      "standard library",
      "library could",
      "could also",
      "also be",
      "be used"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The class that can output some RTTI.Instead of standard testing, which is inconvenient here,one can pass different classes into print() statement in main().Some classes to check are declared below, standard library could also be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static void print(Class\u003c?\u003e clazz) ",
    "Namespace": "sem2.hw7.task1",
    "Range": "6219-6413",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The method",
      "method that",
      "that prints",
      "prints some",
      "some RTTI",
      "RTTI Works",
      "Works with",
      "with classes",
      "classes interfaces",
      "interfaces and",
      "and enums",
      "enums param",
      "param clazz",
      "clazz a",
      "a class",
      "class to",
      "to learn",
      "learn something",
      "something about"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The method that prints some RTTI.Works with classes, interfaces and enums. @param clazz a class to learn something about "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sorters\u003cT extends Comparable\u003cT\u003e\u003e extends RecursiveAction ",
    "Namespace": "sem2.hw8.task2",
    "Range": "141-300",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that provides",
      "provides parallel",
      "parallel and",
      "and non",
      "non parallel",
      "parallel quicksort",
      "quicksort implementations"
    ],
    "Location": "Sorters.java",
    "Content": "The class that provides parallel and non-parallel quicksort implementations. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void parallelSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "951-1211",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList using",
      "using multiple",
      "multiple threads",
      "threads param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} using multiple threads. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void singleThreadSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "1398-1662",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList without",
      "without multithreading",
      "multithreading param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} without multithreading. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class EmptyQueueException extends Exception ",
    "Namespace": "sem2.test1.task1",
    "Range": "27-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "an exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody was",
      "was trying",
      "trying to",
      "to remove",
      "remove an",
      "an element",
      "element form",
      "form an",
      "an empty",
      "empty queue"
    ],
    "Location": "EmptyQueueException.java",
    "Content": " an exception thrown if somebody was trying to remove an element form an empty queue "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void enqueue(T element, int priority)",
    "Namespace": "sem2.test1.task1",
    "Range": "133-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Put an",
      "an code",
      "code element",
      "element with",
      "with code",
      "code priority",
      "priority into",
      "into the",
      "the queue",
      "queue param",
      "param element",
      "element value",
      "value to",
      "to be",
      "be put",
      "put into",
      "into the",
      "the queue",
      "queue param",
      "param priority",
      "priority its",
      "its priority"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Put an { @code element} with { @code priority} into the queue @param element value to be put into the queue @param priority its priority "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "T dequeue() throws EmptyQueueException",
    "Namespace": "sem2.test1.task1",
    "Range": "342-580",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get an",
      "an element",
      "element with",
      "with maximum",
      "maximum priority",
      "priority from",
      "from the",
      "the queue",
      "queue and",
      "and remove",
      "remove it",
      "it throws",
      "throws EmptyQueueException",
      "EmptyQueueException if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty and",
      "and there",
      "there is",
      "is nothing",
      "nothing to",
      "to return",
      "return return",
      "return removed",
      "removed value"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Get an element with maximum priority from the queue and remove it @throws EmptyQueueException if the queue is empty and there is nothing to return @return removed value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.test1.task1",
    "Range": "586-691",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if the",
      "the queue",
      "queue is",
      "is empty"
    ],
    "Location": "PriorityQueue.java",
    "Content": " checks if the queue is empty @return true if the queue is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public CannonBall(long startTime, double x0, double y0, double angle) ",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "703-1073",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Create a",
      "a bullet",
      "bullet with",
      "with all",
      "all necessary",
      "necessary initial",
      "initial parameters",
      "parameters param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the ball",
      "ball is",
      "is being",
      "being fired"
    ],
    "Location": "CannonBall.java",
    "Content": "Create a bullet with all necessary initial parameters @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the ball is being fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract Explosion getExplosion(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "236-599",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown",
      "blown in",
      "in the",
      "the point",
      "point x",
      "x y",
      "y param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion return",
      "return the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown"
    ],
    "Location": "TankBullet.java",
    "Content": "Get the explosion which would happen if the bullet was blown in the point (x, y) @param x x-coord of the point of the generated explosion @param y y-coord of the point of the generated explosion @return the explosion which would happen if the bullet was blown "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void draw(Graphics2D graphics)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "605-756",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the bullet",
      "bullet param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "TankBullet.java",
    "Content": "draw the bullet @param graphics the { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void update(long time)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "762-900",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the bullet",
      "bullet position",
      "position param",
      "param time",
      "time current",
      "current system",
      "system time",
      "time in",
      "in millis"
    ],
    "Location": "TankBullet.java",
    "Content": "Update the bullet position @param time current system time in millis "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX0()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "906-1021",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the initial",
      "initial x",
      "x cooord",
      "cooord return",
      "return the",
      "the initial",
      "initial x",
      "x cooord"
    ],
    "Location": "TankBullet.java",
    "Content": "get the initial x-cooord @return the initial x-cooord "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1027-1167",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current x-coord of the bullet @return the current x-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getY()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1173-1313",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current y-coord of the bullet @return the current y-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract BulletPackage getPackage()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1319-1495",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "form a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet",
      "bullet return",
      "return a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "form a { @link BulletPackage} based on this bullet @return a { @link BulletPackage} based on this bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "166-330",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the current",
      "current state",
      "state of",
      "of explosion",
      "explosion param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Explosion.java",
    "Content": "draw the current state of explosion @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean update(long currentTime)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "337-565",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the explosion",
      "explosion state",
      "state basically",
      "basically the",
      "the sound",
      "sound wave",
      "wave param",
      "param currentTime",
      "currentTime current",
      "current tyme",
      "tyme of",
      "of the",
      "the system",
      "system return",
      "return code",
      "code true",
      "true if",
      "if it",
      "it still",
      "still explodes"
    ],
    "Location": "Explosion.java",
    "Content": "Update the explosion state (basically the sound wave) @param currentTime current tyme of the system @return { @code true} if it still explodes "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean inAffectedZone(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "571-835",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone",
      "zone param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone"
    ],
    "Location": "Explosion.java",
    "Content": "Check if the point is in the affected zone @param x x-coord of the point @param y y-coord of the point @return { @code true} if the point is in the affected zone "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class NoExplosion extends Explosion ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "41-160",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Explosion mock",
      "mock which",
      "which is",
      "is not",
      "not drawn",
      "drawn but",
      "but has",
      "has the",
      "the affection",
      "affection radius"
    ],
    "Location": "NoExplosion.java",
    "Content": "Explosion-mock which is not drawn, but has the affection radius "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics, double angle, double x, double y) ",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "203-524",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the gun",
      "gun param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw into",
      "into param",
      "param angle",
      "angle the",
      "the angle",
      "angle for",
      "for gun",
      "gun to",
      "to be",
      "be placed",
      "placed param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun",
      "gun param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "draw the gun @param graphics the { @link Graphics2D} context to draw into @param angle the angle for gun to be placed @param x x-coord of the root of the gun @param y y-coord of the root of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected abstract Shape getShape()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1149-1315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the basic",
      "basic unrotated",
      "unrotated shape",
      "shape of",
      "of the",
      "the gun",
      "gun return",
      "return link",
      "link Shape",
      "Shape entity",
      "entity which",
      "which id",
      "id the",
      "the shape",
      "shape of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "get the basic unrotated shape of the gun @return { @link Shape} entity which id the shape of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankBullet getBullet(long startTime, double x0, double y0, double angle)",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1321-1704",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Produce a",
      "a bullet",
      "bullet param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the bullet",
      "bullet is",
      "is being",
      "being fired",
      "fired return",
      "return the",
      "the new",
      "new bullet"
    ],
    "Location": "TankGun.java",
    "Content": "Produce a bullet @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the bullet is being fired @return the new bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankGun getNextGun()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1710-1863",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns",
      "guns return",
      "return the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns"
    ],
    "Location": "TankGun.java",
    "Content": "Get the next gun in the list af all guns @return the next gun in the list af all guns "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1667-1803",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draws the",
      "the landscape",
      "landscape param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "Landscape.java",
    "Content": " draws the landscape @param graphics { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getY(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1896-2086",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface",
      "surface param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate for",
      "for which",
      "which we",
      "we need",
      "need its",
      "its height",
      "height return",
      "return y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface"
    ],
    "Location": "Landscape.java",
    "Content": "get the y-coordinate on the surface @param x x-coordinate for which we need its height @return y-coordinate on the surface "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getAngle(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2542-2919",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the angle",
      "angle of",
      "of the",
      "the surface",
      "surface where",
      "where x",
      "x coordinate",
      "coordinate is",
      "is code",
      "code x",
      "x code",
      "code param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate to",
      "to find",
      "find the",
      "the angle",
      "angle return",
      "return the",
      "the angle",
      "angle from",
      "from pi",
      "pi 2",
      "2 pi",
      "pi 2",
      "2 in",
      "in radians",
      "radians If",
      "If the",
      "the height",
      "height is",
      "is growing",
      "growing y",
      "y is",
      "is decreasing",
      "decreasing when",
      "when moving",
      "moving right",
      "right the",
      "the angle",
      "angle is",
      "is positive",
      "positive If",
      "If the",
      "the height",
      "height is",
      "is decreasing",
      "decreasing the",
      "the angle",
      "angle is",
      "is negative"
    ],
    "Location": "Landscape.java",
    "Content": "get the angle of the surface where x-coordinate is \u003ccode\u003ex\u003ccode\u003e @param x x-coordinate to find the angle @return the angle from [-pi2, pi2] in radians. If the heightis growing (y is decreasing) when moving right, the angle is positive.If the height is decreasing, the angle is negative. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInAir(double x, double y) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3209-3466",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground",
      "ground param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground"
    ],
    "Location": "Landscape.java",
    "Content": "Check if the point is over the ground @param x x-coord of the point to check @param y y-coord of the point to check @return { @code true} if the point is over the ground "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class BulletPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "321-523",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "BulletPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class OpponentFinder ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "201-351",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class responsible",
      "responsible for",
      "for connecting",
      "connecting to",
      "to the",
      "the opponent",
      "opponent It",
      "It starts",
      "starts the",
      "the game",
      "game when",
      "when the",
      "the connection",
      "connection is",
      "is established"
    ],
    "Location": "OpponentFinder.java",
    "Content": "The class responsible for connecting to the opponentIt starts the game when the connection is established "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Receiver implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "249-449",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It receives",
      "receives all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the opponent",
      "opponent and",
      "and synchronizes",
      "synchronizes the",
      "the scene",
      "scene according",
      "according to",
      "to it"
    ],
    "Location": "Receiver.java",
    "Content": "The class implementing the conversation to the opponent.It receives all the data from the opponent and synchronizes the scene according to it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Receiver(Tank opponent, TanksGame game, InputStream inputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "587-858",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param opponent",
      "opponent the",
      "the tank",
      "tank to",
      "to be",
      "be updated",
      "updated according",
      "according to",
      "to the",
      "the input",
      "input data",
      "data param",
      "param game",
      "game the",
      "the game",
      "game to",
      "to be",
      "be updated",
      "updated param",
      "param inputStream",
      "inputStream the",
      "the link",
      "link InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data"
    ],
    "Location": "Receiver.java",
    "Content": " @param opponent the tank to be updated according to the input data @param game the game to be updated @param inputStream the { @link InputStream} to get the data "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isDisconnected() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1088-1262",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has stopped",
      "stopped working",
      "working return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has terminated"
    ],
    "Location": "Receiver.java",
    "Content": "Checks if the { @code Receiver} has stopped working @return { @code true} if the { @code Receiver} has terminated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sender implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "265-437",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It gets",
      "gets all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the game",
      "game and",
      "and sends",
      "sends it",
      "it every",
      "every while"
    ],
    "Location": "Sender.java",
    "Content": "The class implementing the conversation to the opponent.It gets all the data from the game and sends it every while "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Sender(Tank tank, OutputStream outputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "542-750",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param tank",
      "tank the",
      "the tank",
      "tank which",
      "which position",
      "position is",
      "is needed",
      "needed to",
      "to be",
      "be sent",
      "sent param",
      "param outputStream",
      "outputStream the",
      "the code",
      "code OutputStream",
      "OutputStream to",
      "to put",
      "put all",
      "all the",
      "the data",
      "data in"
    ],
    "Location": "Sender.java",
    "Content": " @param tank the tank which position is needed to be sent @param outputStream the { @code OutputStream} to put all the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendBulletPackage(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "838-989",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent that",
      "that we",
      "we have",
      "have shot",
      "shot param",
      "param bullet",
      "bullet the",
      "the bullet",
      "bullet we",
      "we shot"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent that we have shot @param bullet the bullet we shot "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendGameEnded() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1450-1588",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent we",
      "we have",
      "have lost",
      "lost the",
      "the game",
      "game Triples",
      "Triples the",
      "the notification",
      "notification to",
      "to be",
      "be sure"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent we have lost the game.Triples the notification to be sure "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TankPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "38-238",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "TankPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isConnected() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "952-1145",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server",
      "server return",
      "return true",
      "true if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server"
    ],
    "Location": "TanksClient.java",
    "Content": "Checks if the client has successfully connected to the server @return { @true} if the client has successfully connected to the server "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public String getErrorMessage() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1185-1338",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "What went",
      "went wrong",
      "wrong if",
      "if something",
      "something did",
      "did return",
      "return the",
      "the message",
      "message with",
      "with the",
      "the description",
      "description of",
      "of the",
      "the error"
    ],
    "Location": "TanksClient.java",
    "Content": "What went wrong (if something did)? @return the message with the description of the error "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public InputStream getInput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1379-1534",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to send",
      "send some",
      "some data",
      "data to",
      "to the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to put",
      "put the",
      "the data",
      "data in"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to send some data to the server @return { @code InputStream} to put the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public OutputStream getOutput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1568-1728",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to get",
      "get some",
      "some data",
      "data from",
      "from the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data",
      "data from"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to get some data from the server @return { @code InputStream} to get the data from "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TanksServer implements Runnable ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "258-516",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A simple",
      "simple data",
      "data passing",
      "passing server",
      "server for",
      "for two",
      "two clients",
      "clients It",
      "It does",
      "does all",
      "all the",
      "the initial",
      "initial conversation",
      "conversation with",
      "with clients",
      "clients When",
      "When it",
      "it establishes",
      "establishes a",
      "a connection",
      "connection with",
      "with two",
      "two clients",
      "clients it",
      "it just",
      "just passes",
      "passes all",
      "all the",
      "the data",
      "data from",
      "from one",
      "one to",
      "to another"
    ],
    "Location": "TanksServer.java",
    "Content": "A simple data-passing server for two clients.It does all the initial conversation with clients.When it establishes a connection with two clients it just passes all the data from one to another "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank(Landscape land, boolean isOpponent, TanksGame game, TankGun gun, int xPos) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1140-1406",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new tank",
      "tank located",
      "located on",
      "on code",
      "code land",
      "land param",
      "param land",
      "land link",
      "link Landscape",
      "Landscape where",
      "where to",
      "to locate",
      "locate our",
      "our new",
      "new tank",
      "tank param",
      "param xPos",
      "xPos our",
      "our tank",
      "tank initial",
      "initial x",
      "x position"
    ],
    "Location": "Tank.java",
    "Content": "Creates new tank located on { @code land} @param land { @link Landscape}, where to locate our new tank @param xPos our tank initial x-position "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getX() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1558-1680",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank",
      "tank return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the tank @return the x-coordinate of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterX(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1713-2061",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the x-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterY(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2125-2473",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the y",
      "y coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the y",
      "y coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the y-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the y-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void shoot() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2975-3076",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a bullet",
      "bullet to",
      "to the",
      "the game",
      "game based",
      "based on",
      "on the",
      "the current",
      "current tank",
      "tank state"
    ],
    "Location": "Tank.java",
    "Content": "Add a bullet to the game based on the current tank state "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3542-3723",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the tank",
      "tank into",
      "into the",
      "the code",
      "code graphics",
      "graphics param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Tank.java",
    "Content": "draw the tank into the { @code graphics} @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void move(long ms) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "5591-5841",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update all",
      "all necessary",
      "necessary parameters",
      "parameters to",
      "to move",
      "move the",
      "the tank",
      "tank according",
      "according to",
      "to how",
      "how much",
      "much time",
      "time has",
      "has passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation param",
      "param ms",
      "ms time",
      "time passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation in",
      "in milliseconds"
    ],
    "Location": "Tank.java",
    "Content": "update all necessary parameters to move the tank according tohow much time has passed since the last updation @param ms time passed since the last updation in milliseconds "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized TankPackage getPosition() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7193-7408",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank",
      "tank return",
      "return the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "get the { @link TankPackage} object with actual data about the tank @return the { @link TankPackage} object with actual data about the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void updatePosition(TankPackage tankPackage) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7616-7933",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update position",
      "position based",
      "based on",
      "on the",
      "the code",
      "code tankPackage",
      "tankPackage while",
      "while our",
      "our tank",
      "tank is",
      "is updated",
      "updated based",
      "based on",
      "on key",
      "key presses",
      "presses the",
      "the opponent",
      "opponent one",
      "one is",
      "is updated",
      "updated by",
      "by calling",
      "calling this",
      "this method",
      "method param",
      "param tankPackage",
      "tankPackage information",
      "information about",
      "about the",
      "the new",
      "new position",
      "position of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "update position based on the { @code tankPackage}while our tank is updated based on key presses, the opponent one is updated by calling this method @param tankPackage information about the new position of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TanksGame(long startTime, boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1620-2092",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new code",
      "code TankGame",
      "TankGame with",
      "with 2",
      "2 tanks",
      "tanks with",
      "with x",
      "x coords",
      "coords set",
      "set to",
      "to 100",
      "100 and",
      "and to",
      "to 500",
      "500 respectively",
      "respectively param",
      "param startTime",
      "startTime System",
      "System time",
      "time when",
      "when the",
      "the game",
      "game is",
      "is being",
      "being init",
      "init param",
      "param isSecondPlayer",
      "isSecondPlayer code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are the",
      "the tank",
      "tank with",
      "with x",
      "x coord",
      "coord set",
      "set to",
      "to 500",
      "500 param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksGame.java",
    "Content": "Creates new { @code TankGame} with 2 tanks with x-coords set to 100 and to 500 respectively @param startTime System time when the game is being init @param isSecondPlayer { @code true} if we are the tank with x-coord set to 500 @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2944-3120",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered ours",
      "ours param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered ours @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addOpponentBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3256-3446",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered opponent\u0027s",
      "opponent\u0027s param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered opponent\u0027s @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void handleOpponentShoot(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3545-3882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A method",
      "method that",
      "that is",
      "is used",
      "used by",
      "by link",
      "link Receiver",
      "Receiver to",
      "to add",
      "add a",
      "a bullet",
      "bullet smartly",
      "smartly It",
      "It discards",
      "discards bad",
      "bad bullets",
      "bullets and",
      "and can",
      "can manually",
      "manually create",
      "create the",
      "the one",
      "one lost",
      "lost with",
      "with loosing",
      "loosing a",
      "a bit",
      "bit of",
      "of precision",
      "precision param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add",
      "add if",
      "if null",
      "null the",
      "the bullet",
      "bullet will",
      "will be",
      "be created",
      "created manually"
    ],
    "Location": "TanksGame.java",
    "Content": "A method that is used by { @link Receiver} to add a bullet smartlyIt discards bad bullets and can manually create the one lost with loosing a bit of precision @param bullet a bullet to add; if null, the bullet will be created manually "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void handleGunChanged() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4396-4497",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Used by",
      "by our",
      "our tank",
      "tank to",
      "to notify",
      "notify the",
      "the gun",
      "gun is",
      "is changed"
    ],
    "Location": "TanksGame.java",
    "Content": "Used by our tank to notify the gun is changed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public KeyListener getKeyListener() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4542-4710",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses",
      "presses return",
      "return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses"
    ],
    "Location": "TanksGame.java",
    "Content": "Return the tank that will handle with key presses @return the tank that will handle with key presses "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7591-7749",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Draw the",
      "the whole",
      "whole scene",
      "scene param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "TanksGame.java",
    "Content": "Draw the whole scene @param graphics { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean cycle(long time) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "8109-8283",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the scene",
      "scene param",
      "param time",
      "time current",
      "current time",
      "time in",
      "in millis",
      "millis return",
      "return code",
      "code true",
      "true if",
      "if there",
      "there is",
      "is anything",
      "anything to",
      "to update"
    ],
    "Location": "TanksGame.java",
    "Content": "Update the scene @param time current time in millis @return { @code true} if there is anything to update "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank getWinnerTank() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "9114-9278",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the winner",
      "winner tank",
      "tank Do",
      "Do not",
      "not use",
      "use when",
      "when the",
      "the game",
      "game is",
      "is not",
      "not finished",
      "finished return",
      "return the",
      "the tank",
      "tank which",
      "which won",
      "won the",
      "the game"
    ],
    "Location": "TanksGame.java",
    "Content": "Get the winner tankDo not use when the game is not finished. @return the tank which won the game "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isWaiting() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3162-3315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent",
      "opponent return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are waiting for an opponent @return { @code true} if we are waiting for an opponent "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInGame() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3375-3503",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are playing",
      "playing now",
      "now return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are playing",
      "playing now"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are playing now @return { @code true} if we are playing now "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void startGame(boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3554-3935",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a new",
      "new game",
      "game Expects",
      "Expects that",
      "that the",
      "the connection",
      "connection to",
      "to our",
      "our opponent",
      "opponent has",
      "has already",
      "already been",
      "been established",
      "established param",
      "param isSecondPlayer",
      "isSecondPlayer are",
      "are we",
      "we the",
      "the right",
      "right player",
      "player on",
      "on start",
      "start param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksPanel.java",
    "Content": "Start a new gameExpects that the connection to our opponent has already been established @param isSecondPlayer are we the right player on start? @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "1c820199fc3155c2949aaebe50ae7872883ab9e9",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2018-05-25T12:47:40Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw2.task2",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw2.task2",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected \u003cT extends Comparable\u003cT\u003e\u003e void swap(T[] array, int i, int j) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "116-456",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Swaps two",
      "two elements",
      "elements in",
      "in the",
      "the array",
      "array param",
      "param array",
      "array an",
      "an array",
      "array where",
      "where swapping",
      "swapping is",
      "is done",
      "done param",
      "param i",
      "i index",
      "index of",
      "of the",
      "the first",
      "first element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param j",
      "j index",
      "index of",
      "of the",
      "the second",
      "second element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "BaseSorter.java",
    "Content": "Swaps two elements in the array @param array an array where swapping is done @param i index of the first element in the array @param j index of the second element in the array @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT extends Comparable\u003cT\u003e\u003e boolean isSorted(T[] array) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "549-868",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether an",
      "an array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order",
      "order param",
      "param array",
      "array an",
      "an array",
      "array which",
      "which is",
      "is being",
      "being checked",
      "checked param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array",
      "array return",
      "return code",
      "code true",
      "true if",
      "if code",
      "code array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order"
    ],
    "Location": "BaseSorter.java",
    "Content": "Checks whether an array is sorted in ascending order @param array an array which is being checked @param \u003cT\u003e type of elements in the array @return { @code true} if { @code array} is sorted in ascending order "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "\u003cT extends Comparable\u003cT\u003e\u003e void sort(T[] array)",
    "Namespace": "sem2.hw3.task1",
    "Range": "105-334",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Sorts code",
      "code array",
      "array in",
      "in ascending",
      "ascending order",
      "order using",
      "using link",
      "link Comparable",
      "Comparable compareTo",
      "compareTo param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "Sorter.java",
    "Content": "Sorts { @code array} in ascending order using { @link Comparable#compareTo} @param array an array to sort @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ConsoleSpiralOutputter extends DefaultSpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "25-165",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Table spiral",
      "spiral outputter",
      "outputter using",
      "using link",
      "link System",
      "System out",
      "out as",
      "as a",
      "a destination"
    ],
    "Location": "ConsoleSpiralOutputter.java",
    "Content": " Table spiral outputter using { @link System#out} as a destination "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract class DefaultSpiralOutputter implements SpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "54-267",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Default SpiralOutputter",
      "SpiralOutputter implementation",
      "implementation Can",
      "Can output",
      "output a",
      "a table",
      "table to",
      "to any",
      "any link",
      "link PrintStream",
      "PrintStream including",
      "including System",
      "System out",
      "out and",
      "and any",
      "any file"
    ],
    "Location": "DefaultSpiralOutputter.java",
    "Content": "Default SpiralOutputter implementation.Can output a table to any { @link PrintStream}including System.out and any file."
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public FileSpiralOutputter(String fileName) throws FileNotFoundException ",
    "Namespace": "sem2.hw3.task2",
    "Range": "208-511",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates outputter",
      "outputter associated",
      "associated with",
      "with file",
      "file named",
      "named code",
      "code fileName",
      "fileName param",
      "param fileName",
      "fileName name",
      "name of",
      "of the",
      "the file",
      "file to",
      "to output",
      "output the",
      "the table",
      "table in",
      "in throws",
      "throws FileNotFoundException",
      "FileNotFoundException if",
      "if no",
      "no file",
      "file named",
      "named code",
      "code fileName",
      "fileName was",
      "was found"
    ],
    "Location": "FileSpiralOutputter.java",
    "Content": "Creates outputter associated with file named { @code fileName} @param fileName name of the file to output the table in @throws FileNotFoundException if no file named { @code fileName} was found "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void outputSpirally(int[][] table)",
    "Namespace": "sem2.hw3.task2",
    "Range": "114-241",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Outputs code",
      "code table",
      "table spirally",
      "spirally param",
      "param table",
      "table a",
      "a table",
      "table to",
      "to output"
    ],
    "Location": "SpiralOutputter.java",
    "Content": "Outputs { @code table} spirally @param table a table to output "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-134",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used for",
      "for providing",
      "providing some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashTable"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used for providing some hash function for { @link HashTable}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T key)",
    "Namespace": "sem2.hw4.task2",
    "Range": "139-357",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code key",
      "key Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashTable",
      "HashTable hashCount",
      "hashCount param",
      "param key",
      "key the",
      "the value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of the",
      "the code",
      "code key"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code key}.Should return an integer from 0 to { @link HashTable#hashCount}. @param key the value for hashing @return hash of the { @code key} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int getBadHash() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "288-420",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated",
      "generated return",
      "return bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": "Returns the bad hash that was generated. @return bad hash that was generated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashTable\u003cK, V\u003e implements Iterable\u003cV\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "122-428",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Hash table",
      "table that",
      "that allows",
      "allows adding",
      "adding values",
      "values of",
      "of the",
      "the type",
      "type code",
      "code V",
      "V associated",
      "associated with",
      "with keys",
      "keys of",
      "of the",
      "the type",
      "type code",
      "code K",
      "K Hash",
      "Hash function",
      "function should",
      "should be",
      "be provided",
      "provided by",
      "by client",
      "client an",
      "an can",
      "can be",
      "be changed",
      "changed in",
      "in runtime",
      "runtime param",
      "param K",
      "K the",
      "the type",
      "type of",
      "of keys",
      "keys param",
      "param V",
      "V the",
      "the type",
      "type of",
      "of values"
    ],
    "Location": "HashTable.java",
    "Content": "Hash table that allows adding values of the type { @code V} associated with keys of the type { @code K}Hash function should be provided by client an can be changed in runtime. @param \u003cK\u003e the type of keys @param \u003cV\u003e the type of values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void add(K key, V value) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2128-2520",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds the",
      "the code",
      "code value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key to",
      "to the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key for",
      "for the",
      "the value",
      "value to",
      "to be",
      "be associated",
      "associated with",
      "with param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be added",
      "added throws",
      "throws KeyAlreadyExistsException",
      "KeyAlreadyExistsException if",
      "if the",
      "the code",
      "code key",
      "key already",
      "already exists",
      "exists in",
      "in the",
      "the table",
      "table throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Adds the { @code value} associated with the { @code key} to the set. @param key the key for the value to be associated with @param value the value to be added @throws KeyAlreadyExistsException if the { @code key} already exists in the table @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2884-3195",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes the",
      "the value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key from",
      "from the",
      "the set",
      "set Does",
      "Does nothing",
      "nothing in",
      "in case",
      "case of",
      "of not",
      "not founding",
      "founding this",
      "this key",
      "key in",
      "in the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key to",
      "to be",
      "be removed",
      "removed with",
      "with its",
      "its value",
      "value throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Removes the value associated with the { @code key} from the set.Does nothing in case of not founding this key in the set. @param key the key to be removed with its value @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean doesContain(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "3622-3912",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the set",
      "set contains",
      "contains a",
      "a value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key param",
      "param key",
      "key the",
      "the value",
      "value to",
      "to search",
      "search for",
      "for return",
      "return true",
      "true if",
      "if code",
      "code key",
      "key was",
      "was found",
      "found throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Checks if the set contains a value associated with the { @code key}. @param key the value to search for @return true if { @code key} was found @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void setHasher(Hasher\u003cK\u003e newHasher) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "4258-4501",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Change used",
      "used hash",
      "hash function",
      "function param",
      "param newHasher",
      "newHasher object",
      "object that",
      "that implements",
      "implements link",
      "link Hasher",
      "Hasher interface",
      "interface throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Change used hash function. @param newHasher object that implements { @link Hasher} interface @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int size() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5083-5186",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Size of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Size of the set. @return number of objects in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double loadFactor() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5219-5370",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Load factor",
      "factor of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects divided",
      "divided by",
      "by number",
      "number of",
      "of different",
      "different hash",
      "hash values"
    ],
    "Location": "HashTable.java",
    "Content": "Load factor of the set. @return number of objects divided by number of different hash values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int maxListLength() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5420-5591",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set",
      "set return",
      "return the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Returns the length of the maximum-sized list in the set. @return the length of the maximum-sized list in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class KeyAlreadyExistsException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-203",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody wants",
      "wants to",
      "to link",
      "link sem2",
      "sem2 hw4",
      "hw4 task2",
      "task2 HashTable",
      "HashTable add",
      "add an",
      "an existing",
      "existing key",
      "key to",
      "to a",
      "a table"
    ],
    "Location": "KeyAlreadyExistsException.java",
    "Content": " An exception thrown if somebody wants to { @link sem2.hw4.task2.HashTable#add} an existing key to a table. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "106-233",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "239-359",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void remove(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "365-539",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list If",
      "If the",
      "the value",
      "value was",
      "was not",
      "not found",
      "found does",
      "does nothing",
      "nothing param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed"
    ],
    "Location": "List.java",
    "Content": "Removes { @code value} from the list.If the value was not found, does nothing. @param value the value to be removed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean doesContain(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "545-737",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value",
      "value param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to look",
      "look for",
      "for return",
      "return true",
      "true if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value"
    ],
    "Location": "List.java",
    "Content": "Checks if the list contains { @code value}. @param value the value to look for @return true if the list contains { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task2",
    "Range": "790-882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "Get the size of the list. @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task2",
    "Range": "888-1004",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "Checks whether our list is empty. @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class SinglyLinkedList\u003cT\u003e implements List\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "94-303",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Singly linked",
      "linked list",
      "list implementation",
      "implementation Can",
      "Can be",
      "be iterated",
      "iterated through",
      "through using",
      "using foreach",
      "foreach iterator",
      "iterator implementation",
      "implementation supports",
      "supports link",
      "link java",
      "java util",
      "util Iterator",
      "Iterator remove"
    ],
    "Location": "SinglyLinkedList.java",
    "Content": " Singly-linked list implementation.Can be iterated through using foreach, iterator implementationsupports { @link java.util.Iterator#remove}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task1",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task1",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class UniqueList\u003cT\u003e extends SinglyLinkedList\u003cT\u003e ",
    "Namespace": "sem2.hw4.task1",
    "Range": "53-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A list",
      "list where",
      "where every",
      "every element",
      "element could",
      "could be",
      "be present",
      "present only",
      "only once"
    ],
    "Location": "UniqueList.java",
    "Content": " A list where every element could be present only once "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addFirst(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "396-527",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already have",
      "have code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already have { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addLast(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "652-786",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already contains",
      "contains code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already contains { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "910-1129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed",
      "removed throws",
      "throws NoSuchElementException",
      "NoSuchElementException if",
      "if the",
      "the list",
      "list does",
      "does not",
      "not contain",
      "contain code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": "Removes { @code value} from the list @param value the value to be removed @throws NoSuchElementException if the list does not contain { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Expression(String expressionString) throws BadExpressionException ",
    "Namespace": "sem2.hw6.task1",
    "Range": "2059-2740",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates an",
      "an ExpressionTree",
      "ExpressionTree by",
      "by a",
      "a specially",
      "specially formatted",
      "formatted string",
      "string code",
      "code expressionString",
      "expressionString should",
      "should be",
      "be formatted",
      "formatted as",
      "as follows",
      "follows br",
      "br Expr",
      "Expr is",
      "is a",
      "a positive",
      "positive integer",
      "integer number",
      "number or",
      "or Op",
      "Op Expr",
      "Expr Expr",
      "Expr br",
      "br where",
      "where Op",
      "Op is",
      "is an",
      "an operation",
      "operation one",
      "one of",
      "of br",
      "br So",
      "So the",
      "the correctly",
      "correctly formatted",
      "formatted string",
      "string is",
      "is Expr",
      "Expr br",
      "br Examples",
      "Examples of",
      "of good",
      "good strings",
      "strings ul",
      "ul li",
      "li 123",
      "123 li",
      "li li",
      "li 2",
      "2 2",
      "2 li",
      "li li",
      "li 4",
      "4 6",
      "6 12",
      "12 li",
      "li ul",
      "ul param",
      "param expressionString",
      "expressionString the",
      "the formatted",
      "formatted string",
      "string throws",
      "throws BadExpressionException",
      "BadExpressionException if",
      "if code",
      "code expressionString",
      "expressionString is",
      "is not",
      "not formatted",
      "formatted properly"
    ],
    "Location": "Expression.java",
    "Content": " Creates an ExpressionTree by a specially-formatted string.{ @code expressionString} should be formatted as follows:\u003cbr\u003eExpr is a positive integer number or (Op Expr Expr)\u003cbr\u003ewhere Op is an operation -- one of (+, -, , ).\u003cbr\u003eSo the correctly-formatted string is Expr.\u003cbr\u003e Examples of good strings:\u003cul\u003e \u003cli\u003e123\u003cli\u003e \u003cli\u003e(+ 2 2)\u003cli\u003e \u003cli\u003e(- ( 4 6) 12)\u003cli\u003e\u003cul\u003e @param expressionString the formatted string @throws BadExpressionException if { @code expressionString} is not formatted properly "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used to",
      "to provide",
      "provide some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashSet"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used to provide some hash function for { @link HashSet}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T value)",
    "Namespace": "sem2.hw6.task2",
    "Range": "134-353",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code value",
      "value Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashSet",
      "HashSet HASH",
      "HASH COUNT",
      "COUNT param",
      "param value",
      "value a",
      "a value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of code",
      "code value"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code value}.Should return an integer from 0 to { @link HashSet#HASH_COUNT}. @param value a value for hashing @return hash of { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashSet\u003cT\u003e implements Set\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "46-187",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The set",
      "set that",
      "that groups",
      "groups its",
      "its elements",
      "elements by",
      "by their",
      "their hashes",
      "hashes so",
      "so it",
      "it becomes",
      "becomes easier",
      "easier to",
      "to find",
      "find one",
      "one of",
      "of them"
    ],
    "Location": "HashSet.java",
    "Content": " The set that groups its elements by their hashes so it becomes easier to find one of them. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public enum TurnResult ",
    "Namespace": "sem2.hw7.task2",
    "Range": "140-246",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The enumeration",
      "enumeration of",
      "of thing",
      "thing that",
      "that could",
      "could happen",
      "happen after",
      "after a",
      "a turn",
      "turn was",
      "was performed"
    ],
    "Location": "TicTacToe.java",
    "Content": " The enumeration of thing that could happen after a turn was performed. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TicTacToe(int N) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1159-1279",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a game",
      "game with",
      "with field",
      "field side",
      "side size",
      "size code",
      "code N",
      "N param",
      "param N",
      "N field",
      "field side",
      "side size"
    ],
    "Location": "TicTacToe.java",
    "Content": " Start a game with field side size \u003d { @code N}. @param N field side size "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TurnResult makeTurn(int i, int j) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1492-1804",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Place next",
      "next cross",
      "cross or",
      "or zero",
      "zero to",
      "to the",
      "the code",
      "code i",
      "i code",
      "code j",
      "j cell",
      "cell param",
      "param i",
      "i the",
      "the row",
      "row where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero param",
      "param j",
      "j the",
      "the column",
      "column where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero return",
      "return An",
      "An link",
      "link TurnResult",
      "TurnResult entity",
      "entity see",
      "see TurnResult"
    ],
    "Location": "TicTacToe.java",
    "Content": " Place next cross or zero to the ({ @code i}, { @code j}) cell. @param i the row where to put the next cross or zero. @param j the column where to put the next cross or zero. @return An { @link TurnResult} entity. @see TurnResult "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ClassPrinter ",
    "Namespace": "sem2.hw7.task1",
    "Range": "54-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that can",
      "can output",
      "output some",
      "some RTTI",
      "RTTI Instead",
      "Instead of",
      "of standard",
      "standard testing",
      "testing which",
      "which is",
      "is inconvenient",
      "inconvenient here",
      "here one",
      "one can",
      "can pass",
      "pass different",
      "different classes",
      "classes into",
      "into print",
      "print statement",
      "statement in",
      "in main",
      "main Some",
      "Some classes",
      "classes to",
      "to check",
      "check are",
      "are declared",
      "declared below",
      "below standard",
      "standard library",
      "library could",
      "could also",
      "also be",
      "be used"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The class that can output some RTTI.Instead of standard testing, which is inconvenient here,one can pass different classes into print() statement in main().Some classes to check are declared below, standard library could also be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static void print(Class\u003c?\u003e clazz) ",
    "Namespace": "sem2.hw7.task1",
    "Range": "6219-6413",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The method",
      "method that",
      "that prints",
      "prints some",
      "some RTTI",
      "RTTI Works",
      "Works with",
      "with classes",
      "classes interfaces",
      "interfaces and",
      "and enums",
      "enums param",
      "param clazz",
      "clazz a",
      "a class",
      "class to",
      "to learn",
      "learn something",
      "something about"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The method that prints some RTTI.Works with classes, interfaces and enums. @param clazz a class to learn something about "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sorters\u003cT extends Comparable\u003cT\u003e\u003e extends RecursiveAction ",
    "Namespace": "sem2.hw8.task2",
    "Range": "141-300",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that provides",
      "provides parallel",
      "parallel and",
      "and non",
      "non parallel",
      "parallel quicksort",
      "quicksort implementations"
    ],
    "Location": "Sorters.java",
    "Content": "The class that provides parallel and non-parallel quicksort implementations. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void parallelSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "951-1211",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList using",
      "using multiple",
      "multiple threads",
      "threads param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} using multiple threads. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void singleThreadSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "1398-1662",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList without",
      "without multithreading",
      "multithreading param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} without multithreading. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class EmptyQueueException extends Exception ",
    "Namespace": "sem2.test1.task1",
    "Range": "27-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "an exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody was",
      "was trying",
      "trying to",
      "to remove",
      "remove an",
      "an element",
      "element form",
      "form an",
      "an empty",
      "empty queue"
    ],
    "Location": "EmptyQueueException.java",
    "Content": " an exception thrown if somebody was trying to remove an element form an empty queue "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void enqueue(T element, int priority)",
    "Namespace": "sem2.test1.task1",
    "Range": "133-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Put an",
      "an code",
      "code element",
      "element with",
      "with code",
      "code priority",
      "priority into",
      "into the",
      "the queue",
      "queue param",
      "param element",
      "element value",
      "value to",
      "to be",
      "be put",
      "put into",
      "into the",
      "the queue",
      "queue param",
      "param priority",
      "priority its",
      "its priority"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Put an { @code element} with { @code priority} into the queue @param element value to be put into the queue @param priority its priority "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "T dequeue() throws EmptyQueueException",
    "Namespace": "sem2.test1.task1",
    "Range": "342-580",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get an",
      "an element",
      "element with",
      "with maximum",
      "maximum priority",
      "priority from",
      "from the",
      "the queue",
      "queue and",
      "and remove",
      "remove it",
      "it throws",
      "throws EmptyQueueException",
      "EmptyQueueException if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty and",
      "and there",
      "there is",
      "is nothing",
      "nothing to",
      "to return",
      "return return",
      "return removed",
      "removed value"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Get an element with maximum priority from the queue and remove it @throws EmptyQueueException if the queue is empty and there is nothing to return @return removed value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.test1.task1",
    "Range": "586-691",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if the",
      "the queue",
      "queue is",
      "is empty"
    ],
    "Location": "PriorityQueue.java",
    "Content": " checks if the queue is empty @return true if the queue is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public CannonBall(long startTime, double x0, double y0, double angle) ",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "703-1073",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Create a",
      "a bullet",
      "bullet with",
      "with all",
      "all necessary",
      "necessary initial",
      "initial parameters",
      "parameters param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the ball",
      "ball is",
      "is being",
      "being fired"
    ],
    "Location": "CannonBall.java",
    "Content": "Create a bullet with all necessary initial parameters @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the ball is being fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract Explosion getExplosion(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "236-599",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown",
      "blown in",
      "in the",
      "the point",
      "point x",
      "x y",
      "y param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion return",
      "return the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown"
    ],
    "Location": "TankBullet.java",
    "Content": "Get the explosion which would happen if the bullet was blown in the point (x, y) @param x x-coord of the point of the generated explosion @param y y-coord of the point of the generated explosion @return the explosion which would happen if the bullet was blown "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void draw(Graphics2D graphics)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "605-756",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the bullet",
      "bullet param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "TankBullet.java",
    "Content": "draw the bullet @param graphics the { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void update(long time)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "762-900",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the bullet",
      "bullet position",
      "position param",
      "param time",
      "time current",
      "current system",
      "system time",
      "time in",
      "in millis"
    ],
    "Location": "TankBullet.java",
    "Content": "Update the bullet position @param time current system time in millis "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX0()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "906-1021",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the initial",
      "initial x",
      "x cooord",
      "cooord return",
      "return the",
      "the initial",
      "initial x",
      "x cooord"
    ],
    "Location": "TankBullet.java",
    "Content": "get the initial x-cooord @return the initial x-cooord "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1027-1167",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current x-coord of the bullet @return the current x-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getY()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1173-1313",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current y-coord of the bullet @return the current y-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract BulletPackage getPackage()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1319-1495",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "form a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet",
      "bullet return",
      "return a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "form a { @link BulletPackage} based on this bullet @return a { @link BulletPackage} based on this bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "166-330",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the current",
      "current state",
      "state of",
      "of explosion",
      "explosion param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Explosion.java",
    "Content": "draw the current state of explosion @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean update(long currentTime)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "337-565",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the explosion",
      "explosion state",
      "state basically",
      "basically the",
      "the sound",
      "sound wave",
      "wave param",
      "param currentTime",
      "currentTime current",
      "current tyme",
      "tyme of",
      "of the",
      "the system",
      "system return",
      "return code",
      "code true",
      "true if",
      "if it",
      "it still",
      "still explodes"
    ],
    "Location": "Explosion.java",
    "Content": "Update the explosion state (basically the sound wave) @param currentTime current tyme of the system @return { @code true} if it still explodes "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean inAffectedZone(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "571-835",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone",
      "zone param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone"
    ],
    "Location": "Explosion.java",
    "Content": "Check if the point is in the affected zone @param x x-coord of the point @param y y-coord of the point @return { @code true} if the point is in the affected zone "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class NoExplosion extends Explosion ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "41-160",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Explosion mock",
      "mock which",
      "which is",
      "is not",
      "not drawn",
      "drawn but",
      "but has",
      "has the",
      "the affection",
      "affection radius"
    ],
    "Location": "NoExplosion.java",
    "Content": "Explosion-mock which is not drawn, but has the affection radius "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics, double angle, double x, double y) ",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "203-524",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the gun",
      "gun param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw into",
      "into param",
      "param angle",
      "angle the",
      "the angle",
      "angle for",
      "for gun",
      "gun to",
      "to be",
      "be placed",
      "placed param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun",
      "gun param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "draw the gun @param graphics the { @link Graphics2D} context to draw into @param angle the angle for gun to be placed @param x x-coord of the root of the gun @param y y-coord of the root of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected abstract Shape getShape()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1149-1315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the basic",
      "basic unrotated",
      "unrotated shape",
      "shape of",
      "of the",
      "the gun",
      "gun return",
      "return link",
      "link Shape",
      "Shape entity",
      "entity which",
      "which id",
      "id the",
      "the shape",
      "shape of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "get the basic unrotated shape of the gun @return { @link Shape} entity which id the shape of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankBullet getBullet(long startTime, double x0, double y0, double angle)",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1321-1704",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Produce a",
      "a bullet",
      "bullet param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the bullet",
      "bullet is",
      "is being",
      "being fired",
      "fired return",
      "return the",
      "the new",
      "new bullet"
    ],
    "Location": "TankGun.java",
    "Content": "Produce a bullet @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the bullet is being fired @return the new bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankGun getNextGun()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1710-1863",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns",
      "guns return",
      "return the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns"
    ],
    "Location": "TankGun.java",
    "Content": "Get the next gun in the list af all guns @return the next gun in the list af all guns "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1667-1803",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draws the",
      "the landscape",
      "landscape param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "Landscape.java",
    "Content": " draws the landscape @param graphics { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getY(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1896-2086",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface",
      "surface param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate for",
      "for which",
      "which we",
      "we need",
      "need its",
      "its height",
      "height return",
      "return y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface"
    ],
    "Location": "Landscape.java",
    "Content": "get the y-coordinate on the surface @param x x-coordinate for which we need its height @return y-coordinate on the surface "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getAngle(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2542-2919",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the angle",
      "angle of",
      "of the",
      "the surface",
      "surface where",
      "where x",
      "x coordinate",
      "coordinate is",
      "is code",
      "code x",
      "x code",
      "code param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate to",
      "to find",
      "find the",
      "the angle",
      "angle return",
      "return the",
      "the angle",
      "angle from",
      "from pi",
      "pi 2",
      "2 pi",
      "pi 2",
      "2 in",
      "in radians",
      "radians If",
      "If the",
      "the height",
      "height is",
      "is growing",
      "growing y",
      "y is",
      "is decreasing",
      "decreasing when",
      "when moving",
      "moving right",
      "right the",
      "the angle",
      "angle is",
      "is positive",
      "positive If",
      "If the",
      "the height",
      "height is",
      "is decreasing",
      "decreasing the",
      "the angle",
      "angle is",
      "is negative"
    ],
    "Location": "Landscape.java",
    "Content": "get the angle of the surface where x-coordinate is \u003ccode\u003ex\u003ccode\u003e @param x x-coordinate to find the angle @return the angle from [-pi2, pi2] in radians. If the heightis growing (y is decreasing) when moving right, the angle is positive.If the height is decreasing, the angle is negative. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInAir(double x, double y) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3209-3466",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground",
      "ground param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground"
    ],
    "Location": "Landscape.java",
    "Content": "Check if the point is over the ground @param x x-coord of the point to check @param y y-coord of the point to check @return { @code true} if the point is over the ground "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class BulletPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "321-523",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "BulletPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class OpponentFinder ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "201-351",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class responsible",
      "responsible for",
      "for connecting",
      "connecting to",
      "to the",
      "the opponent",
      "opponent It",
      "It starts",
      "starts the",
      "the game",
      "game when",
      "when the",
      "the connection",
      "connection is",
      "is established"
    ],
    "Location": "OpponentFinder.java",
    "Content": "The class responsible for connecting to the opponentIt starts the game when the connection is established "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Receiver implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "249-449",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It receives",
      "receives all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the opponent",
      "opponent and",
      "and synchronizes",
      "synchronizes the",
      "the scene",
      "scene according",
      "according to",
      "to it"
    ],
    "Location": "Receiver.java",
    "Content": "The class implementing the conversation to the opponent.It receives all the data from the opponent and synchronizes the scene according to it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Receiver(Tank opponent, TanksGame game, InputStream inputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "587-858",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param opponent",
      "opponent the",
      "the tank",
      "tank to",
      "to be",
      "be updated",
      "updated according",
      "according to",
      "to the",
      "the input",
      "input data",
      "data param",
      "param game",
      "game the",
      "the game",
      "game to",
      "to be",
      "be updated",
      "updated param",
      "param inputStream",
      "inputStream the",
      "the link",
      "link InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data"
    ],
    "Location": "Receiver.java",
    "Content": " @param opponent the tank to be updated according to the input data @param game the game to be updated @param inputStream the { @link InputStream} to get the data "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isDisconnected() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1088-1262",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has stopped",
      "stopped working",
      "working return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has terminated"
    ],
    "Location": "Receiver.java",
    "Content": "Checks if the { @code Receiver} has stopped working @return { @code true} if the { @code Receiver} has terminated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sender implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "265-437",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It gets",
      "gets all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the game",
      "game and",
      "and sends",
      "sends it",
      "it every",
      "every while"
    ],
    "Location": "Sender.java",
    "Content": "The class implementing the conversation to the opponent.It gets all the data from the game and sends it every while "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Sender(Tank tank, OutputStream outputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "542-750",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param tank",
      "tank the",
      "the tank",
      "tank which",
      "which position",
      "position is",
      "is needed",
      "needed to",
      "to be",
      "be sent",
      "sent param",
      "param outputStream",
      "outputStream the",
      "the code",
      "code OutputStream",
      "OutputStream to",
      "to put",
      "put all",
      "all the",
      "the data",
      "data in"
    ],
    "Location": "Sender.java",
    "Content": " @param tank the tank which position is needed to be sent @param outputStream the { @code OutputStream} to put all the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendBulletPackage(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "838-989",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent that",
      "that we",
      "we have",
      "have shot",
      "shot param",
      "param bullet",
      "bullet the",
      "the bullet",
      "bullet we",
      "we shot"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent that we have shot @param bullet the bullet we shot "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendGameEnded() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1450-1588",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent we",
      "we have",
      "have lost",
      "lost the",
      "the game",
      "game Triples",
      "Triples the",
      "the notification",
      "notification to",
      "to be",
      "be sure"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent we have lost the game.Triples the notification to be sure "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TankPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "38-238",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "TankPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isConnected() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "952-1145",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server",
      "server return",
      "return true",
      "true if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server"
    ],
    "Location": "TanksClient.java",
    "Content": "Checks if the client has successfully connected to the server @return { @true} if the client has successfully connected to the server "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public String getErrorMessage() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1185-1338",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "What went",
      "went wrong",
      "wrong if",
      "if something",
      "something did",
      "did return",
      "return the",
      "the message",
      "message with",
      "with the",
      "the description",
      "description of",
      "of the",
      "the error"
    ],
    "Location": "TanksClient.java",
    "Content": "What went wrong (if something did)? @return the message with the description of the error "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public InputStream getInput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1379-1534",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to send",
      "send some",
      "some data",
      "data to",
      "to the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to put",
      "put the",
      "the data",
      "data in"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to send some data to the server @return { @code InputStream} to put the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public OutputStream getOutput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1568-1728",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to get",
      "get some",
      "some data",
      "data from",
      "from the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data",
      "data from"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to get some data from the server @return { @code InputStream} to get the data from "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TanksServer implements Runnable ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "258-516",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A simple",
      "simple data",
      "data passing",
      "passing server",
      "server for",
      "for two",
      "two clients",
      "clients It",
      "It does",
      "does all",
      "all the",
      "the initial",
      "initial conversation",
      "conversation with",
      "with clients",
      "clients When",
      "When it",
      "it establishes",
      "establishes a",
      "a connection",
      "connection with",
      "with two",
      "two clients",
      "clients it",
      "it just",
      "just passes",
      "passes all",
      "all the",
      "the data",
      "data from",
      "from one",
      "one to",
      "to another"
    ],
    "Location": "TanksServer.java",
    "Content": "A simple data-passing server for two clients.It does all the initial conversation with clients.When it establishes a connection with two clients it just passes all the data from one to another "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank(Landscape land, boolean isOpponent, TanksGame game, TankGun gun, int xPos) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1140-1406",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new tank",
      "tank located",
      "located on",
      "on code",
      "code land",
      "land param",
      "param land",
      "land link",
      "link Landscape",
      "Landscape where",
      "where to",
      "to locate",
      "locate our",
      "our new",
      "new tank",
      "tank param",
      "param xPos",
      "xPos our",
      "our tank",
      "tank initial",
      "initial x",
      "x position"
    ],
    "Location": "Tank.java",
    "Content": "Creates new tank located on { @code land} @param land { @link Landscape}, where to locate our new tank @param xPos our tank initial x-position "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getX() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1558-1680",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank",
      "tank return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the tank @return the x-coordinate of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterX(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1713-2061",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the x-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterY(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2125-2473",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the y",
      "y coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the y",
      "y coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the y-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the y-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void shoot() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2975-3076",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a bullet",
      "bullet to",
      "to the",
      "the game",
      "game based",
      "based on",
      "on the",
      "the current",
      "current tank",
      "tank state"
    ],
    "Location": "Tank.java",
    "Content": "Add a bullet to the game based on the current tank state "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3542-3723",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the tank",
      "tank into",
      "into the",
      "the code",
      "code graphics",
      "graphics param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Tank.java",
    "Content": "draw the tank into the { @code graphics} @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void move(long ms) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "5591-5841",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update all",
      "all necessary",
      "necessary parameters",
      "parameters to",
      "to move",
      "move the",
      "the tank",
      "tank according",
      "according to",
      "to how",
      "how much",
      "much time",
      "time has",
      "has passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation param",
      "param ms",
      "ms time",
      "time passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation in",
      "in milliseconds"
    ],
    "Location": "Tank.java",
    "Content": "update all necessary parameters to move the tank according tohow much time has passed since the last updation @param ms time passed since the last updation in milliseconds "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized TankPackage getPosition() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7193-7408",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank",
      "tank return",
      "return the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "get the { @link TankPackage} object with actual data about the tank @return the { @link TankPackage} object with actual data about the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void updatePosition(TankPackage tankPackage) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7616-7933",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update position",
      "position based",
      "based on",
      "on the",
      "the code",
      "code tankPackage",
      "tankPackage while",
      "while our",
      "our tank",
      "tank is",
      "is updated",
      "updated based",
      "based on",
      "on key",
      "key presses",
      "presses the",
      "the opponent",
      "opponent one",
      "one is",
      "is updated",
      "updated by",
      "by calling",
      "calling this",
      "this method",
      "method param",
      "param tankPackage",
      "tankPackage information",
      "information about",
      "about the",
      "the new",
      "new position",
      "position of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "update position based on the { @code tankPackage}while our tank is updated based on key presses, the opponent one is updated by calling this method @param tankPackage information about the new position of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TanksGame(long startTime, boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1620-2092",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new code",
      "code TankGame",
      "TankGame with",
      "with 2",
      "2 tanks",
      "tanks with",
      "with x",
      "x coords",
      "coords set",
      "set to",
      "to 100",
      "100 and",
      "and to",
      "to 500",
      "500 respectively",
      "respectively param",
      "param startTime",
      "startTime System",
      "System time",
      "time when",
      "when the",
      "the game",
      "game is",
      "is being",
      "being init",
      "init param",
      "param isSecondPlayer",
      "isSecondPlayer code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are the",
      "the tank",
      "tank with",
      "with x",
      "x coord",
      "coord set",
      "set to",
      "to 500",
      "500 param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksGame.java",
    "Content": "Creates new { @code TankGame} with 2 tanks with x-coords set to 100 and to 500 respectively @param startTime System time when the game is being init @param isSecondPlayer { @code true} if we are the tank with x-coord set to 500 @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2944-3120",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered ours",
      "ours param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered ours @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addOpponentBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3256-3446",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered opponent\u0027s",
      "opponent\u0027s param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered opponent\u0027s @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void handleOpponentShoot(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3545-3882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A method",
      "method that",
      "that is",
      "is used",
      "used by",
      "by link",
      "link Receiver",
      "Receiver to",
      "to add",
      "add a",
      "a bullet",
      "bullet smartly",
      "smartly It",
      "It discards",
      "discards bad",
      "bad bullets",
      "bullets and",
      "and can",
      "can manually",
      "manually create",
      "create the",
      "the one",
      "one lost",
      "lost with",
      "with loosing",
      "loosing a",
      "a bit",
      "bit of",
      "of precision",
      "precision param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add",
      "add if",
      "if null",
      "null the",
      "the bullet",
      "bullet will",
      "will be",
      "be created",
      "created manually"
    ],
    "Location": "TanksGame.java",
    "Content": "A method that is used by { @link Receiver} to add a bullet smartlyIt discards bad bullets and can manually create the one lost with loosing a bit of precision @param bullet a bullet to add; if null, the bullet will be created manually "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void handleGunChanged() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4396-4497",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Used by",
      "by our",
      "our tank",
      "tank to",
      "to notify",
      "notify the",
      "the gun",
      "gun is",
      "is changed"
    ],
    "Location": "TanksGame.java",
    "Content": "Used by our tank to notify the gun is changed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public KeyListener getKeyListener() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4542-4710",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses",
      "presses return",
      "return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses"
    ],
    "Location": "TanksGame.java",
    "Content": "Return the tank that will handle with key presses @return the tank that will handle with key presses "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7591-7749",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Draw the",
      "the whole",
      "whole scene",
      "scene param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "TanksGame.java",
    "Content": "Draw the whole scene @param graphics { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean cycle(long time) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "8109-8283",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the scene",
      "scene param",
      "param time",
      "time current",
      "current time",
      "time in",
      "in millis",
      "millis return",
      "return code",
      "code true",
      "true if",
      "if there",
      "there is",
      "is anything",
      "anything to",
      "to update"
    ],
    "Location": "TanksGame.java",
    "Content": "Update the scene @param time current time in millis @return { @code true} if there is anything to update "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank getWinnerTank() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "9114-9278",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the winner",
      "winner tank",
      "tank Do",
      "Do not",
      "not use",
      "use when",
      "when the",
      "the game",
      "game is",
      "is not",
      "not finished",
      "finished return",
      "return the",
      "the tank",
      "tank which",
      "which won",
      "won the",
      "the game"
    ],
    "Location": "TanksGame.java",
    "Content": "Get the winner tankDo not use when the game is not finished. @return the tank which won the game "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isWaiting() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3162-3315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent",
      "opponent return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are waiting for an opponent @return { @code true} if we are waiting for an opponent "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInGame() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3375-3503",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are playing",
      "playing now",
      "now return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are playing",
      "playing now"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are playing now @return { @code true} if we are playing now "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void startGame(boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3554-3935",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a new",
      "new game",
      "game Expects",
      "Expects that",
      "that the",
      "the connection",
      "connection to",
      "to our",
      "our opponent",
      "opponent has",
      "has already",
      "already been",
      "been established",
      "established param",
      "param isSecondPlayer",
      "isSecondPlayer are",
      "are we",
      "we the",
      "the right",
      "right player",
      "player on",
      "on start",
      "start param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksPanel.java",
    "Content": "Start a new gameExpects that the connection to our opponent has already been established @param isSecondPlayer are we the right player on start? @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "1c820199fc3155c2949aaebe50ae7872883ab9e9",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2018-05-25T12:47:40Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw2.task2",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw2.task2",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected \u003cT extends Comparable\u003cT\u003e\u003e void swap(T[] array, int i, int j) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "116-456",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Swaps two",
      "two elements",
      "elements in",
      "in the",
      "the array",
      "array param",
      "param array",
      "array an",
      "an array",
      "array where",
      "where swapping",
      "swapping is",
      "is done",
      "done param",
      "param i",
      "i index",
      "index of",
      "of the",
      "the first",
      "first element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param j",
      "j index",
      "index of",
      "of the",
      "the second",
      "second element",
      "element in",
      "in the",
      "the array",
      "array param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "BaseSorter.java",
    "Content": "Swaps two elements in the array @param array an array where swapping is done @param i index of the first element in the array @param j index of the second element in the array @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT extends Comparable\u003cT\u003e\u003e boolean isSorted(T[] array) ",
    "Namespace": "sem2.hw3.task1",
    "Range": "549-868",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether an",
      "an array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order",
      "order param",
      "param array",
      "array an",
      "an array",
      "array which",
      "which is",
      "is being",
      "being checked",
      "checked param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array",
      "array return",
      "return code",
      "code true",
      "true if",
      "if code",
      "code array",
      "array is",
      "is sorted",
      "sorted in",
      "in ascending",
      "ascending order"
    ],
    "Location": "BaseSorter.java",
    "Content": "Checks whether an array is sorted in ascending order @param array an array which is being checked @param \u003cT\u003e type of elements in the array @return { @code true} if { @code array} is sorted in ascending order "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "\u003cT extends Comparable\u003cT\u003e\u003e void sort(T[] array)",
    "Namespace": "sem2.hw3.task1",
    "Range": "105-334",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Sorts code",
      "code array",
      "array in",
      "in ascending",
      "ascending order",
      "order using",
      "using link",
      "link Comparable",
      "Comparable compareTo",
      "compareTo param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T",
      "T type",
      "type of",
      "of elements",
      "elements in",
      "in the",
      "the array"
    ],
    "Location": "Sorter.java",
    "Content": "Sorts { @code array} in ascending order using { @link Comparable#compareTo} @param array an array to sort @param \u003cT\u003e type of elements in the array "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ConsoleSpiralOutputter extends DefaultSpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "25-165",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Table spiral",
      "spiral outputter",
      "outputter using",
      "using link",
      "link System",
      "System out",
      "out as",
      "as a",
      "a destination"
    ],
    "Location": "ConsoleSpiralOutputter.java",
    "Content": " Table spiral outputter using { @link System#out} as a destination "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract class DefaultSpiralOutputter implements SpiralOutputter ",
    "Namespace": "sem2.hw3.task2",
    "Range": "54-267",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Default SpiralOutputter",
      "SpiralOutputter implementation",
      "implementation Can",
      "Can output",
      "output a",
      "a table",
      "table to",
      "to any",
      "any link",
      "link PrintStream",
      "PrintStream including",
      "including System",
      "System out",
      "out and",
      "and any",
      "any file"
    ],
    "Location": "DefaultSpiralOutputter.java",
    "Content": "Default SpiralOutputter implementation.Can output a table to any { @link PrintStream}including System.out and any file."
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public FileSpiralOutputter(String fileName) throws FileNotFoundException ",
    "Namespace": "sem2.hw3.task2",
    "Range": "208-511",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates outputter",
      "outputter associated",
      "associated with",
      "with file",
      "file named",
      "named code",
      "code fileName",
      "fileName param",
      "param fileName",
      "fileName name",
      "name of",
      "of the",
      "the file",
      "file to",
      "to output",
      "output the",
      "the table",
      "table in",
      "in throws",
      "throws FileNotFoundException",
      "FileNotFoundException if",
      "if no",
      "no file",
      "file named",
      "named code",
      "code fileName",
      "fileName was",
      "was found"
    ],
    "Location": "FileSpiralOutputter.java",
    "Content": "Creates outputter associated with file named { @code fileName} @param fileName name of the file to output the table in @throws FileNotFoundException if no file named { @code fileName} was found "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void outputSpirally(int[][] table)",
    "Namespace": "sem2.hw3.task2",
    "Range": "114-241",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Outputs code",
      "code table",
      "table spirally",
      "spirally param",
      "param table",
      "table a",
      "a table",
      "table to",
      "to output"
    ],
    "Location": "SpiralOutputter.java",
    "Content": "Outputs { @code table} spirally @param table a table to output "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-134",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used for",
      "for providing",
      "providing some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashTable"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used for providing some hash function for { @link HashTable}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T key)",
    "Namespace": "sem2.hw4.task2",
    "Range": "139-357",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code key",
      "key Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashTable",
      "HashTable hashCount",
      "hashCount param",
      "param key",
      "key the",
      "the value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of the",
      "the code",
      "code key"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code key}.Should return an integer from 0 to { @link HashTable#hashCount}. @param key the value for hashing @return hash of the { @code key} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int getBadHash() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "288-420",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated",
      "generated return",
      "return bad",
      "bad hash",
      "hash that",
      "that was",
      "was generated"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": "Returns the bad hash that was generated. @return bad hash that was generated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashTable\u003cK, V\u003e implements Iterable\u003cV\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "122-428",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Hash table",
      "table that",
      "that allows",
      "allows adding",
      "adding values",
      "values of",
      "of the",
      "the type",
      "type code",
      "code V",
      "V associated",
      "associated with",
      "with keys",
      "keys of",
      "of the",
      "the type",
      "type code",
      "code K",
      "K Hash",
      "Hash function",
      "function should",
      "should be",
      "be provided",
      "provided by",
      "by client",
      "client an",
      "an can",
      "can be",
      "be changed",
      "changed in",
      "in runtime",
      "runtime param",
      "param K",
      "K the",
      "the type",
      "type of",
      "of keys",
      "keys param",
      "param V",
      "V the",
      "the type",
      "type of",
      "of values"
    ],
    "Location": "HashTable.java",
    "Content": "Hash table that allows adding values of the type { @code V} associated with keys of the type { @code K}Hash function should be provided by client an can be changed in runtime. @param \u003cK\u003e the type of keys @param \u003cV\u003e the type of values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void add(K key, V value) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2128-2520",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds the",
      "the code",
      "code value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key to",
      "to the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key for",
      "for the",
      "the value",
      "value to",
      "to be",
      "be associated",
      "associated with",
      "with param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be added",
      "added throws",
      "throws KeyAlreadyExistsException",
      "KeyAlreadyExistsException if",
      "if the",
      "the code",
      "code key",
      "key already",
      "already exists",
      "exists in",
      "in the",
      "the table",
      "table throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Adds the { @code value} associated with the { @code key} to the set. @param key the key for the value to be associated with @param value the value to be added @throws KeyAlreadyExistsException if the { @code key} already exists in the table @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "2884-3195",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes the",
      "the value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key from",
      "from the",
      "the set",
      "set Does",
      "Does nothing",
      "nothing in",
      "in case",
      "case of",
      "of not",
      "not founding",
      "founding this",
      "this key",
      "key in",
      "in the",
      "the set",
      "set param",
      "param key",
      "key the",
      "the key",
      "key to",
      "to be",
      "be removed",
      "removed with",
      "with its",
      "its value",
      "value throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Removes the value associated with the { @code key} from the set.Does nothing in case of not founding this key in the set. @param key the key to be removed with its value @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean doesContain(K key) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "3622-3912",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the set",
      "set contains",
      "contains a",
      "a value",
      "value associated",
      "associated with",
      "with the",
      "the code",
      "code key",
      "key param",
      "param key",
      "key the",
      "the value",
      "value to",
      "to search",
      "search for",
      "for return",
      "return true",
      "true if",
      "if code",
      "code key",
      "key was",
      "was found",
      "found throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Checks if the set contains a value associated with the { @code key}. @param key the value to search for @return true if { @code key} was found @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void setHasher(Hasher\u003cK\u003e newHasher) ",
    "Namespace": "sem2.hw4.task2",
    "Range": "4258-4501",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Change used",
      "used hash",
      "hash function",
      "function param",
      "param newHasher",
      "newHasher object",
      "object that",
      "that implements",
      "implements link",
      "link Hasher",
      "Hasher interface",
      "interface throws",
      "throws HashOutOfRangeException",
      "HashOutOfRangeException if",
      "if hash",
      "hash function",
      "function provided",
      "provided a",
      "a bad",
      "bad value"
    ],
    "Location": "HashTable.java",
    "Content": "Change used hash function. @param newHasher object that implements { @link Hasher} interface @throws HashOutOfRangeException if hash function provided a bad value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int size() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5083-5186",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Size of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Size of the set. @return number of objects in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double loadFactor() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5219-5370",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Load factor",
      "factor of",
      "of the",
      "the set",
      "set return",
      "return number",
      "number of",
      "of objects",
      "objects divided",
      "divided by",
      "by number",
      "number of",
      "of different",
      "different hash",
      "hash values"
    ],
    "Location": "HashTable.java",
    "Content": "Load factor of the set. @return number of objects divided by number of different hash values "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public int maxListLength() ",
    "Namespace": "sem2.hw4.task2",
    "Range": "5420-5591",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set",
      "set return",
      "return the",
      "the length",
      "length of",
      "of the",
      "the maximum",
      "maximum sized",
      "sized list",
      "list in",
      "in the",
      "the set"
    ],
    "Location": "HashTable.java",
    "Content": "Returns the length of the maximum-sized list in the set. @return the length of the maximum-sized list in the set "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class KeyAlreadyExistsException extends RuntimeException ",
    "Namespace": "sem2.hw4.task2",
    "Range": "25-203",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody wants",
      "wants to",
      "to link",
      "link sem2",
      "sem2 hw4",
      "hw4 task2",
      "task2 HashTable",
      "HashTable add",
      "add an",
      "an existing",
      "existing key",
      "key to",
      "to a",
      "a table"
    ],
    "Location": "KeyAlreadyExistsException.java",
    "Content": " An exception thrown if somebody wants to { @link sem2.hw4.task2.HashTable#add} an existing key to a table. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "106-233",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "239-359",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list. @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void remove(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "365-539",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list If",
      "If the",
      "the value",
      "value was",
      "was not",
      "not found",
      "found does",
      "does nothing",
      "nothing param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed"
    ],
    "Location": "List.java",
    "Content": "Removes { @code value} from the list.If the value was not found, does nothing. @param value the value to be removed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean doesContain(T value)",
    "Namespace": "sem2.hw4.task2",
    "Range": "545-737",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value",
      "value param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to look",
      "look for",
      "for return",
      "return true",
      "true if",
      "if the",
      "the list",
      "list contains",
      "contains code",
      "code value"
    ],
    "Location": "List.java",
    "Content": "Checks if the list contains { @code value}. @param value the value to look for @return true if the list contains { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task2",
    "Range": "790-882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "Get the size of the list. @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task2",
    "Range": "888-1004",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "Checks whether our list is empty. @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class SinglyLinkedList\u003cT\u003e implements List\u003cT\u003e ",
    "Namespace": "sem2.hw4.task2",
    "Range": "94-303",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Singly linked",
      "linked list",
      "list implementation",
      "implementation Can",
      "Can be",
      "be iterated",
      "iterated through",
      "through using",
      "using foreach",
      "foreach iterator",
      "iterator implementation",
      "implementation supports",
      "supports link",
      "link java",
      "java util",
      "util Iterator",
      "Iterator remove"
    ],
    "Location": "SinglyLinkedList.java",
    "Content": " Singly-linked list implementation.Can be iterated through using foreach, iterator implementationsupports { @link java.util.Iterator#remove}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "105-231",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void addLast(T value)",
    "Namespace": "sem2.hw4.task1",
    "Range": "237-356",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the end",
      "end of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the end of the list @param value the thing you add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int size()",
    "Namespace": "sem2.hw4.task1",
    "Range": "408-499",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the size",
      "size of",
      "of the",
      "the list",
      "list return",
      "return size",
      "size of",
      "of the",
      "the list"
    ],
    "Location": "List.java",
    "Content": "get the size of the list @return size of the list "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.hw4.task1",
    "Range": "505-620",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks whether",
      "whether our",
      "our list",
      "list is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if our",
      "our list",
      "list is",
      "is empty"
    ],
    "Location": "List.java",
    "Content": "checks whether our list is empty @return true if our list is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class UniqueList\u003cT\u003e extends SinglyLinkedList\u003cT\u003e ",
    "Namespace": "sem2.hw4.task1",
    "Range": "53-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A list",
      "list where",
      "where every",
      "every element",
      "element could",
      "could be",
      "be present",
      "present only",
      "only once"
    ],
    "Location": "UniqueList.java",
    "Content": " A list where every element could be present only once "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addFirst(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "396-527",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already have",
      "have code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already have { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void addLast(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "652-786",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "throws ElementReaddedException",
      "ElementReaddedException if",
      "if the",
      "the list",
      "list already",
      "already contains",
      "contains code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": " @throws ElementReaddedException if the list already contains { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void remove(T value) ",
    "Namespace": "sem2.hw4.task1",
    "Range": "910-1129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Removes code",
      "code value",
      "value from",
      "from the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the value",
      "value to",
      "to be",
      "be removed",
      "removed throws",
      "throws NoSuchElementException",
      "NoSuchElementException if",
      "if the",
      "the list",
      "list does",
      "does not",
      "not contain",
      "contain code",
      "code value",
      "value in",
      "in it"
    ],
    "Location": "UniqueList.java",
    "Content": "Removes { @code value} from the list @param value the value to be removed @throws NoSuchElementException if the list does not contain { @code value} in it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Expression(String expressionString) throws BadExpressionException ",
    "Namespace": "sem2.hw6.task1",
    "Range": "2059-2740",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates an",
      "an ExpressionTree",
      "ExpressionTree by",
      "by a",
      "a specially",
      "specially formatted",
      "formatted string",
      "string code",
      "code expressionString",
      "expressionString should",
      "should be",
      "be formatted",
      "formatted as",
      "as follows",
      "follows br",
      "br Expr",
      "Expr is",
      "is a",
      "a positive",
      "positive integer",
      "integer number",
      "number or",
      "or Op",
      "Op Expr",
      "Expr Expr",
      "Expr br",
      "br where",
      "where Op",
      "Op is",
      "is an",
      "an operation",
      "operation one",
      "one of",
      "of br",
      "br So",
      "So the",
      "the correctly",
      "correctly formatted",
      "formatted string",
      "string is",
      "is Expr",
      "Expr br",
      "br Examples",
      "Examples of",
      "of good",
      "good strings",
      "strings ul",
      "ul li",
      "li 123",
      "123 li",
      "li li",
      "li 2",
      "2 2",
      "2 li",
      "li li",
      "li 4",
      "4 6",
      "6 12",
      "12 li",
      "li ul",
      "ul param",
      "param expressionString",
      "expressionString the",
      "the formatted",
      "formatted string",
      "string throws",
      "throws BadExpressionException",
      "BadExpressionException if",
      "if code",
      "code expressionString",
      "expressionString is",
      "is not",
      "not formatted",
      "formatted properly"
    ],
    "Location": "Expression.java",
    "Content": " Creates an ExpressionTree by a specially-formatted string.{ @code expressionString} should be formatted as follows:\u003cbr\u003eExpr is a positive integer number or (Op Expr Expr)\u003cbr\u003ewhere Op is an operation -- one of (+, -, , ).\u003cbr\u003eSo the correctly-formatted string is Expr.\u003cbr\u003e Examples of good strings:\u003cul\u003e \u003cli\u003e123\u003cli\u003e \u003cli\u003e(+ 2 2)\u003cli\u003e \u003cli\u003e(- ( 4 6) 12)\u003cli\u003e\u003cul\u003e @param expressionString the formatted string @throws BadExpressionException if { @code expressionString} is not formatted properly "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public interface Hasher\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-129",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An interface",
      "interface used",
      "used to",
      "to provide",
      "provide some",
      "some hash",
      "hash function",
      "function for",
      "for link",
      "link HashSet"
    ],
    "Location": "Hasher.java",
    "Content": " An interface used to provide some hash function for { @link HashSet}. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "int hash(T value)",
    "Namespace": "sem2.hw6.task2",
    "Range": "134-353",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Returns hash",
      "hash of",
      "of code",
      "code value",
      "value Should",
      "Should return",
      "return an",
      "an integer",
      "integer from",
      "from 0",
      "0 to",
      "to link",
      "link HashSet",
      "HashSet HASH",
      "HASH COUNT",
      "COUNT param",
      "param value",
      "value a",
      "a value",
      "value for",
      "for hashing",
      "hashing return",
      "return hash",
      "hash of",
      "of code",
      "code value"
    ],
    "Location": "Hasher.java",
    "Content": "Returns hash of { @code value}.Should return an integer from 0 to { @link HashSet#HASH_COUNT}. @param value a value for hashing @return hash of { @code value} "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashOutOfRangeException extends RuntimeException ",
    "Namespace": "sem2.hw6.task2",
    "Range": "25-169",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "An exception",
      "exception thrown",
      "thrown if",
      "if hash",
      "hash returned",
      "returned by",
      "by link",
      "link Hasher",
      "Hasher could",
      "could not",
      "not be",
      "be used"
    ],
    "Location": "HashOutOfRangeException.java",
    "Content": " An exception thrown if hash returned by { @link Hasher} could not be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class HashSet\u003cT\u003e implements Set\u003cT\u003e ",
    "Namespace": "sem2.hw6.task2",
    "Range": "46-187",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The set",
      "set that",
      "that groups",
      "groups its",
      "its elements",
      "elements by",
      "by their",
      "their hashes",
      "hashes so",
      "so it",
      "it becomes",
      "becomes easier",
      "easier to",
      "to find",
      "find one",
      "one of",
      "of them"
    ],
    "Location": "HashSet.java",
    "Content": " The set that groups its elements by their hashes so it becomes easier to find one of them. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public enum TurnResult ",
    "Namespace": "sem2.hw7.task2",
    "Range": "140-246",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The enumeration",
      "enumeration of",
      "of thing",
      "thing that",
      "that could",
      "could happen",
      "happen after",
      "after a",
      "a turn",
      "turn was",
      "was performed"
    ],
    "Location": "TicTacToe.java",
    "Content": " The enumeration of thing that could happen after a turn was performed. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TicTacToe(int N) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1159-1279",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a game",
      "game with",
      "with field",
      "field side",
      "side size",
      "size code",
      "code N",
      "N param",
      "param N",
      "N field",
      "field side",
      "side size"
    ],
    "Location": "TicTacToe.java",
    "Content": " Start a game with field side size \u003d { @code N}. @param N field side size "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TurnResult makeTurn(int i, int j) ",
    "Namespace": "sem2.hw7.task2",
    "Range": "1492-1804",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Place next",
      "next cross",
      "cross or",
      "or zero",
      "zero to",
      "to the",
      "the code",
      "code i",
      "i code",
      "code j",
      "j cell",
      "cell param",
      "param i",
      "i the",
      "the row",
      "row where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero param",
      "param j",
      "j the",
      "the column",
      "column where",
      "where to",
      "to put",
      "put the",
      "the next",
      "next cross",
      "cross or",
      "or zero",
      "zero return",
      "return An",
      "An link",
      "link TurnResult",
      "TurnResult entity",
      "entity see",
      "see TurnResult"
    ],
    "Location": "TicTacToe.java",
    "Content": " Place next cross or zero to the ({ @code i}, { @code j}) cell. @param i the row where to put the next cross or zero. @param j the column where to put the next cross or zero. @return An { @link TurnResult} entity. @see TurnResult "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class ClassPrinter ",
    "Namespace": "sem2.hw7.task1",
    "Range": "54-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that can",
      "can output",
      "output some",
      "some RTTI",
      "RTTI Instead",
      "Instead of",
      "of standard",
      "standard testing",
      "testing which",
      "which is",
      "is inconvenient",
      "inconvenient here",
      "here one",
      "one can",
      "can pass",
      "pass different",
      "different classes",
      "classes into",
      "into print",
      "print statement",
      "statement in",
      "in main",
      "main Some",
      "Some classes",
      "classes to",
      "to check",
      "check are",
      "are declared",
      "declared below",
      "below standard",
      "standard library",
      "library could",
      "could also",
      "also be",
      "be used"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The class that can output some RTTI.Instead of standard testing, which is inconvenient here,one can pass different classes into print() statement in main().Some classes to check are declared below, standard library could also be used. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static void print(Class\u003c?\u003e clazz) ",
    "Namespace": "sem2.hw7.task1",
    "Range": "6219-6413",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The method",
      "method that",
      "that prints",
      "prints some",
      "some RTTI",
      "RTTI Works",
      "Works with",
      "with classes",
      "classes interfaces",
      "interfaces and",
      "and enums",
      "enums param",
      "param clazz",
      "clazz a",
      "a class",
      "class to",
      "to learn",
      "learn something",
      "something about"
    ],
    "Location": "ClassPrinter.java",
    "Content": " The method that prints some RTTI.Works with classes, interfaces and enums. @param clazz a class to learn something about "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sorters\u003cT extends Comparable\u003cT\u003e\u003e extends RecursiveAction ",
    "Namespace": "sem2.hw8.task2",
    "Range": "141-300",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class that",
      "that provides",
      "provides parallel",
      "parallel and",
      "and non",
      "non parallel",
      "parallel quicksort",
      "quicksort implementations"
    ],
    "Location": "Sorters.java",
    "Content": "The class that provides parallel and non-parallel quicksort implementations. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void parallelSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "951-1211",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList using",
      "using multiple",
      "multiple threads",
      "threads param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} using multiple threads. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public static \u003cT1 extends Comparable\u003cT1\u003e\u003e void singleThreadSort(ArrayList\u003cT1\u003e array) ",
    "Namespace": "sem2.hw8.task2",
    "Range": "1398-1662",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Perform the",
      "the quicksort",
      "quicksort of",
      "of an",
      "an link",
      "link ArrayList",
      "ArrayList without",
      "without multithreading",
      "multithreading param",
      "param array",
      "array an",
      "an array",
      "array to",
      "to sort",
      "sort param",
      "param T1",
      "T1 the",
      "the type",
      "type of",
      "of array\u0027s",
      "array\u0027s elements"
    ],
    "Location": "Sorters.java",
    "Content": "Perform the quicksort of an { @link ArrayList} without multithreading. @param array an array to sort @param \u003cT1\u003e the type of array\u0027s elements "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class EmptyQueueException extends Exception ",
    "Namespace": "sem2.test1.task1",
    "Range": "27-170",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "an exception",
      "exception thrown",
      "thrown if",
      "if somebody",
      "somebody was",
      "was trying",
      "trying to",
      "to remove",
      "remove an",
      "an element",
      "element form",
      "form an",
      "an empty",
      "empty queue"
    ],
    "Location": "EmptyQueueException.java",
    "Content": " an exception thrown if somebody was trying to remove an element form an empty queue "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "void enqueue(T element, int priority)",
    "Namespace": "sem2.test1.task1",
    "Range": "133-336",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Put an",
      "an code",
      "code element",
      "element with",
      "with code",
      "code priority",
      "priority into",
      "into the",
      "the queue",
      "queue param",
      "param element",
      "element value",
      "value to",
      "to be",
      "be put",
      "put into",
      "into the",
      "the queue",
      "queue param",
      "param priority",
      "priority its",
      "its priority"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Put an { @code element} with { @code priority} into the queue @param element value to be put into the queue @param priority its priority "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "T dequeue() throws EmptyQueueException",
    "Namespace": "sem2.test1.task1",
    "Range": "342-580",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get an",
      "an element",
      "element with",
      "with maximum",
      "maximum priority",
      "priority from",
      "from the",
      "the queue",
      "queue and",
      "and remove",
      "remove it",
      "it throws",
      "throws EmptyQueueException",
      "EmptyQueueException if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty and",
      "and there",
      "there is",
      "is nothing",
      "nothing to",
      "to return",
      "return return",
      "return removed",
      "removed value"
    ],
    "Location": "PriorityQueue.java",
    "Content": " Get an element with maximum priority from the queue and remove it @throws EmptyQueueException if the queue is empty and there is nothing to return @return removed value "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "boolean isEmpty()",
    "Namespace": "sem2.test1.task1",
    "Range": "586-691",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "checks if",
      "if the",
      "the queue",
      "queue is",
      "is empty",
      "empty return",
      "return true",
      "true if",
      "if the",
      "the queue",
      "queue is",
      "is empty"
    ],
    "Location": "PriorityQueue.java",
    "Content": " checks if the queue is empty @return true if the queue is empty "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public CannonBall(long startTime, double x0, double y0, double angle) ",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "703-1073",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Create a",
      "a bullet",
      "bullet with",
      "with all",
      "all necessary",
      "necessary initial",
      "initial parameters",
      "parameters param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the ball",
      "ball is",
      "is being",
      "being fired"
    ],
    "Location": "CannonBall.java",
    "Content": "Create a bullet with all necessary initial parameters @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the ball is being fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract Explosion getExplosion(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "236-599",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown",
      "blown in",
      "in the",
      "the point",
      "point x",
      "x y",
      "y param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point of",
      "of the",
      "the generated",
      "generated explosion",
      "explosion return",
      "return the",
      "the explosion",
      "explosion which",
      "which would",
      "would happen",
      "happen if",
      "if the",
      "the bullet",
      "bullet was",
      "was blown"
    ],
    "Location": "TankBullet.java",
    "Content": "Get the explosion which would happen if the bullet was blown in the point (x, y) @param x x-coord of the point of the generated explosion @param y y-coord of the point of the generated explosion @return the explosion which would happen if the bullet was blown "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void draw(Graphics2D graphics)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "605-756",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the bullet",
      "bullet param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "TankBullet.java",
    "Content": "draw the bullet @param graphics the { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract void update(long time)",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "762-900",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the bullet",
      "bullet position",
      "position param",
      "param time",
      "time current",
      "current system",
      "system time",
      "time in",
      "in millis"
    ],
    "Location": "TankBullet.java",
    "Content": "Update the bullet position @param time current system time in millis "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX0()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "906-1021",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the initial",
      "initial x",
      "x cooord",
      "cooord return",
      "return the",
      "the initial",
      "initial x",
      "x cooord"
    ],
    "Location": "TankBullet.java",
    "Content": "get the initial x-cooord @return the initial x-cooord "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getX()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1027-1167",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current x",
      "x coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current x-coord of the bullet @return the current x-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract double getY()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1173-1313",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet",
      "bullet return",
      "return the",
      "the current",
      "current y",
      "y coord",
      "coord of",
      "of the",
      "the bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "get the current y-coord of the bullet @return the current y-coord of the bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract BulletPackage getPackage()",
    "Namespace": "sem3.hw3.task2.ammu.bullets",
    "Range": "1319-1495",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "form a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet",
      "bullet return",
      "return a",
      "a link",
      "link BulletPackage",
      "BulletPackage based",
      "based on",
      "on this",
      "this bullet"
    ],
    "Location": "TankBullet.java",
    "Content": "form a { @link BulletPackage} based on this bullet @return a { @link BulletPackage} based on this bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "166-330",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the current",
      "current state",
      "state of",
      "of explosion",
      "explosion param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Explosion.java",
    "Content": "draw the current state of explosion @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean update(long currentTime)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "337-565",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the explosion",
      "explosion state",
      "state basically",
      "basically the",
      "the sound",
      "sound wave",
      "wave param",
      "param currentTime",
      "currentTime current",
      "current tyme",
      "tyme of",
      "of the",
      "the system",
      "system return",
      "return code",
      "code true",
      "true if",
      "if it",
      "it still",
      "still explodes"
    ],
    "Location": "Explosion.java",
    "Content": "Update the explosion state (basically the sound wave) @param currentTime current tyme of the system @return { @code true} if it still explodes "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract boolean inAffectedZone(double x, double y)",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "571-835",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone",
      "zone param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is in",
      "in the",
      "the affected",
      "affected zone"
    ],
    "Location": "Explosion.java",
    "Content": "Check if the point is in the affected zone @param x x-coord of the point @param y y-coord of the point @return { @code true} if the point is in the affected zone "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class NoExplosion extends Explosion ",
    "Namespace": "sem3.hw3.task2.ammu.explosions",
    "Range": "41-160",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Explosion mock",
      "mock which",
      "which is",
      "is not",
      "not drawn",
      "drawn but",
      "but has",
      "has the",
      "the affection",
      "affection radius"
    ],
    "Location": "NoExplosion.java",
    "Content": "Explosion-mock which is not drawn, but has the affection radius "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics, double angle, double x, double y) ",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "203-524",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the gun",
      "gun param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw into",
      "into param",
      "param angle",
      "angle the",
      "the angle",
      "angle for",
      "for gun",
      "gun to",
      "to be",
      "be placed",
      "placed param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun",
      "gun param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the root",
      "root of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "draw the gun @param graphics the { @link Graphics2D} context to draw into @param angle the angle for gun to be placed @param x x-coord of the root of the gun @param y y-coord of the root of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "protected abstract Shape getShape()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1149-1315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the basic",
      "basic unrotated",
      "unrotated shape",
      "shape of",
      "of the",
      "the gun",
      "gun return",
      "return link",
      "link Shape",
      "Shape entity",
      "entity which",
      "which id",
      "id the",
      "the shape",
      "shape of",
      "of the",
      "the gun"
    ],
    "Location": "TankGun.java",
    "Content": "get the basic unrotated shape of the gun @return { @link Shape} entity which id the shape of the gun "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankBullet getBullet(long startTime, double x0, double y0, double angle)",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1321-1704",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Produce a",
      "a bullet",
      "bullet param",
      "param startTime",
      "startTime time",
      "time when",
      "when the",
      "the bullet",
      "bullet was",
      "was shot",
      "shot param",
      "param x0",
      "x0 starting",
      "starting x",
      "x coordinate",
      "coordinate param",
      "param y0",
      "y0 starting",
      "starting y",
      "y coordinate",
      "coordinate param",
      "param angle",
      "angle angle",
      "angle from",
      "from left",
      "left horizontal",
      "horizontal direction",
      "direction at",
      "at which",
      "which the",
      "the bullet",
      "bullet is",
      "is being",
      "being fired",
      "fired return",
      "return the",
      "the new",
      "new bullet"
    ],
    "Location": "TankGun.java",
    "Content": "Produce a bullet @param startTime time when the bullet was shot @param x0 starting x-coordinate @param y0 starting y-coordinate @param angle angle from left horizontal direction at which the bullet is being fired @return the new bullet "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public abstract TankGun getNextGun()",
    "Namespace": "sem3.hw3.task2.ammu.guns",
    "Range": "1710-1863",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns",
      "guns return",
      "return the",
      "the next",
      "next gun",
      "gun in",
      "in the",
      "the list",
      "list af",
      "af all",
      "all guns"
    ],
    "Location": "TankGun.java",
    "Content": "Get the next gun in the list af all guns @return the next gun in the list af all guns "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1667-1803",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draws the",
      "the landscape",
      "landscape param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D context",
      "context to",
      "to draw",
      "draw in"
    ],
    "Location": "Landscape.java",
    "Content": " draws the landscape @param graphics { @link Graphics2D} context to draw in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getY(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1896-2086",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface",
      "surface param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate for",
      "for which",
      "which we",
      "we need",
      "need its",
      "its height",
      "height return",
      "return y",
      "y coordinate",
      "coordinate on",
      "on the",
      "the surface"
    ],
    "Location": "Landscape.java",
    "Content": "get the y-coordinate on the surface @param x x-coordinate for which we need its height @return y-coordinate on the surface "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getAngle(double x) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2542-2919",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the angle",
      "angle of",
      "of the",
      "the surface",
      "surface where",
      "where x",
      "x coordinate",
      "coordinate is",
      "is code",
      "code x",
      "x code",
      "code param",
      "param x",
      "x x",
      "x coordinate",
      "coordinate to",
      "to find",
      "find the",
      "the angle",
      "angle return",
      "return the",
      "the angle",
      "angle from",
      "from pi",
      "pi 2",
      "2 pi",
      "pi 2",
      "2 in",
      "in radians",
      "radians If",
      "If the",
      "the height",
      "height is",
      "is growing",
      "growing y",
      "y is",
      "is decreasing",
      "decreasing when",
      "when moving",
      "moving right",
      "right the",
      "the angle",
      "angle is",
      "is positive",
      "positive If",
      "If the",
      "the height",
      "height is",
      "is decreasing",
      "decreasing the",
      "the angle",
      "angle is",
      "is negative"
    ],
    "Location": "Landscape.java",
    "Content": "get the angle of the surface where x-coordinate is \u003ccode\u003ex\u003ccode\u003e @param x x-coordinate to find the angle @return the angle from [-pi2, pi2] in radians. If the heightis growing (y is decreasing) when moving right, the angle is positive.If the height is decreasing, the angle is negative. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInAir(double x, double y) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3209-3466",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground",
      "ground param",
      "param x",
      "x x",
      "x coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check param",
      "param y",
      "y y",
      "y coord",
      "coord of",
      "of the",
      "the point",
      "point to",
      "to check",
      "check return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the point",
      "point is",
      "is over",
      "over the",
      "the ground"
    ],
    "Location": "Landscape.java",
    "Content": "Check if the point is over the ground @param x x-coord of the point to check @param y y-coord of the point to check @return { @code true} if the point is over the ground "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class BulletPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "321-523",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "BulletPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class OpponentFinder ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "201-351",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class responsible",
      "responsible for",
      "for connecting",
      "connecting to",
      "to the",
      "the opponent",
      "opponent It",
      "It starts",
      "starts the",
      "the game",
      "game when",
      "when the",
      "the connection",
      "connection is",
      "is established"
    ],
    "Location": "OpponentFinder.java",
    "Content": "The class responsible for connecting to the opponentIt starts the game when the connection is established "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Receiver implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "249-449",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It receives",
      "receives all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the opponent",
      "opponent and",
      "and synchronizes",
      "synchronizes the",
      "the scene",
      "scene according",
      "according to",
      "to it"
    ],
    "Location": "Receiver.java",
    "Content": "The class implementing the conversation to the opponent.It receives all the data from the opponent and synchronizes the scene according to it "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Receiver(Tank opponent, TanksGame game, InputStream inputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "587-858",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param opponent",
      "opponent the",
      "the tank",
      "tank to",
      "to be",
      "be updated",
      "updated according",
      "according to",
      "to the",
      "the input",
      "input data",
      "data param",
      "param game",
      "game the",
      "the game",
      "game to",
      "to be",
      "be updated",
      "updated param",
      "param inputStream",
      "inputStream the",
      "the link",
      "link InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data"
    ],
    "Location": "Receiver.java",
    "Content": " @param opponent the tank to be updated according to the input data @param game the game to be updated @param inputStream the { @link InputStream} to get the data "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isDisconnected() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1088-1262",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has stopped",
      "stopped working",
      "working return",
      "return code",
      "code true",
      "true if",
      "if the",
      "the code",
      "code Receiver",
      "Receiver has",
      "has terminated"
    ],
    "Location": "Receiver.java",
    "Content": "Checks if the { @code Receiver} has stopped working @return { @code true} if the { @code Receiver} has terminated "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class Sender implements Runnable ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "265-437",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "The class",
      "class implementing",
      "implementing the",
      "the conversation",
      "conversation to",
      "to the",
      "the opponent",
      "opponent It",
      "It gets",
      "gets all",
      "all the",
      "the data",
      "data from",
      "from the",
      "the game",
      "game and",
      "and sends",
      "sends it",
      "it every",
      "every while"
    ],
    "Location": "Sender.java",
    "Content": "The class implementing the conversation to the opponent.It gets all the data from the game and sends it every while "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Sender(Tank tank, OutputStream outputStream) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "542-750",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "param tank",
      "tank the",
      "the tank",
      "tank which",
      "which position",
      "position is",
      "is needed",
      "needed to",
      "to be",
      "be sent",
      "sent param",
      "param outputStream",
      "outputStream the",
      "the code",
      "code OutputStream",
      "OutputStream to",
      "to put",
      "put all",
      "all the",
      "the data",
      "data in"
    ],
    "Location": "Sender.java",
    "Content": " @param tank the tank which position is needed to be sent @param outputStream the { @code OutputStream} to put all the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendBulletPackage(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "838-989",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent that",
      "that we",
      "we have",
      "have shot",
      "shot param",
      "param bullet",
      "bullet the",
      "the bullet",
      "bullet we",
      "we shot"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent that we have shot @param bullet the bullet we shot "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void sendGameEnded() ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "1450-1588",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Notify the",
      "the opponent",
      "opponent we",
      "we have",
      "have lost",
      "lost the",
      "the game",
      "game Triples",
      "Triples the",
      "the notification",
      "notification to",
      "to be",
      "be sure"
    ],
    "Location": "Sender.java",
    "Content": "Notify the opponent we have lost the game.Triples the notification to be sure "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TankPackage ",
    "Namespace": "sem3.hw3.task2.net.protocol",
    "Range": "38-238",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A class",
      "class containing",
      "containing all",
      "all the",
      "the information",
      "information about",
      "about the",
      "the tank",
      "tank position",
      "position on",
      "on the",
      "the field",
      "field It",
      "It is",
      "is being",
      "being rapidly",
      "rapidly sent",
      "sent from",
      "from one",
      "one player",
      "player to",
      "to another",
      "another to",
      "to synchronize",
      "synchronize tank",
      "tank positions"
    ],
    "Location": "TankPackage.java",
    "Content": "A class containing all the information about the tank position on the field.It is being rapidly sent from one player to another to synchronize tank positions. "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isConnected() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "952-1145",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Checks if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server",
      "server return",
      "return true",
      "true if",
      "if the",
      "the client",
      "client has",
      "has successfully",
      "successfully connected",
      "connected to",
      "to the",
      "the server"
    ],
    "Location": "TanksClient.java",
    "Content": "Checks if the client has successfully connected to the server @return { @true} if the client has successfully connected to the server "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public String getErrorMessage() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1185-1338",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "What went",
      "went wrong",
      "wrong if",
      "if something",
      "something did",
      "did return",
      "return the",
      "the message",
      "message with",
      "with the",
      "the description",
      "description of",
      "of the",
      "the error"
    ],
    "Location": "TanksClient.java",
    "Content": "What went wrong (if something did)? @return the message with the description of the error "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public InputStream getInput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1379-1534",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to send",
      "send some",
      "some data",
      "data to",
      "to the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to put",
      "put the",
      "the data",
      "data in"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to send some data to the server @return { @code InputStream} to put the data in "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public OutputStream getOutput() ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "1568-1728",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the stream",
      "stream to",
      "to get",
      "get some",
      "some data",
      "data from",
      "from the",
      "the server",
      "server return",
      "return code",
      "code InputStream",
      "InputStream to",
      "to get",
      "get the",
      "the data",
      "data from"
    ],
    "Location": "TanksClient.java",
    "Content": "Get the stream to get some data from the server @return { @code InputStream} to get the data from "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public class TanksServer implements Runnable ",
    "Namespace": "sem3.hw3.task2.net",
    "Range": "258-516",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A simple",
      "simple data",
      "data passing",
      "passing server",
      "server for",
      "for two",
      "two clients",
      "clients It",
      "It does",
      "does all",
      "all the",
      "the initial",
      "initial conversation",
      "conversation with",
      "with clients",
      "clients When",
      "When it",
      "it establishes",
      "establishes a",
      "a connection",
      "connection with",
      "with two",
      "two clients",
      "clients it",
      "it just",
      "just passes",
      "passes all",
      "all the",
      "the data",
      "data from",
      "from one",
      "one to",
      "to another"
    ],
    "Location": "TanksServer.java",
    "Content": "A simple data-passing server for two clients.It does all the initial conversation with clients.When it establishes a connection with two clients it just passes all the data from one to another "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank(Landscape land, boolean isOpponent, TanksGame game, TankGun gun, int xPos) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1140-1406",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new tank",
      "tank located",
      "located on",
      "on code",
      "code land",
      "land param",
      "param land",
      "land link",
      "link Landscape",
      "Landscape where",
      "where to",
      "to locate",
      "locate our",
      "our new",
      "new tank",
      "tank param",
      "param xPos",
      "xPos our",
      "our tank",
      "tank initial",
      "initial x",
      "x position"
    ],
    "Location": "Tank.java",
    "Content": "Creates new tank located on { @code land} @param land { @link Landscape}, where to locate our new tank @param xPos our tank initial x-position "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getX() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1558-1680",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank",
      "tank return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the tank @return the x-coordinate of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterX(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1713-2061",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the x",
      "x coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the x",
      "x coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the x-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the x-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public double getCenterY(double landAngle) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2125-2473",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the y",
      "y coordinate",
      "coordinate of",
      "of the",
      "the center",
      "center of",
      "of the",
      "the tank",
      "tank Center",
      "Center is",
      "is also",
      "also the",
      "the point",
      "point from",
      "from which",
      "which the",
      "the bullet",
      "bullet is",
      "is fired",
      "fired param",
      "param landAngle",
      "landAngle the",
      "the angle",
      "angle returned",
      "returned by",
      "by land",
      "land getAngle",
      "getAngle xPos",
      "xPos used",
      "used to",
      "to optimize",
      "optimize angle",
      "angle evaluations",
      "evaluations return",
      "return the",
      "the y",
      "y coordinate",
      "coordinate from",
      "from which",
      "which the",
      "the bullet",
      "bullet would",
      "would be",
      "be fired"
    ],
    "Location": "Tank.java",
    "Content": "Get the y-coordinate of the center of the tankCenter is also the point from which the bullet is fired @param landAngle the angle returned by land.getAngle(xPos); used to optimize angle evaluations @return the y-coordinate from which the bullet would be fired "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void shoot() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2975-3076",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a bullet",
      "bullet to",
      "to the",
      "the game",
      "game based",
      "based on",
      "on the",
      "the current",
      "current tank",
      "tank state"
    ],
    "Location": "Tank.java",
    "Content": "Add a bullet to the game based on the current tank state "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3542-3723",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "draw the",
      "the tank",
      "tank into",
      "into the",
      "the code",
      "code graphics",
      "graphics param",
      "param graphics",
      "graphics the",
      "the link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "Tank.java",
    "Content": "draw the tank into the { @code graphics} @param graphics the { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void move(long ms) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "5591-5841",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update all",
      "all necessary",
      "necessary parameters",
      "parameters to",
      "to move",
      "move the",
      "the tank",
      "tank according",
      "according to",
      "to how",
      "how much",
      "much time",
      "time has",
      "has passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation param",
      "param ms",
      "ms time",
      "time passed",
      "passed since",
      "since the",
      "the last",
      "last updation",
      "updation in",
      "in milliseconds"
    ],
    "Location": "Tank.java",
    "Content": "update all necessary parameters to move the tank according tohow much time has passed since the last updation @param ms time passed since the last updation in milliseconds "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized TankPackage getPosition() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7193-7408",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "get the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank",
      "tank return",
      "return the",
      "the link",
      "link TankPackage",
      "TankPackage object",
      "object with",
      "with actual",
      "actual data",
      "data about",
      "about the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "get the { @link TankPackage} object with actual data about the tank @return the { @link TankPackage} object with actual data about the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void updatePosition(TankPackage tankPackage) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7616-7933",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "update position",
      "position based",
      "based on",
      "on the",
      "the code",
      "code tankPackage",
      "tankPackage while",
      "while our",
      "our tank",
      "tank is",
      "is updated",
      "updated based",
      "based on",
      "on key",
      "key presses",
      "presses the",
      "the opponent",
      "opponent one",
      "one is",
      "is updated",
      "updated by",
      "by calling",
      "calling this",
      "this method",
      "method param",
      "param tankPackage",
      "tankPackage information",
      "information about",
      "about the",
      "the new",
      "new position",
      "position of",
      "of the",
      "the tank"
    ],
    "Location": "Tank.java",
    "Content": "update position based on the { @code tankPackage}while our tank is updated based on key presses, the opponent one is updated by calling this method @param tankPackage information about the new position of the tank "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public TanksGame(long startTime, boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "1620-2092",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Creates new",
      "new code",
      "code TankGame",
      "TankGame with",
      "with 2",
      "2 tanks",
      "tanks with",
      "with x",
      "x coords",
      "coords set",
      "set to",
      "to 100",
      "100 and",
      "and to",
      "to 500",
      "500 respectively",
      "respectively param",
      "param startTime",
      "startTime System",
      "System time",
      "time when",
      "when the",
      "the game",
      "game is",
      "is being",
      "being init",
      "init param",
      "param isSecondPlayer",
      "isSecondPlayer code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are the",
      "the tank",
      "tank with",
      "with x",
      "x coord",
      "coord set",
      "set to",
      "to 500",
      "500 param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksGame.java",
    "Content": "Creates new { @code TankGame} with 2 tanks with x-coords set to 100 and to 500 respectively @param startTime System time when the game is being init @param isSecondPlayer { @code true} if we are the tank with x-coord set to 500 @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "2944-3120",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered ours",
      "ours param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered ours @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void addOpponentBullet(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3256-3446",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Add a",
      "a new",
      "new bullet",
      "bullet to",
      "to the",
      "the scene",
      "scene The",
      "The bullet",
      "bullet is",
      "is considered",
      "considered opponent\u0027s",
      "opponent\u0027s param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add"
    ],
    "Location": "TanksGame.java",
    "Content": "Add a new bullet to the scene. The bullet is considered opponent\u0027s @param bullet a bullet to add "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void handleOpponentShoot(TankBullet bullet) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3545-3882",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "A method",
      "method that",
      "that is",
      "is used",
      "used by",
      "by link",
      "link Receiver",
      "Receiver to",
      "to add",
      "add a",
      "a bullet",
      "bullet smartly",
      "smartly It",
      "It discards",
      "discards bad",
      "bad bullets",
      "bullets and",
      "and can",
      "can manually",
      "manually create",
      "create the",
      "the one",
      "one lost",
      "lost with",
      "with loosing",
      "loosing a",
      "a bit",
      "bit of",
      "of precision",
      "precision param",
      "param bullet",
      "bullet a",
      "a bullet",
      "bullet to",
      "to add",
      "add if",
      "if null",
      "null the",
      "the bullet",
      "bullet will",
      "will be",
      "be created",
      "created manually"
    ],
    "Location": "TanksGame.java",
    "Content": "A method that is used by { @link Receiver} to add a bullet smartlyIt discards bad bullets and can manually create the one lost with loosing a bit of precision @param bullet a bullet to add; if null, the bullet will be created manually "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void handleGunChanged() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4396-4497",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Used by",
      "by our",
      "our tank",
      "tank to",
      "to notify",
      "notify the",
      "the gun",
      "gun is",
      "is changed"
    ],
    "Location": "TanksGame.java",
    "Content": "Used by our tank to notify the gun is changed "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public KeyListener getKeyListener() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "4542-4710",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses",
      "presses return",
      "return the",
      "the tank",
      "tank that",
      "that will",
      "will handle",
      "handle with",
      "with key",
      "key presses"
    ],
    "Location": "TanksGame.java",
    "Content": "Return the tank that will handle with key presses @return the tank that will handle with key presses "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public synchronized void draw(Graphics2D graphics) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "7591-7749",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Draw the",
      "the whole",
      "whole scene",
      "scene param",
      "param graphics",
      "graphics link",
      "link Graphics2D",
      "Graphics2D object",
      "object to",
      "to draw",
      "draw into"
    ],
    "Location": "TanksGame.java",
    "Content": "Draw the whole scene @param graphics { @link Graphics2D} object to draw into "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean cycle(long time) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "8109-8283",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Update the",
      "the scene",
      "scene param",
      "param time",
      "time current",
      "current time",
      "time in",
      "in millis",
      "millis return",
      "return code",
      "code true",
      "true if",
      "if there",
      "there is",
      "is anything",
      "anything to",
      "to update"
    ],
    "Location": "TanksGame.java",
    "Content": "Update the scene @param time current time in millis @return { @code true} if there is anything to update "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public Tank getWinnerTank() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "9114-9278",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Get the",
      "the winner",
      "winner tank",
      "tank Do",
      "Do not",
      "not use",
      "use when",
      "when the",
      "the game",
      "game is",
      "is not",
      "not finished",
      "finished return",
      "return the",
      "the tank",
      "tank which",
      "which won",
      "won the",
      "the game"
    ],
    "Location": "TanksGame.java",
    "Content": "Get the winner tankDo not use when the game is not finished. @return the tank which won the game "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isWaiting() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3162-3315",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent",
      "opponent return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are waiting",
      "waiting for",
      "for an",
      "an opponent"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are waiting for an opponent @return { @code true} if we are waiting for an opponent "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public boolean isInGame() ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3375-3503",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Check if",
      "if we",
      "we are",
      "are playing",
      "playing now",
      "now return",
      "return code",
      "code true",
      "true if",
      "if we",
      "we are",
      "are playing",
      "playing now"
    ],
    "Location": "TanksPanel.java",
    "Content": "Check if we are playing now @return { @code true} if we are playing now "
  },
  {
    "NameOfCommits": "81b73f931c48b300cac55d6c7b833eaa29efae04",
    "Signature": "public void startGame(boolean isSecondPlayer, TanksClient client) ",
    "Namespace": "sem3.hw3.task2",
    "Range": "3554-3935",
    "Date": "2016-12-08T15:14:54Z",
    "NGrams": [
      "Start a",
      "a new",
      "new game",
      "game Expects",
      "Expects that",
      "that the",
      "the connection",
      "connection to",
      "to our",
      "our opponent",
      "opponent has",
      "has already",
      "already been",
      "been established",
      "established param",
      "param isSecondPlayer",
      "isSecondPlayer are",
      "are we",
      "we the",
      "the right",
      "right player",
      "player on",
      "on start",
      "start param",
      "param client",
      "client link",
      "link TanksClient",
      "TanksClient entity",
      "entity connected",
      "connected to",
      "to the",
      "the server",
      "server all",
      "all initial",
      "initial connection",
      "connection procedures",
      "procedures are",
      "are expected",
      "expected to",
      "to be",
      "be done"
    ],
    "Location": "TanksPanel.java",
    "Content": "Start a new gameExpects that the connection to our opponent has already been established @param isSecondPlayer are we the right player on start? @param client { @link TanksClient} entity connected to the server; all initial connection procedures are expected to be done "
  },
  {
    "NameOfCommits": "1c820199fc3155c2949aaebe50ae7872883ab9e9",
    "Signature": "void addFirst(T value)",
    "Namespace": "sem2.hw2.task2",
    "Range": "105-231",
    "Date": "2018-05-25T12:47:40Z",
    "NGrams": [
      "Adds a",
      "a value",
      "value to",
      "to the",
      "the beginning",
      "beginning of",
      "of the",
      "the list",
      "list param",
      "param value",
      "value the",
      "the thing",
      "thing you",
      "you add"
    ],
    "Location": "List.java",
    "Content": "Adds a value to the beginning of the list @param value the thing you add "
  }
]
